// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg.raffle.proto

package game.msg;

public final class MsgRaffle {
  private MsgRaffle() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface SCOpenLuckTurntableOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .game.msg.EModeType modeType = 1;
    /**
     * <code>optional .game.msg.EModeType modeType = 1;</code>
     *
     * <pre>
     * 玩法类型 (废弃)
     * </pre>
     */
    boolean hasModeType();
    /**
     * <code>optional .game.msg.EModeType modeType = 1;</code>
     *
     * <pre>
     * 玩法类型 (废弃)
     * </pre>
     */
    game.msg.Define.EModeType getModeType();

    // optional int32 lv = 2;
    /**
     * <code>optional int32 lv = 2;</code>
     *
     * <pre>
     * 转盘级别（洞天福地层级..等）（废弃）
     * </pre>
     */
    boolean hasLv();
    /**
     * <code>optional int32 lv = 2;</code>
     *
     * <pre>
     * 转盘级别（洞天福地层级..等）（废弃）
     * </pre>
     */
    int getLv();

    // optional int32 sn = 3;
    /**
     * <code>optional int32 sn = 3;</code>
     *
     * <pre>
     * 转盘sn = LuckTurnTable.sn
     * </pre>
     */
    boolean hasSn();
    /**
     * <code>optional int32 sn = 3;</code>
     *
     * <pre>
     * 转盘sn = LuckTurnTable.sn
     * </pre>
     */
    int getSn();
  }
  /**
   * Protobuf type {@code game.msg.SCOpenLuckTurntable}
   *
   * <pre>
   * 通知，打开幸运转盘
   * </pre>
   */
  public static final class SCOpenLuckTurntable extends
      com.google.protobuf.GeneratedMessage
      implements SCOpenLuckTurntableOrBuilder {
    // Use SCOpenLuckTurntable.newBuilder() to construct.
    private SCOpenLuckTurntable(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SCOpenLuckTurntable(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SCOpenLuckTurntable defaultInstance;
    public static SCOpenLuckTurntable getDefaultInstance() {
      return defaultInstance;
    }

    public SCOpenLuckTurntable getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SCOpenLuckTurntable(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              game.msg.Define.EModeType value = game.msg.Define.EModeType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                modeType_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              lv_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              sn_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game.msg.MsgRaffle.internal_static_game_msg_SCOpenLuckTurntable_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game.msg.MsgRaffle.internal_static_game_msg_SCOpenLuckTurntable_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game.msg.MsgRaffle.SCOpenLuckTurntable.class, game.msg.MsgRaffle.SCOpenLuckTurntable.Builder.class);
    }

    public static com.google.protobuf.Parser<SCOpenLuckTurntable> PARSER =
        new com.google.protobuf.AbstractParser<SCOpenLuckTurntable>() {
      public SCOpenLuckTurntable parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SCOpenLuckTurntable(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SCOpenLuckTurntable> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .game.msg.EModeType modeType = 1;
    public static final int MODETYPE_FIELD_NUMBER = 1;
    private game.msg.Define.EModeType modeType_;
    /**
     * <code>optional .game.msg.EModeType modeType = 1;</code>
     *
     * <pre>
     * 玩法类型 (废弃)
     * </pre>
     */
    public boolean hasModeType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .game.msg.EModeType modeType = 1;</code>
     *
     * <pre>
     * 玩法类型 (废弃)
     * </pre>
     */
    public game.msg.Define.EModeType getModeType() {
      return modeType_;
    }

    // optional int32 lv = 2;
    public static final int LV_FIELD_NUMBER = 2;
    private int lv_;
    /**
     * <code>optional int32 lv = 2;</code>
     *
     * <pre>
     * 转盘级别（洞天福地层级..等）（废弃）
     * </pre>
     */
    public boolean hasLv() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 lv = 2;</code>
     *
     * <pre>
     * 转盘级别（洞天福地层级..等）（废弃）
     * </pre>
     */
    public int getLv() {
      return lv_;
    }

    // optional int32 sn = 3;
    public static final int SN_FIELD_NUMBER = 3;
    private int sn_;
    /**
     * <code>optional int32 sn = 3;</code>
     *
     * <pre>
     * 转盘sn = LuckTurnTable.sn
     * </pre>
     */
    public boolean hasSn() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 sn = 3;</code>
     *
     * <pre>
     * 转盘sn = LuckTurnTable.sn
     * </pre>
     */
    public int getSn() {
      return sn_;
    }

    private void initFields() {
      modeType_ = game.msg.Define.EModeType.ModeNone;
      lv_ = 0;
      sn_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, modeType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, lv_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, sn_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, modeType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, lv_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, sn_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game.msg.MsgRaffle.SCOpenLuckTurntable parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgRaffle.SCOpenLuckTurntable parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgRaffle.SCOpenLuckTurntable parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgRaffle.SCOpenLuckTurntable parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgRaffle.SCOpenLuckTurntable parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgRaffle.SCOpenLuckTurntable parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game.msg.MsgRaffle.SCOpenLuckTurntable parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game.msg.MsgRaffle.SCOpenLuckTurntable parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game.msg.MsgRaffle.SCOpenLuckTurntable parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgRaffle.SCOpenLuckTurntable parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game.msg.MsgRaffle.SCOpenLuckTurntable prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game.msg.SCOpenLuckTurntable}
     *
     * <pre>
     * 通知，打开幸运转盘
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game.msg.MsgRaffle.SCOpenLuckTurntableOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game.msg.MsgRaffle.internal_static_game_msg_SCOpenLuckTurntable_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game.msg.MsgRaffle.internal_static_game_msg_SCOpenLuckTurntable_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game.msg.MsgRaffle.SCOpenLuckTurntable.class, game.msg.MsgRaffle.SCOpenLuckTurntable.Builder.class);
      }

      // Construct using game.msg.MsgRaffle.SCOpenLuckTurntable.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        modeType_ = game.msg.Define.EModeType.ModeNone;
        bitField0_ = (bitField0_ & ~0x00000001);
        lv_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        sn_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game.msg.MsgRaffle.internal_static_game_msg_SCOpenLuckTurntable_descriptor;
      }

      public game.msg.MsgRaffle.SCOpenLuckTurntable getDefaultInstanceForType() {
        return game.msg.MsgRaffle.SCOpenLuckTurntable.getDefaultInstance();
      }

      public game.msg.MsgRaffle.SCOpenLuckTurntable build() {
        game.msg.MsgRaffle.SCOpenLuckTurntable result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game.msg.MsgRaffle.SCOpenLuckTurntable buildPartial() {
        game.msg.MsgRaffle.SCOpenLuckTurntable result = new game.msg.MsgRaffle.SCOpenLuckTurntable(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.modeType_ = modeType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.lv_ = lv_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.sn_ = sn_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game.msg.MsgRaffle.SCOpenLuckTurntable) {
          return mergeFrom((game.msg.MsgRaffle.SCOpenLuckTurntable)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game.msg.MsgRaffle.SCOpenLuckTurntable other) {
        if (other == game.msg.MsgRaffle.SCOpenLuckTurntable.getDefaultInstance()) return this;
        if (other.hasModeType()) {
          setModeType(other.getModeType());
        }
        if (other.hasLv()) {
          setLv(other.getLv());
        }
        if (other.hasSn()) {
          setSn(other.getSn());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game.msg.MsgRaffle.SCOpenLuckTurntable parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game.msg.MsgRaffle.SCOpenLuckTurntable) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .game.msg.EModeType modeType = 1;
      private game.msg.Define.EModeType modeType_ = game.msg.Define.EModeType.ModeNone;
      /**
       * <code>optional .game.msg.EModeType modeType = 1;</code>
       *
       * <pre>
       * 玩法类型 (废弃)
       * </pre>
       */
      public boolean hasModeType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .game.msg.EModeType modeType = 1;</code>
       *
       * <pre>
       * 玩法类型 (废弃)
       * </pre>
       */
      public game.msg.Define.EModeType getModeType() {
        return modeType_;
      }
      /**
       * <code>optional .game.msg.EModeType modeType = 1;</code>
       *
       * <pre>
       * 玩法类型 (废弃)
       * </pre>
       */
      public Builder setModeType(game.msg.Define.EModeType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        modeType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .game.msg.EModeType modeType = 1;</code>
       *
       * <pre>
       * 玩法类型 (废弃)
       * </pre>
       */
      public Builder clearModeType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        modeType_ = game.msg.Define.EModeType.ModeNone;
        onChanged();
        return this;
      }

      // optional int32 lv = 2;
      private int lv_ ;
      /**
       * <code>optional int32 lv = 2;</code>
       *
       * <pre>
       * 转盘级别（洞天福地层级..等）（废弃）
       * </pre>
       */
      public boolean hasLv() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 lv = 2;</code>
       *
       * <pre>
       * 转盘级别（洞天福地层级..等）（废弃）
       * </pre>
       */
      public int getLv() {
        return lv_;
      }
      /**
       * <code>optional int32 lv = 2;</code>
       *
       * <pre>
       * 转盘级别（洞天福地层级..等）（废弃）
       * </pre>
       */
      public Builder setLv(int value) {
        bitField0_ |= 0x00000002;
        lv_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 lv = 2;</code>
       *
       * <pre>
       * 转盘级别（洞天福地层级..等）（废弃）
       * </pre>
       */
      public Builder clearLv() {
        bitField0_ = (bitField0_ & ~0x00000002);
        lv_ = 0;
        onChanged();
        return this;
      }

      // optional int32 sn = 3;
      private int sn_ ;
      /**
       * <code>optional int32 sn = 3;</code>
       *
       * <pre>
       * 转盘sn = LuckTurnTable.sn
       * </pre>
       */
      public boolean hasSn() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 sn = 3;</code>
       *
       * <pre>
       * 转盘sn = LuckTurnTable.sn
       * </pre>
       */
      public int getSn() {
        return sn_;
      }
      /**
       * <code>optional int32 sn = 3;</code>
       *
       * <pre>
       * 转盘sn = LuckTurnTable.sn
       * </pre>
       */
      public Builder setSn(int value) {
        bitField0_ |= 0x00000004;
        sn_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 sn = 3;</code>
       *
       * <pre>
       * 转盘sn = LuckTurnTable.sn
       * </pre>
       */
      public Builder clearSn() {
        bitField0_ = (bitField0_ & ~0x00000004);
        sn_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:game.msg.SCOpenLuckTurntable)
    }

    static {
      defaultInstance = new SCOpenLuckTurntable(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game.msg.SCOpenLuckTurntable)
  }

  public interface CSLuckTurntableOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code game.msg.CSLuckTurntable}
   *
   * <pre>
   * 请求，摇奖幸运转盘
   * </pre>
   */
  public static final class CSLuckTurntable extends
      com.google.protobuf.GeneratedMessage
      implements CSLuckTurntableOrBuilder {
    // Use CSLuckTurntable.newBuilder() to construct.
    private CSLuckTurntable(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CSLuckTurntable(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CSLuckTurntable defaultInstance;
    public static CSLuckTurntable getDefaultInstance() {
      return defaultInstance;
    }

    public CSLuckTurntable getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CSLuckTurntable(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game.msg.MsgRaffle.internal_static_game_msg_CSLuckTurntable_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game.msg.MsgRaffle.internal_static_game_msg_CSLuckTurntable_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game.msg.MsgRaffle.CSLuckTurntable.class, game.msg.MsgRaffle.CSLuckTurntable.Builder.class);
    }

    public static com.google.protobuf.Parser<CSLuckTurntable> PARSER =
        new com.google.protobuf.AbstractParser<CSLuckTurntable>() {
      public CSLuckTurntable parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CSLuckTurntable(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CSLuckTurntable> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game.msg.MsgRaffle.CSLuckTurntable parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgRaffle.CSLuckTurntable parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgRaffle.CSLuckTurntable parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgRaffle.CSLuckTurntable parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgRaffle.CSLuckTurntable parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgRaffle.CSLuckTurntable parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game.msg.MsgRaffle.CSLuckTurntable parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game.msg.MsgRaffle.CSLuckTurntable parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game.msg.MsgRaffle.CSLuckTurntable parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgRaffle.CSLuckTurntable parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game.msg.MsgRaffle.CSLuckTurntable prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game.msg.CSLuckTurntable}
     *
     * <pre>
     * 请求，摇奖幸运转盘
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game.msg.MsgRaffle.CSLuckTurntableOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game.msg.MsgRaffle.internal_static_game_msg_CSLuckTurntable_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game.msg.MsgRaffle.internal_static_game_msg_CSLuckTurntable_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game.msg.MsgRaffle.CSLuckTurntable.class, game.msg.MsgRaffle.CSLuckTurntable.Builder.class);
      }

      // Construct using game.msg.MsgRaffle.CSLuckTurntable.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game.msg.MsgRaffle.internal_static_game_msg_CSLuckTurntable_descriptor;
      }

      public game.msg.MsgRaffle.CSLuckTurntable getDefaultInstanceForType() {
        return game.msg.MsgRaffle.CSLuckTurntable.getDefaultInstance();
      }

      public game.msg.MsgRaffle.CSLuckTurntable build() {
        game.msg.MsgRaffle.CSLuckTurntable result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game.msg.MsgRaffle.CSLuckTurntable buildPartial() {
        game.msg.MsgRaffle.CSLuckTurntable result = new game.msg.MsgRaffle.CSLuckTurntable(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game.msg.MsgRaffle.CSLuckTurntable) {
          return mergeFrom((game.msg.MsgRaffle.CSLuckTurntable)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game.msg.MsgRaffle.CSLuckTurntable other) {
        if (other == game.msg.MsgRaffle.CSLuckTurntable.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game.msg.MsgRaffle.CSLuckTurntable parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game.msg.MsgRaffle.CSLuckTurntable) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:game.msg.CSLuckTurntable)
    }

    static {
      defaultInstance = new CSLuckTurntable(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game.msg.CSLuckTurntable)
  }

  public interface SCLuckTurntableOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 resultIndex = 1;
    /**
     * <code>optional int32 resultIndex = 1;</code>
     *
     * <pre>
     * 中奖结果
     * </pre>
     */
    boolean hasResultIndex();
    /**
     * <code>optional int32 resultIndex = 1;</code>
     *
     * <pre>
     * 中奖结果
     * </pre>
     */
    int getResultIndex();

    // optional int32 count = 2;
    /**
     * <code>optional int32 count = 2;</code>
     *
     * <pre>
     * 本次累计抽奖次数
     * </pre>
     */
    boolean hasCount();
    /**
     * <code>optional int32 count = 2;</code>
     *
     * <pre>
     * 本次累计抽奖次数
     * </pre>
     */
    int getCount();
  }
  /**
   * Protobuf type {@code game.msg.SCLuckTurntable}
   *
   * <pre>
   * 应答，摇奖幸运转盘
   * </pre>
   */
  public static final class SCLuckTurntable extends
      com.google.protobuf.GeneratedMessage
      implements SCLuckTurntableOrBuilder {
    // Use SCLuckTurntable.newBuilder() to construct.
    private SCLuckTurntable(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SCLuckTurntable(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SCLuckTurntable defaultInstance;
    public static SCLuckTurntable getDefaultInstance() {
      return defaultInstance;
    }

    public SCLuckTurntable getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SCLuckTurntable(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              resultIndex_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              count_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game.msg.MsgRaffle.internal_static_game_msg_SCLuckTurntable_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game.msg.MsgRaffle.internal_static_game_msg_SCLuckTurntable_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game.msg.MsgRaffle.SCLuckTurntable.class, game.msg.MsgRaffle.SCLuckTurntable.Builder.class);
    }

    public static com.google.protobuf.Parser<SCLuckTurntable> PARSER =
        new com.google.protobuf.AbstractParser<SCLuckTurntable>() {
      public SCLuckTurntable parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SCLuckTurntable(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SCLuckTurntable> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 resultIndex = 1;
    public static final int RESULTINDEX_FIELD_NUMBER = 1;
    private int resultIndex_;
    /**
     * <code>optional int32 resultIndex = 1;</code>
     *
     * <pre>
     * 中奖结果
     * </pre>
     */
    public boolean hasResultIndex() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 resultIndex = 1;</code>
     *
     * <pre>
     * 中奖结果
     * </pre>
     */
    public int getResultIndex() {
      return resultIndex_;
    }

    // optional int32 count = 2;
    public static final int COUNT_FIELD_NUMBER = 2;
    private int count_;
    /**
     * <code>optional int32 count = 2;</code>
     *
     * <pre>
     * 本次累计抽奖次数
     * </pre>
     */
    public boolean hasCount() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 count = 2;</code>
     *
     * <pre>
     * 本次累计抽奖次数
     * </pre>
     */
    public int getCount() {
      return count_;
    }

    private void initFields() {
      resultIndex_ = 0;
      count_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, resultIndex_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, count_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, resultIndex_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, count_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game.msg.MsgRaffle.SCLuckTurntable parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgRaffle.SCLuckTurntable parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgRaffle.SCLuckTurntable parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgRaffle.SCLuckTurntable parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgRaffle.SCLuckTurntable parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgRaffle.SCLuckTurntable parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game.msg.MsgRaffle.SCLuckTurntable parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game.msg.MsgRaffle.SCLuckTurntable parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game.msg.MsgRaffle.SCLuckTurntable parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgRaffle.SCLuckTurntable parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game.msg.MsgRaffle.SCLuckTurntable prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game.msg.SCLuckTurntable}
     *
     * <pre>
     * 应答，摇奖幸运转盘
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game.msg.MsgRaffle.SCLuckTurntableOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game.msg.MsgRaffle.internal_static_game_msg_SCLuckTurntable_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game.msg.MsgRaffle.internal_static_game_msg_SCLuckTurntable_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game.msg.MsgRaffle.SCLuckTurntable.class, game.msg.MsgRaffle.SCLuckTurntable.Builder.class);
      }

      // Construct using game.msg.MsgRaffle.SCLuckTurntable.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        resultIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        count_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game.msg.MsgRaffle.internal_static_game_msg_SCLuckTurntable_descriptor;
      }

      public game.msg.MsgRaffle.SCLuckTurntable getDefaultInstanceForType() {
        return game.msg.MsgRaffle.SCLuckTurntable.getDefaultInstance();
      }

      public game.msg.MsgRaffle.SCLuckTurntable build() {
        game.msg.MsgRaffle.SCLuckTurntable result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game.msg.MsgRaffle.SCLuckTurntable buildPartial() {
        game.msg.MsgRaffle.SCLuckTurntable result = new game.msg.MsgRaffle.SCLuckTurntable(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.resultIndex_ = resultIndex_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.count_ = count_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game.msg.MsgRaffle.SCLuckTurntable) {
          return mergeFrom((game.msg.MsgRaffle.SCLuckTurntable)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game.msg.MsgRaffle.SCLuckTurntable other) {
        if (other == game.msg.MsgRaffle.SCLuckTurntable.getDefaultInstance()) return this;
        if (other.hasResultIndex()) {
          setResultIndex(other.getResultIndex());
        }
        if (other.hasCount()) {
          setCount(other.getCount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game.msg.MsgRaffle.SCLuckTurntable parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game.msg.MsgRaffle.SCLuckTurntable) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 resultIndex = 1;
      private int resultIndex_ ;
      /**
       * <code>optional int32 resultIndex = 1;</code>
       *
       * <pre>
       * 中奖结果
       * </pre>
       */
      public boolean hasResultIndex() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 resultIndex = 1;</code>
       *
       * <pre>
       * 中奖结果
       * </pre>
       */
      public int getResultIndex() {
        return resultIndex_;
      }
      /**
       * <code>optional int32 resultIndex = 1;</code>
       *
       * <pre>
       * 中奖结果
       * </pre>
       */
      public Builder setResultIndex(int value) {
        bitField0_ |= 0x00000001;
        resultIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 resultIndex = 1;</code>
       *
       * <pre>
       * 中奖结果
       * </pre>
       */
      public Builder clearResultIndex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        resultIndex_ = 0;
        onChanged();
        return this;
      }

      // optional int32 count = 2;
      private int count_ ;
      /**
       * <code>optional int32 count = 2;</code>
       *
       * <pre>
       * 本次累计抽奖次数
       * </pre>
       */
      public boolean hasCount() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 count = 2;</code>
       *
       * <pre>
       * 本次累计抽奖次数
       * </pre>
       */
      public int getCount() {
        return count_;
      }
      /**
       * <code>optional int32 count = 2;</code>
       *
       * <pre>
       * 本次累计抽奖次数
       * </pre>
       */
      public Builder setCount(int value) {
        bitField0_ |= 0x00000002;
        count_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 count = 2;</code>
       *
       * <pre>
       * 本次累计抽奖次数
       * </pre>
       */
      public Builder clearCount() {
        bitField0_ = (bitField0_ & ~0x00000002);
        count_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:game.msg.SCLuckTurntable)
    }

    static {
      defaultInstance = new SCLuckTurntable(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game.msg.SCLuckTurntable)
  }

  public interface CSLeaveLuckTurntableOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code game.msg.CSLeaveLuckTurntable}
   *
   * <pre>
   * 请求，离开通用玩法幸运转盘
   * </pre>
   */
  public static final class CSLeaveLuckTurntable extends
      com.google.protobuf.GeneratedMessage
      implements CSLeaveLuckTurntableOrBuilder {
    // Use CSLeaveLuckTurntable.newBuilder() to construct.
    private CSLeaveLuckTurntable(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CSLeaveLuckTurntable(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CSLeaveLuckTurntable defaultInstance;
    public static CSLeaveLuckTurntable getDefaultInstance() {
      return defaultInstance;
    }

    public CSLeaveLuckTurntable getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CSLeaveLuckTurntable(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game.msg.MsgRaffle.internal_static_game_msg_CSLeaveLuckTurntable_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game.msg.MsgRaffle.internal_static_game_msg_CSLeaveLuckTurntable_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game.msg.MsgRaffle.CSLeaveLuckTurntable.class, game.msg.MsgRaffle.CSLeaveLuckTurntable.Builder.class);
    }

    public static com.google.protobuf.Parser<CSLeaveLuckTurntable> PARSER =
        new com.google.protobuf.AbstractParser<CSLeaveLuckTurntable>() {
      public CSLeaveLuckTurntable parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CSLeaveLuckTurntable(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CSLeaveLuckTurntable> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game.msg.MsgRaffle.CSLeaveLuckTurntable parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgRaffle.CSLeaveLuckTurntable parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgRaffle.CSLeaveLuckTurntable parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgRaffle.CSLeaveLuckTurntable parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgRaffle.CSLeaveLuckTurntable parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgRaffle.CSLeaveLuckTurntable parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game.msg.MsgRaffle.CSLeaveLuckTurntable parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game.msg.MsgRaffle.CSLeaveLuckTurntable parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game.msg.MsgRaffle.CSLeaveLuckTurntable parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgRaffle.CSLeaveLuckTurntable parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game.msg.MsgRaffle.CSLeaveLuckTurntable prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game.msg.CSLeaveLuckTurntable}
     *
     * <pre>
     * 请求，离开通用玩法幸运转盘
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game.msg.MsgRaffle.CSLeaveLuckTurntableOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game.msg.MsgRaffle.internal_static_game_msg_CSLeaveLuckTurntable_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game.msg.MsgRaffle.internal_static_game_msg_CSLeaveLuckTurntable_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game.msg.MsgRaffle.CSLeaveLuckTurntable.class, game.msg.MsgRaffle.CSLeaveLuckTurntable.Builder.class);
      }

      // Construct using game.msg.MsgRaffle.CSLeaveLuckTurntable.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game.msg.MsgRaffle.internal_static_game_msg_CSLeaveLuckTurntable_descriptor;
      }

      public game.msg.MsgRaffle.CSLeaveLuckTurntable getDefaultInstanceForType() {
        return game.msg.MsgRaffle.CSLeaveLuckTurntable.getDefaultInstance();
      }

      public game.msg.MsgRaffle.CSLeaveLuckTurntable build() {
        game.msg.MsgRaffle.CSLeaveLuckTurntable result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game.msg.MsgRaffle.CSLeaveLuckTurntable buildPartial() {
        game.msg.MsgRaffle.CSLeaveLuckTurntable result = new game.msg.MsgRaffle.CSLeaveLuckTurntable(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game.msg.MsgRaffle.CSLeaveLuckTurntable) {
          return mergeFrom((game.msg.MsgRaffle.CSLeaveLuckTurntable)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game.msg.MsgRaffle.CSLeaveLuckTurntable other) {
        if (other == game.msg.MsgRaffle.CSLeaveLuckTurntable.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game.msg.MsgRaffle.CSLeaveLuckTurntable parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game.msg.MsgRaffle.CSLeaveLuckTurntable) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:game.msg.CSLeaveLuckTurntable)
    }

    static {
      defaultInstance = new CSLeaveLuckTurntable(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game.msg.CSLeaveLuckTurntable)
  }

  public interface SCLeaveLuckTurntableOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code game.msg.SCLeaveLuckTurntable}
   *
   * <pre>
   * 应答，离开通用玩法幸运转盘
   * </pre>
   */
  public static final class SCLeaveLuckTurntable extends
      com.google.protobuf.GeneratedMessage
      implements SCLeaveLuckTurntableOrBuilder {
    // Use SCLeaveLuckTurntable.newBuilder() to construct.
    private SCLeaveLuckTurntable(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SCLeaveLuckTurntable(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SCLeaveLuckTurntable defaultInstance;
    public static SCLeaveLuckTurntable getDefaultInstance() {
      return defaultInstance;
    }

    public SCLeaveLuckTurntable getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SCLeaveLuckTurntable(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game.msg.MsgRaffle.internal_static_game_msg_SCLeaveLuckTurntable_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game.msg.MsgRaffle.internal_static_game_msg_SCLeaveLuckTurntable_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game.msg.MsgRaffle.SCLeaveLuckTurntable.class, game.msg.MsgRaffle.SCLeaveLuckTurntable.Builder.class);
    }

    public static com.google.protobuf.Parser<SCLeaveLuckTurntable> PARSER =
        new com.google.protobuf.AbstractParser<SCLeaveLuckTurntable>() {
      public SCLeaveLuckTurntable parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SCLeaveLuckTurntable(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SCLeaveLuckTurntable> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game.msg.MsgRaffle.SCLeaveLuckTurntable parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgRaffle.SCLeaveLuckTurntable parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgRaffle.SCLeaveLuckTurntable parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgRaffle.SCLeaveLuckTurntable parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgRaffle.SCLeaveLuckTurntable parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgRaffle.SCLeaveLuckTurntable parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game.msg.MsgRaffle.SCLeaveLuckTurntable parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game.msg.MsgRaffle.SCLeaveLuckTurntable parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game.msg.MsgRaffle.SCLeaveLuckTurntable parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgRaffle.SCLeaveLuckTurntable parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game.msg.MsgRaffle.SCLeaveLuckTurntable prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game.msg.SCLeaveLuckTurntable}
     *
     * <pre>
     * 应答，离开通用玩法幸运转盘
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game.msg.MsgRaffle.SCLeaveLuckTurntableOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game.msg.MsgRaffle.internal_static_game_msg_SCLeaveLuckTurntable_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game.msg.MsgRaffle.internal_static_game_msg_SCLeaveLuckTurntable_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game.msg.MsgRaffle.SCLeaveLuckTurntable.class, game.msg.MsgRaffle.SCLeaveLuckTurntable.Builder.class);
      }

      // Construct using game.msg.MsgRaffle.SCLeaveLuckTurntable.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game.msg.MsgRaffle.internal_static_game_msg_SCLeaveLuckTurntable_descriptor;
      }

      public game.msg.MsgRaffle.SCLeaveLuckTurntable getDefaultInstanceForType() {
        return game.msg.MsgRaffle.SCLeaveLuckTurntable.getDefaultInstance();
      }

      public game.msg.MsgRaffle.SCLeaveLuckTurntable build() {
        game.msg.MsgRaffle.SCLeaveLuckTurntable result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game.msg.MsgRaffle.SCLeaveLuckTurntable buildPartial() {
        game.msg.MsgRaffle.SCLeaveLuckTurntable result = new game.msg.MsgRaffle.SCLeaveLuckTurntable(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game.msg.MsgRaffle.SCLeaveLuckTurntable) {
          return mergeFrom((game.msg.MsgRaffle.SCLeaveLuckTurntable)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game.msg.MsgRaffle.SCLeaveLuckTurntable other) {
        if (other == game.msg.MsgRaffle.SCLeaveLuckTurntable.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game.msg.MsgRaffle.SCLeaveLuckTurntable parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game.msg.MsgRaffle.SCLeaveLuckTurntable) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:game.msg.SCLeaveLuckTurntable)
    }

    static {
      defaultInstance = new SCLeaveLuckTurntable(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game.msg.SCLeaveLuckTurntable)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_msg_SCOpenLuckTurntable_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_msg_SCOpenLuckTurntable_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_msg_CSLuckTurntable_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_msg_CSLuckTurntable_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_msg_SCLuckTurntable_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_msg_SCLuckTurntable_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_msg_CSLeaveLuckTurntable_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_msg_CSLeaveLuckTurntable_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_msg_SCLeaveLuckTurntable_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_msg_SCLeaveLuckTurntable_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\020msg.raffle.proto\022\010game.msg\032\roptions.pr" +
      "oto\032\014define.proto\"[\n\023SCOpenLuckTurntable" +
      "\022%\n\010modeType\030\001 \001(\0162\023.game.msg.EModeType\022" +
      "\n\n\002lv\030\002 \001(\005\022\n\n\002sn\030\003 \001(\005:\005\210\303\032\263\036\"\030\n\017CSLuck" +
      "Turntable:\005\210\303\032\331\035\"<\n\017SCLuckTurntable\022\023\n\013r" +
      "esultIndex\030\001 \001(\005\022\r\n\005count\030\002 \001(\005:\005\210\303\032\332\035\"\035" +
      "\n\024CSLeaveLuckTurntable:\005\210\303\032\333\035\"\035\n\024SCLeave" +
      "LuckTurntable:\005\210\303\032\334\035"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_game_msg_SCOpenLuckTurntable_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_game_msg_SCOpenLuckTurntable_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_msg_SCOpenLuckTurntable_descriptor,
              new java.lang.String[] { "ModeType", "Lv", "Sn", });
          internal_static_game_msg_CSLuckTurntable_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_game_msg_CSLuckTurntable_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_msg_CSLuckTurntable_descriptor,
              new java.lang.String[] { });
          internal_static_game_msg_SCLuckTurntable_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_game_msg_SCLuckTurntable_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_msg_SCLuckTurntable_descriptor,
              new java.lang.String[] { "ResultIndex", "Count", });
          internal_static_game_msg_CSLeaveLuckTurntable_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_game_msg_CSLeaveLuckTurntable_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_msg_CSLeaveLuckTurntable_descriptor,
              new java.lang.String[] { });
          internal_static_game_msg_SCLeaveLuckTurntable_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_game_msg_SCLeaveLuckTurntable_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_msg_SCLeaveLuckTurntable_descriptor,
              new java.lang.String[] { });
          com.google.protobuf.ExtensionRegistry registry =
            com.google.protobuf.ExtensionRegistry.newInstance();
          registry.add(game.msg.Options.msgid);
          registry.add(game.msg.Options.msgid);
          registry.add(game.msg.Options.msgid);
          registry.add(game.msg.Options.msgid);
          registry.add(game.msg.Options.msgid);
          return registry;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          game.msg.Options.getDescriptor(),
          game.msg.Define.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
