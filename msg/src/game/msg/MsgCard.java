// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg.card.proto

package game.msg;

public final class MsgCard {
  private MsgCard() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface SCLoadCardInfoMsgOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .game.msg.DrawCardBaseMsh cardInfo = 1;
    /**
     * <code>repeated .game.msg.DrawCardBaseMsh cardInfo = 1;</code>
     *
     * <pre>
     *抽卡信息
     * </pre>
     */
    java.util.List<game.msg.Define.DrawCardBaseMsh> 
        getCardInfoList();
    /**
     * <code>repeated .game.msg.DrawCardBaseMsh cardInfo = 1;</code>
     *
     * <pre>
     *抽卡信息
     * </pre>
     */
    game.msg.Define.DrawCardBaseMsh getCardInfo(int index);
    /**
     * <code>repeated .game.msg.DrawCardBaseMsh cardInfo = 1;</code>
     *
     * <pre>
     *抽卡信息
     * </pre>
     */
    int getCardInfoCount();
    /**
     * <code>repeated .game.msg.DrawCardBaseMsh cardInfo = 1;</code>
     *
     * <pre>
     *抽卡信息
     * </pre>
     */
    java.util.List<? extends game.msg.Define.DrawCardBaseMshOrBuilder> 
        getCardInfoOrBuilderList();
    /**
     * <code>repeated .game.msg.DrawCardBaseMsh cardInfo = 1;</code>
     *
     * <pre>
     *抽卡信息
     * </pre>
     */
    game.msg.Define.DrawCardBaseMshOrBuilder getCardInfoOrBuilder(
        int index);

    // optional .game.msg.DCardExchangeInfo exchangeInfo = 2;
    /**
     * <code>optional .game.msg.DCardExchangeInfo exchangeInfo = 2;</code>
     *
     * <pre>
     * 兑换信息
     * </pre>
     */
    boolean hasExchangeInfo();
    /**
     * <code>optional .game.msg.DCardExchangeInfo exchangeInfo = 2;</code>
     *
     * <pre>
     * 兑换信息
     * </pre>
     */
    game.msg.Define.DCardExchangeInfo getExchangeInfo();
    /**
     * <code>optional .game.msg.DCardExchangeInfo exchangeInfo = 2;</code>
     *
     * <pre>
     * 兑换信息
     * </pre>
     */
    game.msg.Define.DCardExchangeInfoOrBuilder getExchangeInfoOrBuilder();
  }
  /**
   * Protobuf type {@code game.msg.SCLoadCardInfoMsg}
   *
   * <pre>
   *通知，登录下发抽卡数据
   * </pre>
   */
  public static final class SCLoadCardInfoMsg extends
      com.google.protobuf.GeneratedMessage
      implements SCLoadCardInfoMsgOrBuilder {
    // Use SCLoadCardInfoMsg.newBuilder() to construct.
    private SCLoadCardInfoMsg(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SCLoadCardInfoMsg(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SCLoadCardInfoMsg defaultInstance;
    public static SCLoadCardInfoMsg getDefaultInstance() {
      return defaultInstance;
    }

    public SCLoadCardInfoMsg getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SCLoadCardInfoMsg(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                cardInfo_ = new java.util.ArrayList<game.msg.Define.DrawCardBaseMsh>();
                mutable_bitField0_ |= 0x00000001;
              }
              cardInfo_.add(input.readMessage(game.msg.Define.DrawCardBaseMsh.PARSER, extensionRegistry));
              break;
            }
            case 18: {
              game.msg.Define.DCardExchangeInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = exchangeInfo_.toBuilder();
              }
              exchangeInfo_ = input.readMessage(game.msg.Define.DCardExchangeInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(exchangeInfo_);
                exchangeInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          cardInfo_ = java.util.Collections.unmodifiableList(cardInfo_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game.msg.MsgCard.internal_static_game_msg_SCLoadCardInfoMsg_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game.msg.MsgCard.internal_static_game_msg_SCLoadCardInfoMsg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game.msg.MsgCard.SCLoadCardInfoMsg.class, game.msg.MsgCard.SCLoadCardInfoMsg.Builder.class);
    }

    public static com.google.protobuf.Parser<SCLoadCardInfoMsg> PARSER =
        new com.google.protobuf.AbstractParser<SCLoadCardInfoMsg>() {
      public SCLoadCardInfoMsg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SCLoadCardInfoMsg(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SCLoadCardInfoMsg> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated .game.msg.DrawCardBaseMsh cardInfo = 1;
    public static final int CARDINFO_FIELD_NUMBER = 1;
    private java.util.List<game.msg.Define.DrawCardBaseMsh> cardInfo_;
    /**
     * <code>repeated .game.msg.DrawCardBaseMsh cardInfo = 1;</code>
     *
     * <pre>
     *抽卡信息
     * </pre>
     */
    public java.util.List<game.msg.Define.DrawCardBaseMsh> getCardInfoList() {
      return cardInfo_;
    }
    /**
     * <code>repeated .game.msg.DrawCardBaseMsh cardInfo = 1;</code>
     *
     * <pre>
     *抽卡信息
     * </pre>
     */
    public java.util.List<? extends game.msg.Define.DrawCardBaseMshOrBuilder> 
        getCardInfoOrBuilderList() {
      return cardInfo_;
    }
    /**
     * <code>repeated .game.msg.DrawCardBaseMsh cardInfo = 1;</code>
     *
     * <pre>
     *抽卡信息
     * </pre>
     */
    public int getCardInfoCount() {
      return cardInfo_.size();
    }
    /**
     * <code>repeated .game.msg.DrawCardBaseMsh cardInfo = 1;</code>
     *
     * <pre>
     *抽卡信息
     * </pre>
     */
    public game.msg.Define.DrawCardBaseMsh getCardInfo(int index) {
      return cardInfo_.get(index);
    }
    /**
     * <code>repeated .game.msg.DrawCardBaseMsh cardInfo = 1;</code>
     *
     * <pre>
     *抽卡信息
     * </pre>
     */
    public game.msg.Define.DrawCardBaseMshOrBuilder getCardInfoOrBuilder(
        int index) {
      return cardInfo_.get(index);
    }

    // optional .game.msg.DCardExchangeInfo exchangeInfo = 2;
    public static final int EXCHANGEINFO_FIELD_NUMBER = 2;
    private game.msg.Define.DCardExchangeInfo exchangeInfo_;
    /**
     * <code>optional .game.msg.DCardExchangeInfo exchangeInfo = 2;</code>
     *
     * <pre>
     * 兑换信息
     * </pre>
     */
    public boolean hasExchangeInfo() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .game.msg.DCardExchangeInfo exchangeInfo = 2;</code>
     *
     * <pre>
     * 兑换信息
     * </pre>
     */
    public game.msg.Define.DCardExchangeInfo getExchangeInfo() {
      return exchangeInfo_;
    }
    /**
     * <code>optional .game.msg.DCardExchangeInfo exchangeInfo = 2;</code>
     *
     * <pre>
     * 兑换信息
     * </pre>
     */
    public game.msg.Define.DCardExchangeInfoOrBuilder getExchangeInfoOrBuilder() {
      return exchangeInfo_;
    }

    private void initFields() {
      cardInfo_ = java.util.Collections.emptyList();
      exchangeInfo_ = game.msg.Define.DCardExchangeInfo.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < cardInfo_.size(); i++) {
        output.writeMessage(1, cardInfo_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(2, exchangeInfo_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < cardInfo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, cardInfo_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, exchangeInfo_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game.msg.MsgCard.SCLoadCardInfoMsg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgCard.SCLoadCardInfoMsg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgCard.SCLoadCardInfoMsg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgCard.SCLoadCardInfoMsg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgCard.SCLoadCardInfoMsg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgCard.SCLoadCardInfoMsg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game.msg.MsgCard.SCLoadCardInfoMsg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game.msg.MsgCard.SCLoadCardInfoMsg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game.msg.MsgCard.SCLoadCardInfoMsg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgCard.SCLoadCardInfoMsg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game.msg.MsgCard.SCLoadCardInfoMsg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game.msg.SCLoadCardInfoMsg}
     *
     * <pre>
     *通知，登录下发抽卡数据
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game.msg.MsgCard.SCLoadCardInfoMsgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game.msg.MsgCard.internal_static_game_msg_SCLoadCardInfoMsg_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game.msg.MsgCard.internal_static_game_msg_SCLoadCardInfoMsg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game.msg.MsgCard.SCLoadCardInfoMsg.class, game.msg.MsgCard.SCLoadCardInfoMsg.Builder.class);
      }

      // Construct using game.msg.MsgCard.SCLoadCardInfoMsg.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCardInfoFieldBuilder();
          getExchangeInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (cardInfoBuilder_ == null) {
          cardInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          cardInfoBuilder_.clear();
        }
        if (exchangeInfoBuilder_ == null) {
          exchangeInfo_ = game.msg.Define.DCardExchangeInfo.getDefaultInstance();
        } else {
          exchangeInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game.msg.MsgCard.internal_static_game_msg_SCLoadCardInfoMsg_descriptor;
      }

      public game.msg.MsgCard.SCLoadCardInfoMsg getDefaultInstanceForType() {
        return game.msg.MsgCard.SCLoadCardInfoMsg.getDefaultInstance();
      }

      public game.msg.MsgCard.SCLoadCardInfoMsg build() {
        game.msg.MsgCard.SCLoadCardInfoMsg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game.msg.MsgCard.SCLoadCardInfoMsg buildPartial() {
        game.msg.MsgCard.SCLoadCardInfoMsg result = new game.msg.MsgCard.SCLoadCardInfoMsg(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (cardInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            cardInfo_ = java.util.Collections.unmodifiableList(cardInfo_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.cardInfo_ = cardInfo_;
        } else {
          result.cardInfo_ = cardInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        if (exchangeInfoBuilder_ == null) {
          result.exchangeInfo_ = exchangeInfo_;
        } else {
          result.exchangeInfo_ = exchangeInfoBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game.msg.MsgCard.SCLoadCardInfoMsg) {
          return mergeFrom((game.msg.MsgCard.SCLoadCardInfoMsg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game.msg.MsgCard.SCLoadCardInfoMsg other) {
        if (other == game.msg.MsgCard.SCLoadCardInfoMsg.getDefaultInstance()) return this;
        if (cardInfoBuilder_ == null) {
          if (!other.cardInfo_.isEmpty()) {
            if (cardInfo_.isEmpty()) {
              cardInfo_ = other.cardInfo_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureCardInfoIsMutable();
              cardInfo_.addAll(other.cardInfo_);
            }
            onChanged();
          }
        } else {
          if (!other.cardInfo_.isEmpty()) {
            if (cardInfoBuilder_.isEmpty()) {
              cardInfoBuilder_.dispose();
              cardInfoBuilder_ = null;
              cardInfo_ = other.cardInfo_;
              bitField0_ = (bitField0_ & ~0x00000001);
              cardInfoBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCardInfoFieldBuilder() : null;
            } else {
              cardInfoBuilder_.addAllMessages(other.cardInfo_);
            }
          }
        }
        if (other.hasExchangeInfo()) {
          mergeExchangeInfo(other.getExchangeInfo());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game.msg.MsgCard.SCLoadCardInfoMsg parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game.msg.MsgCard.SCLoadCardInfoMsg) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .game.msg.DrawCardBaseMsh cardInfo = 1;
      private java.util.List<game.msg.Define.DrawCardBaseMsh> cardInfo_ =
        java.util.Collections.emptyList();
      private void ensureCardInfoIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          cardInfo_ = new java.util.ArrayList<game.msg.Define.DrawCardBaseMsh>(cardInfo_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          game.msg.Define.DrawCardBaseMsh, game.msg.Define.DrawCardBaseMsh.Builder, game.msg.Define.DrawCardBaseMshOrBuilder> cardInfoBuilder_;

      /**
       * <code>repeated .game.msg.DrawCardBaseMsh cardInfo = 1;</code>
       *
       * <pre>
       *抽卡信息
       * </pre>
       */
      public java.util.List<game.msg.Define.DrawCardBaseMsh> getCardInfoList() {
        if (cardInfoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cardInfo_);
        } else {
          return cardInfoBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .game.msg.DrawCardBaseMsh cardInfo = 1;</code>
       *
       * <pre>
       *抽卡信息
       * </pre>
       */
      public int getCardInfoCount() {
        if (cardInfoBuilder_ == null) {
          return cardInfo_.size();
        } else {
          return cardInfoBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .game.msg.DrawCardBaseMsh cardInfo = 1;</code>
       *
       * <pre>
       *抽卡信息
       * </pre>
       */
      public game.msg.Define.DrawCardBaseMsh getCardInfo(int index) {
        if (cardInfoBuilder_ == null) {
          return cardInfo_.get(index);
        } else {
          return cardInfoBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .game.msg.DrawCardBaseMsh cardInfo = 1;</code>
       *
       * <pre>
       *抽卡信息
       * </pre>
       */
      public Builder setCardInfo(
          int index, game.msg.Define.DrawCardBaseMsh value) {
        if (cardInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardInfoIsMutable();
          cardInfo_.set(index, value);
          onChanged();
        } else {
          cardInfoBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DrawCardBaseMsh cardInfo = 1;</code>
       *
       * <pre>
       *抽卡信息
       * </pre>
       */
      public Builder setCardInfo(
          int index, game.msg.Define.DrawCardBaseMsh.Builder builderForValue) {
        if (cardInfoBuilder_ == null) {
          ensureCardInfoIsMutable();
          cardInfo_.set(index, builderForValue.build());
          onChanged();
        } else {
          cardInfoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DrawCardBaseMsh cardInfo = 1;</code>
       *
       * <pre>
       *抽卡信息
       * </pre>
       */
      public Builder addCardInfo(game.msg.Define.DrawCardBaseMsh value) {
        if (cardInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardInfoIsMutable();
          cardInfo_.add(value);
          onChanged();
        } else {
          cardInfoBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DrawCardBaseMsh cardInfo = 1;</code>
       *
       * <pre>
       *抽卡信息
       * </pre>
       */
      public Builder addCardInfo(
          int index, game.msg.Define.DrawCardBaseMsh value) {
        if (cardInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardInfoIsMutable();
          cardInfo_.add(index, value);
          onChanged();
        } else {
          cardInfoBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DrawCardBaseMsh cardInfo = 1;</code>
       *
       * <pre>
       *抽卡信息
       * </pre>
       */
      public Builder addCardInfo(
          game.msg.Define.DrawCardBaseMsh.Builder builderForValue) {
        if (cardInfoBuilder_ == null) {
          ensureCardInfoIsMutable();
          cardInfo_.add(builderForValue.build());
          onChanged();
        } else {
          cardInfoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DrawCardBaseMsh cardInfo = 1;</code>
       *
       * <pre>
       *抽卡信息
       * </pre>
       */
      public Builder addCardInfo(
          int index, game.msg.Define.DrawCardBaseMsh.Builder builderForValue) {
        if (cardInfoBuilder_ == null) {
          ensureCardInfoIsMutable();
          cardInfo_.add(index, builderForValue.build());
          onChanged();
        } else {
          cardInfoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DrawCardBaseMsh cardInfo = 1;</code>
       *
       * <pre>
       *抽卡信息
       * </pre>
       */
      public Builder addAllCardInfo(
          java.lang.Iterable<? extends game.msg.Define.DrawCardBaseMsh> values) {
        if (cardInfoBuilder_ == null) {
          ensureCardInfoIsMutable();
          super.addAll(values, cardInfo_);
          onChanged();
        } else {
          cardInfoBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DrawCardBaseMsh cardInfo = 1;</code>
       *
       * <pre>
       *抽卡信息
       * </pre>
       */
      public Builder clearCardInfo() {
        if (cardInfoBuilder_ == null) {
          cardInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          cardInfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DrawCardBaseMsh cardInfo = 1;</code>
       *
       * <pre>
       *抽卡信息
       * </pre>
       */
      public Builder removeCardInfo(int index) {
        if (cardInfoBuilder_ == null) {
          ensureCardInfoIsMutable();
          cardInfo_.remove(index);
          onChanged();
        } else {
          cardInfoBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DrawCardBaseMsh cardInfo = 1;</code>
       *
       * <pre>
       *抽卡信息
       * </pre>
       */
      public game.msg.Define.DrawCardBaseMsh.Builder getCardInfoBuilder(
          int index) {
        return getCardInfoFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .game.msg.DrawCardBaseMsh cardInfo = 1;</code>
       *
       * <pre>
       *抽卡信息
       * </pre>
       */
      public game.msg.Define.DrawCardBaseMshOrBuilder getCardInfoOrBuilder(
          int index) {
        if (cardInfoBuilder_ == null) {
          return cardInfo_.get(index);  } else {
          return cardInfoBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .game.msg.DrawCardBaseMsh cardInfo = 1;</code>
       *
       * <pre>
       *抽卡信息
       * </pre>
       */
      public java.util.List<? extends game.msg.Define.DrawCardBaseMshOrBuilder> 
           getCardInfoOrBuilderList() {
        if (cardInfoBuilder_ != null) {
          return cardInfoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cardInfo_);
        }
      }
      /**
       * <code>repeated .game.msg.DrawCardBaseMsh cardInfo = 1;</code>
       *
       * <pre>
       *抽卡信息
       * </pre>
       */
      public game.msg.Define.DrawCardBaseMsh.Builder addCardInfoBuilder() {
        return getCardInfoFieldBuilder().addBuilder(
            game.msg.Define.DrawCardBaseMsh.getDefaultInstance());
      }
      /**
       * <code>repeated .game.msg.DrawCardBaseMsh cardInfo = 1;</code>
       *
       * <pre>
       *抽卡信息
       * </pre>
       */
      public game.msg.Define.DrawCardBaseMsh.Builder addCardInfoBuilder(
          int index) {
        return getCardInfoFieldBuilder().addBuilder(
            index, game.msg.Define.DrawCardBaseMsh.getDefaultInstance());
      }
      /**
       * <code>repeated .game.msg.DrawCardBaseMsh cardInfo = 1;</code>
       *
       * <pre>
       *抽卡信息
       * </pre>
       */
      public java.util.List<game.msg.Define.DrawCardBaseMsh.Builder> 
           getCardInfoBuilderList() {
        return getCardInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          game.msg.Define.DrawCardBaseMsh, game.msg.Define.DrawCardBaseMsh.Builder, game.msg.Define.DrawCardBaseMshOrBuilder> 
          getCardInfoFieldBuilder() {
        if (cardInfoBuilder_ == null) {
          cardInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              game.msg.Define.DrawCardBaseMsh, game.msg.Define.DrawCardBaseMsh.Builder, game.msg.Define.DrawCardBaseMshOrBuilder>(
                  cardInfo_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          cardInfo_ = null;
        }
        return cardInfoBuilder_;
      }

      // optional .game.msg.DCardExchangeInfo exchangeInfo = 2;
      private game.msg.Define.DCardExchangeInfo exchangeInfo_ = game.msg.Define.DCardExchangeInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          game.msg.Define.DCardExchangeInfo, game.msg.Define.DCardExchangeInfo.Builder, game.msg.Define.DCardExchangeInfoOrBuilder> exchangeInfoBuilder_;
      /**
       * <code>optional .game.msg.DCardExchangeInfo exchangeInfo = 2;</code>
       *
       * <pre>
       * 兑换信息
       * </pre>
       */
      public boolean hasExchangeInfo() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .game.msg.DCardExchangeInfo exchangeInfo = 2;</code>
       *
       * <pre>
       * 兑换信息
       * </pre>
       */
      public game.msg.Define.DCardExchangeInfo getExchangeInfo() {
        if (exchangeInfoBuilder_ == null) {
          return exchangeInfo_;
        } else {
          return exchangeInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .game.msg.DCardExchangeInfo exchangeInfo = 2;</code>
       *
       * <pre>
       * 兑换信息
       * </pre>
       */
      public Builder setExchangeInfo(game.msg.Define.DCardExchangeInfo value) {
        if (exchangeInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          exchangeInfo_ = value;
          onChanged();
        } else {
          exchangeInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .game.msg.DCardExchangeInfo exchangeInfo = 2;</code>
       *
       * <pre>
       * 兑换信息
       * </pre>
       */
      public Builder setExchangeInfo(
          game.msg.Define.DCardExchangeInfo.Builder builderForValue) {
        if (exchangeInfoBuilder_ == null) {
          exchangeInfo_ = builderForValue.build();
          onChanged();
        } else {
          exchangeInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .game.msg.DCardExchangeInfo exchangeInfo = 2;</code>
       *
       * <pre>
       * 兑换信息
       * </pre>
       */
      public Builder mergeExchangeInfo(game.msg.Define.DCardExchangeInfo value) {
        if (exchangeInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              exchangeInfo_ != game.msg.Define.DCardExchangeInfo.getDefaultInstance()) {
            exchangeInfo_ =
              game.msg.Define.DCardExchangeInfo.newBuilder(exchangeInfo_).mergeFrom(value).buildPartial();
          } else {
            exchangeInfo_ = value;
          }
          onChanged();
        } else {
          exchangeInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .game.msg.DCardExchangeInfo exchangeInfo = 2;</code>
       *
       * <pre>
       * 兑换信息
       * </pre>
       */
      public Builder clearExchangeInfo() {
        if (exchangeInfoBuilder_ == null) {
          exchangeInfo_ = game.msg.Define.DCardExchangeInfo.getDefaultInstance();
          onChanged();
        } else {
          exchangeInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .game.msg.DCardExchangeInfo exchangeInfo = 2;</code>
       *
       * <pre>
       * 兑换信息
       * </pre>
       */
      public game.msg.Define.DCardExchangeInfo.Builder getExchangeInfoBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getExchangeInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .game.msg.DCardExchangeInfo exchangeInfo = 2;</code>
       *
       * <pre>
       * 兑换信息
       * </pre>
       */
      public game.msg.Define.DCardExchangeInfoOrBuilder getExchangeInfoOrBuilder() {
        if (exchangeInfoBuilder_ != null) {
          return exchangeInfoBuilder_.getMessageOrBuilder();
        } else {
          return exchangeInfo_;
        }
      }
      /**
       * <code>optional .game.msg.DCardExchangeInfo exchangeInfo = 2;</code>
       *
       * <pre>
       * 兑换信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          game.msg.Define.DCardExchangeInfo, game.msg.Define.DCardExchangeInfo.Builder, game.msg.Define.DCardExchangeInfoOrBuilder> 
          getExchangeInfoFieldBuilder() {
        if (exchangeInfoBuilder_ == null) {
          exchangeInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              game.msg.Define.DCardExchangeInfo, game.msg.Define.DCardExchangeInfo.Builder, game.msg.Define.DCardExchangeInfoOrBuilder>(
                  exchangeInfo_,
                  getParentForChildren(),
                  isClean());
          exchangeInfo_ = null;
        }
        return exchangeInfoBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:game.msg.SCLoadCardInfoMsg)
    }

    static {
      defaultInstance = new SCLoadCardInfoMsg(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game.msg.SCLoadCardInfoMsg)
  }

  public interface CSDrawCardMsgOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .game.msg.EDrawType type = 1;
    /**
     * <code>optional .game.msg.EDrawType type = 1;</code>
     *
     * <pre>
     *抽卡类型 0招募令抽卡 1金币抽卡
     * </pre>
     */
    boolean hasType();
    /**
     * <code>optional .game.msg.EDrawType type = 1;</code>
     *
     * <pre>
     *抽卡类型 0招募令抽卡 1金币抽卡
     * </pre>
     */
    game.msg.Define.EDrawType getType();

    // optional .game.msg.EDrawOperation operation = 2;
    /**
     * <code>optional .game.msg.EDrawOperation operation = 2;</code>
     *
     * <pre>
     *抽卡操作 0单抽 1十连抽
     * </pre>
     */
    boolean hasOperation();
    /**
     * <code>optional .game.msg.EDrawOperation operation = 2;</code>
     *
     * <pre>
     *抽卡操作 0单抽 1十连抽
     * </pre>
     */
    game.msg.Define.EDrawOperation getOperation();

    // optional bool isFree = 3;
    /**
     * <code>optional bool isFree = 3;</code>
     *
     * <pre>
     *是否免费 
     * </pre>
     */
    boolean hasIsFree();
    /**
     * <code>optional bool isFree = 3;</code>
     *
     * <pre>
     *是否免费 
     * </pre>
     */
    boolean getIsFree();
  }
  /**
   * Protobuf type {@code game.msg.CSDrawCardMsg}
   *
   * <pre>
   *抽卡
   * </pre>
   */
  public static final class CSDrawCardMsg extends
      com.google.protobuf.GeneratedMessage
      implements CSDrawCardMsgOrBuilder {
    // Use CSDrawCardMsg.newBuilder() to construct.
    private CSDrawCardMsg(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CSDrawCardMsg(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CSDrawCardMsg defaultInstance;
    public static CSDrawCardMsg getDefaultInstance() {
      return defaultInstance;
    }

    public CSDrawCardMsg getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CSDrawCardMsg(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              game.msg.Define.EDrawType value = game.msg.Define.EDrawType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              game.msg.Define.EDrawOperation value = game.msg.Define.EDrawOperation.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                operation_ = value;
              }
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              isFree_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game.msg.MsgCard.internal_static_game_msg_CSDrawCardMsg_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game.msg.MsgCard.internal_static_game_msg_CSDrawCardMsg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game.msg.MsgCard.CSDrawCardMsg.class, game.msg.MsgCard.CSDrawCardMsg.Builder.class);
    }

    public static com.google.protobuf.Parser<CSDrawCardMsg> PARSER =
        new com.google.protobuf.AbstractParser<CSDrawCardMsg>() {
      public CSDrawCardMsg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CSDrawCardMsg(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CSDrawCardMsg> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .game.msg.EDrawType type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private game.msg.Define.EDrawType type_;
    /**
     * <code>optional .game.msg.EDrawType type = 1;</code>
     *
     * <pre>
     *抽卡类型 0招募令抽卡 1金币抽卡
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .game.msg.EDrawType type = 1;</code>
     *
     * <pre>
     *抽卡类型 0招募令抽卡 1金币抽卡
     * </pre>
     */
    public game.msg.Define.EDrawType getType() {
      return type_;
    }

    // optional .game.msg.EDrawOperation operation = 2;
    public static final int OPERATION_FIELD_NUMBER = 2;
    private game.msg.Define.EDrawOperation operation_;
    /**
     * <code>optional .game.msg.EDrawOperation operation = 2;</code>
     *
     * <pre>
     *抽卡操作 0单抽 1十连抽
     * </pre>
     */
    public boolean hasOperation() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .game.msg.EDrawOperation operation = 2;</code>
     *
     * <pre>
     *抽卡操作 0单抽 1十连抽
     * </pre>
     */
    public game.msg.Define.EDrawOperation getOperation() {
      return operation_;
    }

    // optional bool isFree = 3;
    public static final int ISFREE_FIELD_NUMBER = 3;
    private boolean isFree_;
    /**
     * <code>optional bool isFree = 3;</code>
     *
     * <pre>
     *是否免费 
     * </pre>
     */
    public boolean hasIsFree() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool isFree = 3;</code>
     *
     * <pre>
     *是否免费 
     * </pre>
     */
    public boolean getIsFree() {
      return isFree_;
    }

    private void initFields() {
      type_ = game.msg.Define.EDrawType.BySummonToken;
      operation_ = game.msg.Define.EDrawOperation.One;
      isFree_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, operation_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, isFree_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, operation_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, isFree_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game.msg.MsgCard.CSDrawCardMsg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgCard.CSDrawCardMsg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgCard.CSDrawCardMsg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgCard.CSDrawCardMsg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgCard.CSDrawCardMsg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgCard.CSDrawCardMsg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game.msg.MsgCard.CSDrawCardMsg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game.msg.MsgCard.CSDrawCardMsg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game.msg.MsgCard.CSDrawCardMsg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgCard.CSDrawCardMsg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game.msg.MsgCard.CSDrawCardMsg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game.msg.CSDrawCardMsg}
     *
     * <pre>
     *抽卡
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game.msg.MsgCard.CSDrawCardMsgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game.msg.MsgCard.internal_static_game_msg_CSDrawCardMsg_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game.msg.MsgCard.internal_static_game_msg_CSDrawCardMsg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game.msg.MsgCard.CSDrawCardMsg.class, game.msg.MsgCard.CSDrawCardMsg.Builder.class);
      }

      // Construct using game.msg.MsgCard.CSDrawCardMsg.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = game.msg.Define.EDrawType.BySummonToken;
        bitField0_ = (bitField0_ & ~0x00000001);
        operation_ = game.msg.Define.EDrawOperation.One;
        bitField0_ = (bitField0_ & ~0x00000002);
        isFree_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game.msg.MsgCard.internal_static_game_msg_CSDrawCardMsg_descriptor;
      }

      public game.msg.MsgCard.CSDrawCardMsg getDefaultInstanceForType() {
        return game.msg.MsgCard.CSDrawCardMsg.getDefaultInstance();
      }

      public game.msg.MsgCard.CSDrawCardMsg build() {
        game.msg.MsgCard.CSDrawCardMsg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game.msg.MsgCard.CSDrawCardMsg buildPartial() {
        game.msg.MsgCard.CSDrawCardMsg result = new game.msg.MsgCard.CSDrawCardMsg(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.operation_ = operation_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.isFree_ = isFree_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game.msg.MsgCard.CSDrawCardMsg) {
          return mergeFrom((game.msg.MsgCard.CSDrawCardMsg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game.msg.MsgCard.CSDrawCardMsg other) {
        if (other == game.msg.MsgCard.CSDrawCardMsg.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasOperation()) {
          setOperation(other.getOperation());
        }
        if (other.hasIsFree()) {
          setIsFree(other.getIsFree());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game.msg.MsgCard.CSDrawCardMsg parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game.msg.MsgCard.CSDrawCardMsg) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .game.msg.EDrawType type = 1;
      private game.msg.Define.EDrawType type_ = game.msg.Define.EDrawType.BySummonToken;
      /**
       * <code>optional .game.msg.EDrawType type = 1;</code>
       *
       * <pre>
       *抽卡类型 0招募令抽卡 1金币抽卡
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .game.msg.EDrawType type = 1;</code>
       *
       * <pre>
       *抽卡类型 0招募令抽卡 1金币抽卡
       * </pre>
       */
      public game.msg.Define.EDrawType getType() {
        return type_;
      }
      /**
       * <code>optional .game.msg.EDrawType type = 1;</code>
       *
       * <pre>
       *抽卡类型 0招募令抽卡 1金币抽卡
       * </pre>
       */
      public Builder setType(game.msg.Define.EDrawType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .game.msg.EDrawType type = 1;</code>
       *
       * <pre>
       *抽卡类型 0招募令抽卡 1金币抽卡
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = game.msg.Define.EDrawType.BySummonToken;
        onChanged();
        return this;
      }

      // optional .game.msg.EDrawOperation operation = 2;
      private game.msg.Define.EDrawOperation operation_ = game.msg.Define.EDrawOperation.One;
      /**
       * <code>optional .game.msg.EDrawOperation operation = 2;</code>
       *
       * <pre>
       *抽卡操作 0单抽 1十连抽
       * </pre>
       */
      public boolean hasOperation() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .game.msg.EDrawOperation operation = 2;</code>
       *
       * <pre>
       *抽卡操作 0单抽 1十连抽
       * </pre>
       */
      public game.msg.Define.EDrawOperation getOperation() {
        return operation_;
      }
      /**
       * <code>optional .game.msg.EDrawOperation operation = 2;</code>
       *
       * <pre>
       *抽卡操作 0单抽 1十连抽
       * </pre>
       */
      public Builder setOperation(game.msg.Define.EDrawOperation value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        operation_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .game.msg.EDrawOperation operation = 2;</code>
       *
       * <pre>
       *抽卡操作 0单抽 1十连抽
       * </pre>
       */
      public Builder clearOperation() {
        bitField0_ = (bitField0_ & ~0x00000002);
        operation_ = game.msg.Define.EDrawOperation.One;
        onChanged();
        return this;
      }

      // optional bool isFree = 3;
      private boolean isFree_ ;
      /**
       * <code>optional bool isFree = 3;</code>
       *
       * <pre>
       *是否免费 
       * </pre>
       */
      public boolean hasIsFree() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool isFree = 3;</code>
       *
       * <pre>
       *是否免费 
       * </pre>
       */
      public boolean getIsFree() {
        return isFree_;
      }
      /**
       * <code>optional bool isFree = 3;</code>
       *
       * <pre>
       *是否免费 
       * </pre>
       */
      public Builder setIsFree(boolean value) {
        bitField0_ |= 0x00000004;
        isFree_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isFree = 3;</code>
       *
       * <pre>
       *是否免费 
       * </pre>
       */
      public Builder clearIsFree() {
        bitField0_ = (bitField0_ & ~0x00000004);
        isFree_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:game.msg.CSDrawCardMsg)
    }

    static {
      defaultInstance = new CSDrawCardMsg(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game.msg.CSDrawCardMsg)
  }

  public interface SCDrawCardMsgOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .game.msg.EDrawType type = 1;
    /**
     * <code>optional .game.msg.EDrawType type = 1;</code>
     */
    boolean hasType();
    /**
     * <code>optional .game.msg.EDrawType type = 1;</code>
     */
    game.msg.Define.EDrawType getType();

    // optional .game.msg.EDrawOperation operation = 2;
    /**
     * <code>optional .game.msg.EDrawOperation operation = 2;</code>
     */
    boolean hasOperation();
    /**
     * <code>optional .game.msg.EDrawOperation operation = 2;</code>
     */
    game.msg.Define.EDrawOperation getOperation();

    // repeated .game.msg.DDropItem reward = 3;
    /**
     * <code>repeated .game.msg.DDropItem reward = 3;</code>
     *
     * <pre>
     *奖励道具列表
     * </pre>
     */
    java.util.List<game.msg.Define.DDropItem> 
        getRewardList();
    /**
     * <code>repeated .game.msg.DDropItem reward = 3;</code>
     *
     * <pre>
     *奖励道具列表
     * </pre>
     */
    game.msg.Define.DDropItem getReward(int index);
    /**
     * <code>repeated .game.msg.DDropItem reward = 3;</code>
     *
     * <pre>
     *奖励道具列表
     * </pre>
     */
    int getRewardCount();
    /**
     * <code>repeated .game.msg.DDropItem reward = 3;</code>
     *
     * <pre>
     *奖励道具列表
     * </pre>
     */
    java.util.List<? extends game.msg.Define.DDropItemOrBuilder> 
        getRewardOrBuilderList();
    /**
     * <code>repeated .game.msg.DDropItem reward = 3;</code>
     *
     * <pre>
     *奖励道具列表
     * </pre>
     */
    game.msg.Define.DDropItemOrBuilder getRewardOrBuilder(
        int index);

    // repeated .game.msg.DPartnerInfo partnerInfoList = 4;
    /**
     * <code>repeated .game.msg.DPartnerInfo partnerInfoList = 4;</code>
     *
     * <pre>
     *新增伙伴信息
     * </pre>
     */
    java.util.List<game.msg.Define.DPartnerInfo> 
        getPartnerInfoListList();
    /**
     * <code>repeated .game.msg.DPartnerInfo partnerInfoList = 4;</code>
     *
     * <pre>
     *新增伙伴信息
     * </pre>
     */
    game.msg.Define.DPartnerInfo getPartnerInfoList(int index);
    /**
     * <code>repeated .game.msg.DPartnerInfo partnerInfoList = 4;</code>
     *
     * <pre>
     *新增伙伴信息
     * </pre>
     */
    int getPartnerInfoListCount();
    /**
     * <code>repeated .game.msg.DPartnerInfo partnerInfoList = 4;</code>
     *
     * <pre>
     *新增伙伴信息
     * </pre>
     */
    java.util.List<? extends game.msg.Define.DPartnerInfoOrBuilder> 
        getPartnerInfoListOrBuilderList();
    /**
     * <code>repeated .game.msg.DPartnerInfo partnerInfoList = 4;</code>
     *
     * <pre>
     *新增伙伴信息
     * </pre>
     */
    game.msg.Define.DPartnerInfoOrBuilder getPartnerInfoListOrBuilder(
        int index);

    // repeated int32 chipItemList = 5;
    /**
     * <code>repeated int32 chipItemList = 5;</code>
     *
     * <pre>
     *由英雄转换成物品的列表
     * </pre>
     */
    java.util.List<java.lang.Integer> getChipItemListList();
    /**
     * <code>repeated int32 chipItemList = 5;</code>
     *
     * <pre>
     *由英雄转换成物品的列表
     * </pre>
     */
    int getChipItemListCount();
    /**
     * <code>repeated int32 chipItemList = 5;</code>
     *
     * <pre>
     *由英雄转换成物品的列表
     * </pre>
     */
    int getChipItemList(int index);

    // optional .game.msg.DrawCardBaseMsh cardInfo = 6;
    /**
     * <code>optional .game.msg.DrawCardBaseMsh cardInfo = 6;</code>
     *
     * <pre>
     *抽卡信息
     * </pre>
     */
    boolean hasCardInfo();
    /**
     * <code>optional .game.msg.DrawCardBaseMsh cardInfo = 6;</code>
     *
     * <pre>
     *抽卡信息
     * </pre>
     */
    game.msg.Define.DrawCardBaseMsh getCardInfo();
    /**
     * <code>optional .game.msg.DrawCardBaseMsh cardInfo = 6;</code>
     *
     * <pre>
     *抽卡信息
     * </pre>
     */
    game.msg.Define.DrawCardBaseMshOrBuilder getCardInfoOrBuilder();

    // optional int32 rewardScore = 7;
    /**
     * <code>optional int32 rewardScore = 7;</code>
     *
     * <pre>
     * 抽卡奖励积分
     * </pre>
     */
    boolean hasRewardScore();
    /**
     * <code>optional int32 rewardScore = 7;</code>
     *
     * <pre>
     * 抽卡奖励积分
     * </pre>
     */
    int getRewardScore();
  }
  /**
   * Protobuf type {@code game.msg.SCDrawCardMsg}
   *
   * <pre>
   *抽卡回执
   * </pre>
   */
  public static final class SCDrawCardMsg extends
      com.google.protobuf.GeneratedMessage
      implements SCDrawCardMsgOrBuilder {
    // Use SCDrawCardMsg.newBuilder() to construct.
    private SCDrawCardMsg(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SCDrawCardMsg(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SCDrawCardMsg defaultInstance;
    public static SCDrawCardMsg getDefaultInstance() {
      return defaultInstance;
    }

    public SCDrawCardMsg getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SCDrawCardMsg(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              game.msg.Define.EDrawType value = game.msg.Define.EDrawType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              game.msg.Define.EDrawOperation value = game.msg.Define.EDrawOperation.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                operation_ = value;
              }
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                reward_ = new java.util.ArrayList<game.msg.Define.DDropItem>();
                mutable_bitField0_ |= 0x00000004;
              }
              reward_.add(input.readMessage(game.msg.Define.DDropItem.PARSER, extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                partnerInfoList_ = new java.util.ArrayList<game.msg.Define.DPartnerInfo>();
                mutable_bitField0_ |= 0x00000008;
              }
              partnerInfoList_.add(input.readMessage(game.msg.Define.DPartnerInfo.PARSER, extensionRegistry));
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                chipItemList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              chipItemList_.add(input.readInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                chipItemList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                chipItemList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 50: {
              game.msg.Define.DrawCardBaseMsh.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = cardInfo_.toBuilder();
              }
              cardInfo_ = input.readMessage(game.msg.Define.DrawCardBaseMsh.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(cardInfo_);
                cardInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 56: {
              bitField0_ |= 0x00000008;
              rewardScore_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          reward_ = java.util.Collections.unmodifiableList(reward_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          partnerInfoList_ = java.util.Collections.unmodifiableList(partnerInfoList_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          chipItemList_ = java.util.Collections.unmodifiableList(chipItemList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game.msg.MsgCard.internal_static_game_msg_SCDrawCardMsg_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game.msg.MsgCard.internal_static_game_msg_SCDrawCardMsg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game.msg.MsgCard.SCDrawCardMsg.class, game.msg.MsgCard.SCDrawCardMsg.Builder.class);
    }

    public static com.google.protobuf.Parser<SCDrawCardMsg> PARSER =
        new com.google.protobuf.AbstractParser<SCDrawCardMsg>() {
      public SCDrawCardMsg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SCDrawCardMsg(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SCDrawCardMsg> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .game.msg.EDrawType type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private game.msg.Define.EDrawType type_;
    /**
     * <code>optional .game.msg.EDrawType type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .game.msg.EDrawType type = 1;</code>
     */
    public game.msg.Define.EDrawType getType() {
      return type_;
    }

    // optional .game.msg.EDrawOperation operation = 2;
    public static final int OPERATION_FIELD_NUMBER = 2;
    private game.msg.Define.EDrawOperation operation_;
    /**
     * <code>optional .game.msg.EDrawOperation operation = 2;</code>
     */
    public boolean hasOperation() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .game.msg.EDrawOperation operation = 2;</code>
     */
    public game.msg.Define.EDrawOperation getOperation() {
      return operation_;
    }

    // repeated .game.msg.DDropItem reward = 3;
    public static final int REWARD_FIELD_NUMBER = 3;
    private java.util.List<game.msg.Define.DDropItem> reward_;
    /**
     * <code>repeated .game.msg.DDropItem reward = 3;</code>
     *
     * <pre>
     *奖励道具列表
     * </pre>
     */
    public java.util.List<game.msg.Define.DDropItem> getRewardList() {
      return reward_;
    }
    /**
     * <code>repeated .game.msg.DDropItem reward = 3;</code>
     *
     * <pre>
     *奖励道具列表
     * </pre>
     */
    public java.util.List<? extends game.msg.Define.DDropItemOrBuilder> 
        getRewardOrBuilderList() {
      return reward_;
    }
    /**
     * <code>repeated .game.msg.DDropItem reward = 3;</code>
     *
     * <pre>
     *奖励道具列表
     * </pre>
     */
    public int getRewardCount() {
      return reward_.size();
    }
    /**
     * <code>repeated .game.msg.DDropItem reward = 3;</code>
     *
     * <pre>
     *奖励道具列表
     * </pre>
     */
    public game.msg.Define.DDropItem getReward(int index) {
      return reward_.get(index);
    }
    /**
     * <code>repeated .game.msg.DDropItem reward = 3;</code>
     *
     * <pre>
     *奖励道具列表
     * </pre>
     */
    public game.msg.Define.DDropItemOrBuilder getRewardOrBuilder(
        int index) {
      return reward_.get(index);
    }

    // repeated .game.msg.DPartnerInfo partnerInfoList = 4;
    public static final int PARTNERINFOLIST_FIELD_NUMBER = 4;
    private java.util.List<game.msg.Define.DPartnerInfo> partnerInfoList_;
    /**
     * <code>repeated .game.msg.DPartnerInfo partnerInfoList = 4;</code>
     *
     * <pre>
     *新增伙伴信息
     * </pre>
     */
    public java.util.List<game.msg.Define.DPartnerInfo> getPartnerInfoListList() {
      return partnerInfoList_;
    }
    /**
     * <code>repeated .game.msg.DPartnerInfo partnerInfoList = 4;</code>
     *
     * <pre>
     *新增伙伴信息
     * </pre>
     */
    public java.util.List<? extends game.msg.Define.DPartnerInfoOrBuilder> 
        getPartnerInfoListOrBuilderList() {
      return partnerInfoList_;
    }
    /**
     * <code>repeated .game.msg.DPartnerInfo partnerInfoList = 4;</code>
     *
     * <pre>
     *新增伙伴信息
     * </pre>
     */
    public int getPartnerInfoListCount() {
      return partnerInfoList_.size();
    }
    /**
     * <code>repeated .game.msg.DPartnerInfo partnerInfoList = 4;</code>
     *
     * <pre>
     *新增伙伴信息
     * </pre>
     */
    public game.msg.Define.DPartnerInfo getPartnerInfoList(int index) {
      return partnerInfoList_.get(index);
    }
    /**
     * <code>repeated .game.msg.DPartnerInfo partnerInfoList = 4;</code>
     *
     * <pre>
     *新增伙伴信息
     * </pre>
     */
    public game.msg.Define.DPartnerInfoOrBuilder getPartnerInfoListOrBuilder(
        int index) {
      return partnerInfoList_.get(index);
    }

    // repeated int32 chipItemList = 5;
    public static final int CHIPITEMLIST_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> chipItemList_;
    /**
     * <code>repeated int32 chipItemList = 5;</code>
     *
     * <pre>
     *由英雄转换成物品的列表
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getChipItemListList() {
      return chipItemList_;
    }
    /**
     * <code>repeated int32 chipItemList = 5;</code>
     *
     * <pre>
     *由英雄转换成物品的列表
     * </pre>
     */
    public int getChipItemListCount() {
      return chipItemList_.size();
    }
    /**
     * <code>repeated int32 chipItemList = 5;</code>
     *
     * <pre>
     *由英雄转换成物品的列表
     * </pre>
     */
    public int getChipItemList(int index) {
      return chipItemList_.get(index);
    }

    // optional .game.msg.DrawCardBaseMsh cardInfo = 6;
    public static final int CARDINFO_FIELD_NUMBER = 6;
    private game.msg.Define.DrawCardBaseMsh cardInfo_;
    /**
     * <code>optional .game.msg.DrawCardBaseMsh cardInfo = 6;</code>
     *
     * <pre>
     *抽卡信息
     * </pre>
     */
    public boolean hasCardInfo() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .game.msg.DrawCardBaseMsh cardInfo = 6;</code>
     *
     * <pre>
     *抽卡信息
     * </pre>
     */
    public game.msg.Define.DrawCardBaseMsh getCardInfo() {
      return cardInfo_;
    }
    /**
     * <code>optional .game.msg.DrawCardBaseMsh cardInfo = 6;</code>
     *
     * <pre>
     *抽卡信息
     * </pre>
     */
    public game.msg.Define.DrawCardBaseMshOrBuilder getCardInfoOrBuilder() {
      return cardInfo_;
    }

    // optional int32 rewardScore = 7;
    public static final int REWARDSCORE_FIELD_NUMBER = 7;
    private int rewardScore_;
    /**
     * <code>optional int32 rewardScore = 7;</code>
     *
     * <pre>
     * 抽卡奖励积分
     * </pre>
     */
    public boolean hasRewardScore() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 rewardScore = 7;</code>
     *
     * <pre>
     * 抽卡奖励积分
     * </pre>
     */
    public int getRewardScore() {
      return rewardScore_;
    }

    private void initFields() {
      type_ = game.msg.Define.EDrawType.BySummonToken;
      operation_ = game.msg.Define.EDrawOperation.One;
      reward_ = java.util.Collections.emptyList();
      partnerInfoList_ = java.util.Collections.emptyList();
      chipItemList_ = java.util.Collections.emptyList();
      cardInfo_ = game.msg.Define.DrawCardBaseMsh.getDefaultInstance();
      rewardScore_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getPartnerInfoListCount(); i++) {
        if (!getPartnerInfoList(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, operation_.getNumber());
      }
      for (int i = 0; i < reward_.size(); i++) {
        output.writeMessage(3, reward_.get(i));
      }
      for (int i = 0; i < partnerInfoList_.size(); i++) {
        output.writeMessage(4, partnerInfoList_.get(i));
      }
      for (int i = 0; i < chipItemList_.size(); i++) {
        output.writeInt32(5, chipItemList_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(6, cardInfo_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(7, rewardScore_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, operation_.getNumber());
      }
      for (int i = 0; i < reward_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, reward_.get(i));
      }
      for (int i = 0; i < partnerInfoList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, partnerInfoList_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < chipItemList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(chipItemList_.get(i));
        }
        size += dataSize;
        size += 1 * getChipItemListList().size();
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, cardInfo_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, rewardScore_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game.msg.MsgCard.SCDrawCardMsg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgCard.SCDrawCardMsg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgCard.SCDrawCardMsg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgCard.SCDrawCardMsg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgCard.SCDrawCardMsg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgCard.SCDrawCardMsg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game.msg.MsgCard.SCDrawCardMsg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game.msg.MsgCard.SCDrawCardMsg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game.msg.MsgCard.SCDrawCardMsg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgCard.SCDrawCardMsg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game.msg.MsgCard.SCDrawCardMsg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game.msg.SCDrawCardMsg}
     *
     * <pre>
     *抽卡回执
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game.msg.MsgCard.SCDrawCardMsgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game.msg.MsgCard.internal_static_game_msg_SCDrawCardMsg_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game.msg.MsgCard.internal_static_game_msg_SCDrawCardMsg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game.msg.MsgCard.SCDrawCardMsg.class, game.msg.MsgCard.SCDrawCardMsg.Builder.class);
      }

      // Construct using game.msg.MsgCard.SCDrawCardMsg.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRewardFieldBuilder();
          getPartnerInfoListFieldBuilder();
          getCardInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = game.msg.Define.EDrawType.BySummonToken;
        bitField0_ = (bitField0_ & ~0x00000001);
        operation_ = game.msg.Define.EDrawOperation.One;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (rewardBuilder_ == null) {
          reward_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          rewardBuilder_.clear();
        }
        if (partnerInfoListBuilder_ == null) {
          partnerInfoList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          partnerInfoListBuilder_.clear();
        }
        chipItemList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        if (cardInfoBuilder_ == null) {
          cardInfo_ = game.msg.Define.DrawCardBaseMsh.getDefaultInstance();
        } else {
          cardInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        rewardScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game.msg.MsgCard.internal_static_game_msg_SCDrawCardMsg_descriptor;
      }

      public game.msg.MsgCard.SCDrawCardMsg getDefaultInstanceForType() {
        return game.msg.MsgCard.SCDrawCardMsg.getDefaultInstance();
      }

      public game.msg.MsgCard.SCDrawCardMsg build() {
        game.msg.MsgCard.SCDrawCardMsg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game.msg.MsgCard.SCDrawCardMsg buildPartial() {
        game.msg.MsgCard.SCDrawCardMsg result = new game.msg.MsgCard.SCDrawCardMsg(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.operation_ = operation_;
        if (rewardBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            reward_ = java.util.Collections.unmodifiableList(reward_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.reward_ = reward_;
        } else {
          result.reward_ = rewardBuilder_.build();
        }
        if (partnerInfoListBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            partnerInfoList_ = java.util.Collections.unmodifiableList(partnerInfoList_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.partnerInfoList_ = partnerInfoList_;
        } else {
          result.partnerInfoList_ = partnerInfoListBuilder_.build();
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          chipItemList_ = java.util.Collections.unmodifiableList(chipItemList_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.chipItemList_ = chipItemList_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000004;
        }
        if (cardInfoBuilder_ == null) {
          result.cardInfo_ = cardInfo_;
        } else {
          result.cardInfo_ = cardInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000008;
        }
        result.rewardScore_ = rewardScore_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game.msg.MsgCard.SCDrawCardMsg) {
          return mergeFrom((game.msg.MsgCard.SCDrawCardMsg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game.msg.MsgCard.SCDrawCardMsg other) {
        if (other == game.msg.MsgCard.SCDrawCardMsg.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasOperation()) {
          setOperation(other.getOperation());
        }
        if (rewardBuilder_ == null) {
          if (!other.reward_.isEmpty()) {
            if (reward_.isEmpty()) {
              reward_ = other.reward_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureRewardIsMutable();
              reward_.addAll(other.reward_);
            }
            onChanged();
          }
        } else {
          if (!other.reward_.isEmpty()) {
            if (rewardBuilder_.isEmpty()) {
              rewardBuilder_.dispose();
              rewardBuilder_ = null;
              reward_ = other.reward_;
              bitField0_ = (bitField0_ & ~0x00000004);
              rewardBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRewardFieldBuilder() : null;
            } else {
              rewardBuilder_.addAllMessages(other.reward_);
            }
          }
        }
        if (partnerInfoListBuilder_ == null) {
          if (!other.partnerInfoList_.isEmpty()) {
            if (partnerInfoList_.isEmpty()) {
              partnerInfoList_ = other.partnerInfoList_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensurePartnerInfoListIsMutable();
              partnerInfoList_.addAll(other.partnerInfoList_);
            }
            onChanged();
          }
        } else {
          if (!other.partnerInfoList_.isEmpty()) {
            if (partnerInfoListBuilder_.isEmpty()) {
              partnerInfoListBuilder_.dispose();
              partnerInfoListBuilder_ = null;
              partnerInfoList_ = other.partnerInfoList_;
              bitField0_ = (bitField0_ & ~0x00000008);
              partnerInfoListBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPartnerInfoListFieldBuilder() : null;
            } else {
              partnerInfoListBuilder_.addAllMessages(other.partnerInfoList_);
            }
          }
        }
        if (!other.chipItemList_.isEmpty()) {
          if (chipItemList_.isEmpty()) {
            chipItemList_ = other.chipItemList_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureChipItemListIsMutable();
            chipItemList_.addAll(other.chipItemList_);
          }
          onChanged();
        }
        if (other.hasCardInfo()) {
          mergeCardInfo(other.getCardInfo());
        }
        if (other.hasRewardScore()) {
          setRewardScore(other.getRewardScore());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getPartnerInfoListCount(); i++) {
          if (!getPartnerInfoList(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game.msg.MsgCard.SCDrawCardMsg parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game.msg.MsgCard.SCDrawCardMsg) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .game.msg.EDrawType type = 1;
      private game.msg.Define.EDrawType type_ = game.msg.Define.EDrawType.BySummonToken;
      /**
       * <code>optional .game.msg.EDrawType type = 1;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .game.msg.EDrawType type = 1;</code>
       */
      public game.msg.Define.EDrawType getType() {
        return type_;
      }
      /**
       * <code>optional .game.msg.EDrawType type = 1;</code>
       */
      public Builder setType(game.msg.Define.EDrawType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .game.msg.EDrawType type = 1;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = game.msg.Define.EDrawType.BySummonToken;
        onChanged();
        return this;
      }

      // optional .game.msg.EDrawOperation operation = 2;
      private game.msg.Define.EDrawOperation operation_ = game.msg.Define.EDrawOperation.One;
      /**
       * <code>optional .game.msg.EDrawOperation operation = 2;</code>
       */
      public boolean hasOperation() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .game.msg.EDrawOperation operation = 2;</code>
       */
      public game.msg.Define.EDrawOperation getOperation() {
        return operation_;
      }
      /**
       * <code>optional .game.msg.EDrawOperation operation = 2;</code>
       */
      public Builder setOperation(game.msg.Define.EDrawOperation value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        operation_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .game.msg.EDrawOperation operation = 2;</code>
       */
      public Builder clearOperation() {
        bitField0_ = (bitField0_ & ~0x00000002);
        operation_ = game.msg.Define.EDrawOperation.One;
        onChanged();
        return this;
      }

      // repeated .game.msg.DDropItem reward = 3;
      private java.util.List<game.msg.Define.DDropItem> reward_ =
        java.util.Collections.emptyList();
      private void ensureRewardIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          reward_ = new java.util.ArrayList<game.msg.Define.DDropItem>(reward_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          game.msg.Define.DDropItem, game.msg.Define.DDropItem.Builder, game.msg.Define.DDropItemOrBuilder> rewardBuilder_;

      /**
       * <code>repeated .game.msg.DDropItem reward = 3;</code>
       *
       * <pre>
       *奖励道具列表
       * </pre>
       */
      public java.util.List<game.msg.Define.DDropItem> getRewardList() {
        if (rewardBuilder_ == null) {
          return java.util.Collections.unmodifiableList(reward_);
        } else {
          return rewardBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .game.msg.DDropItem reward = 3;</code>
       *
       * <pre>
       *奖励道具列表
       * </pre>
       */
      public int getRewardCount() {
        if (rewardBuilder_ == null) {
          return reward_.size();
        } else {
          return rewardBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .game.msg.DDropItem reward = 3;</code>
       *
       * <pre>
       *奖励道具列表
       * </pre>
       */
      public game.msg.Define.DDropItem getReward(int index) {
        if (rewardBuilder_ == null) {
          return reward_.get(index);
        } else {
          return rewardBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .game.msg.DDropItem reward = 3;</code>
       *
       * <pre>
       *奖励道具列表
       * </pre>
       */
      public Builder setReward(
          int index, game.msg.Define.DDropItem value) {
        if (rewardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRewardIsMutable();
          reward_.set(index, value);
          onChanged();
        } else {
          rewardBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DDropItem reward = 3;</code>
       *
       * <pre>
       *奖励道具列表
       * </pre>
       */
      public Builder setReward(
          int index, game.msg.Define.DDropItem.Builder builderForValue) {
        if (rewardBuilder_ == null) {
          ensureRewardIsMutable();
          reward_.set(index, builderForValue.build());
          onChanged();
        } else {
          rewardBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DDropItem reward = 3;</code>
       *
       * <pre>
       *奖励道具列表
       * </pre>
       */
      public Builder addReward(game.msg.Define.DDropItem value) {
        if (rewardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRewardIsMutable();
          reward_.add(value);
          onChanged();
        } else {
          rewardBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DDropItem reward = 3;</code>
       *
       * <pre>
       *奖励道具列表
       * </pre>
       */
      public Builder addReward(
          int index, game.msg.Define.DDropItem value) {
        if (rewardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRewardIsMutable();
          reward_.add(index, value);
          onChanged();
        } else {
          rewardBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DDropItem reward = 3;</code>
       *
       * <pre>
       *奖励道具列表
       * </pre>
       */
      public Builder addReward(
          game.msg.Define.DDropItem.Builder builderForValue) {
        if (rewardBuilder_ == null) {
          ensureRewardIsMutable();
          reward_.add(builderForValue.build());
          onChanged();
        } else {
          rewardBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DDropItem reward = 3;</code>
       *
       * <pre>
       *奖励道具列表
       * </pre>
       */
      public Builder addReward(
          int index, game.msg.Define.DDropItem.Builder builderForValue) {
        if (rewardBuilder_ == null) {
          ensureRewardIsMutable();
          reward_.add(index, builderForValue.build());
          onChanged();
        } else {
          rewardBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DDropItem reward = 3;</code>
       *
       * <pre>
       *奖励道具列表
       * </pre>
       */
      public Builder addAllReward(
          java.lang.Iterable<? extends game.msg.Define.DDropItem> values) {
        if (rewardBuilder_ == null) {
          ensureRewardIsMutable();
          super.addAll(values, reward_);
          onChanged();
        } else {
          rewardBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DDropItem reward = 3;</code>
       *
       * <pre>
       *奖励道具列表
       * </pre>
       */
      public Builder clearReward() {
        if (rewardBuilder_ == null) {
          reward_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          rewardBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DDropItem reward = 3;</code>
       *
       * <pre>
       *奖励道具列表
       * </pre>
       */
      public Builder removeReward(int index) {
        if (rewardBuilder_ == null) {
          ensureRewardIsMutable();
          reward_.remove(index);
          onChanged();
        } else {
          rewardBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DDropItem reward = 3;</code>
       *
       * <pre>
       *奖励道具列表
       * </pre>
       */
      public game.msg.Define.DDropItem.Builder getRewardBuilder(
          int index) {
        return getRewardFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .game.msg.DDropItem reward = 3;</code>
       *
       * <pre>
       *奖励道具列表
       * </pre>
       */
      public game.msg.Define.DDropItemOrBuilder getRewardOrBuilder(
          int index) {
        if (rewardBuilder_ == null) {
          return reward_.get(index);  } else {
          return rewardBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .game.msg.DDropItem reward = 3;</code>
       *
       * <pre>
       *奖励道具列表
       * </pre>
       */
      public java.util.List<? extends game.msg.Define.DDropItemOrBuilder> 
           getRewardOrBuilderList() {
        if (rewardBuilder_ != null) {
          return rewardBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(reward_);
        }
      }
      /**
       * <code>repeated .game.msg.DDropItem reward = 3;</code>
       *
       * <pre>
       *奖励道具列表
       * </pre>
       */
      public game.msg.Define.DDropItem.Builder addRewardBuilder() {
        return getRewardFieldBuilder().addBuilder(
            game.msg.Define.DDropItem.getDefaultInstance());
      }
      /**
       * <code>repeated .game.msg.DDropItem reward = 3;</code>
       *
       * <pre>
       *奖励道具列表
       * </pre>
       */
      public game.msg.Define.DDropItem.Builder addRewardBuilder(
          int index) {
        return getRewardFieldBuilder().addBuilder(
            index, game.msg.Define.DDropItem.getDefaultInstance());
      }
      /**
       * <code>repeated .game.msg.DDropItem reward = 3;</code>
       *
       * <pre>
       *奖励道具列表
       * </pre>
       */
      public java.util.List<game.msg.Define.DDropItem.Builder> 
           getRewardBuilderList() {
        return getRewardFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          game.msg.Define.DDropItem, game.msg.Define.DDropItem.Builder, game.msg.Define.DDropItemOrBuilder> 
          getRewardFieldBuilder() {
        if (rewardBuilder_ == null) {
          rewardBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              game.msg.Define.DDropItem, game.msg.Define.DDropItem.Builder, game.msg.Define.DDropItemOrBuilder>(
                  reward_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          reward_ = null;
        }
        return rewardBuilder_;
      }

      // repeated .game.msg.DPartnerInfo partnerInfoList = 4;
      private java.util.List<game.msg.Define.DPartnerInfo> partnerInfoList_ =
        java.util.Collections.emptyList();
      private void ensurePartnerInfoListIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          partnerInfoList_ = new java.util.ArrayList<game.msg.Define.DPartnerInfo>(partnerInfoList_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          game.msg.Define.DPartnerInfo, game.msg.Define.DPartnerInfo.Builder, game.msg.Define.DPartnerInfoOrBuilder> partnerInfoListBuilder_;

      /**
       * <code>repeated .game.msg.DPartnerInfo partnerInfoList = 4;</code>
       *
       * <pre>
       *新增伙伴信息
       * </pre>
       */
      public java.util.List<game.msg.Define.DPartnerInfo> getPartnerInfoListList() {
        if (partnerInfoListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(partnerInfoList_);
        } else {
          return partnerInfoListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .game.msg.DPartnerInfo partnerInfoList = 4;</code>
       *
       * <pre>
       *新增伙伴信息
       * </pre>
       */
      public int getPartnerInfoListCount() {
        if (partnerInfoListBuilder_ == null) {
          return partnerInfoList_.size();
        } else {
          return partnerInfoListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .game.msg.DPartnerInfo partnerInfoList = 4;</code>
       *
       * <pre>
       *新增伙伴信息
       * </pre>
       */
      public game.msg.Define.DPartnerInfo getPartnerInfoList(int index) {
        if (partnerInfoListBuilder_ == null) {
          return partnerInfoList_.get(index);
        } else {
          return partnerInfoListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .game.msg.DPartnerInfo partnerInfoList = 4;</code>
       *
       * <pre>
       *新增伙伴信息
       * </pre>
       */
      public Builder setPartnerInfoList(
          int index, game.msg.Define.DPartnerInfo value) {
        if (partnerInfoListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePartnerInfoListIsMutable();
          partnerInfoList_.set(index, value);
          onChanged();
        } else {
          partnerInfoListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DPartnerInfo partnerInfoList = 4;</code>
       *
       * <pre>
       *新增伙伴信息
       * </pre>
       */
      public Builder setPartnerInfoList(
          int index, game.msg.Define.DPartnerInfo.Builder builderForValue) {
        if (partnerInfoListBuilder_ == null) {
          ensurePartnerInfoListIsMutable();
          partnerInfoList_.set(index, builderForValue.build());
          onChanged();
        } else {
          partnerInfoListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DPartnerInfo partnerInfoList = 4;</code>
       *
       * <pre>
       *新增伙伴信息
       * </pre>
       */
      public Builder addPartnerInfoList(game.msg.Define.DPartnerInfo value) {
        if (partnerInfoListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePartnerInfoListIsMutable();
          partnerInfoList_.add(value);
          onChanged();
        } else {
          partnerInfoListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DPartnerInfo partnerInfoList = 4;</code>
       *
       * <pre>
       *新增伙伴信息
       * </pre>
       */
      public Builder addPartnerInfoList(
          int index, game.msg.Define.DPartnerInfo value) {
        if (partnerInfoListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePartnerInfoListIsMutable();
          partnerInfoList_.add(index, value);
          onChanged();
        } else {
          partnerInfoListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DPartnerInfo partnerInfoList = 4;</code>
       *
       * <pre>
       *新增伙伴信息
       * </pre>
       */
      public Builder addPartnerInfoList(
          game.msg.Define.DPartnerInfo.Builder builderForValue) {
        if (partnerInfoListBuilder_ == null) {
          ensurePartnerInfoListIsMutable();
          partnerInfoList_.add(builderForValue.build());
          onChanged();
        } else {
          partnerInfoListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DPartnerInfo partnerInfoList = 4;</code>
       *
       * <pre>
       *新增伙伴信息
       * </pre>
       */
      public Builder addPartnerInfoList(
          int index, game.msg.Define.DPartnerInfo.Builder builderForValue) {
        if (partnerInfoListBuilder_ == null) {
          ensurePartnerInfoListIsMutable();
          partnerInfoList_.add(index, builderForValue.build());
          onChanged();
        } else {
          partnerInfoListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DPartnerInfo partnerInfoList = 4;</code>
       *
       * <pre>
       *新增伙伴信息
       * </pre>
       */
      public Builder addAllPartnerInfoList(
          java.lang.Iterable<? extends game.msg.Define.DPartnerInfo> values) {
        if (partnerInfoListBuilder_ == null) {
          ensurePartnerInfoListIsMutable();
          super.addAll(values, partnerInfoList_);
          onChanged();
        } else {
          partnerInfoListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DPartnerInfo partnerInfoList = 4;</code>
       *
       * <pre>
       *新增伙伴信息
       * </pre>
       */
      public Builder clearPartnerInfoList() {
        if (partnerInfoListBuilder_ == null) {
          partnerInfoList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          partnerInfoListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DPartnerInfo partnerInfoList = 4;</code>
       *
       * <pre>
       *新增伙伴信息
       * </pre>
       */
      public Builder removePartnerInfoList(int index) {
        if (partnerInfoListBuilder_ == null) {
          ensurePartnerInfoListIsMutable();
          partnerInfoList_.remove(index);
          onChanged();
        } else {
          partnerInfoListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DPartnerInfo partnerInfoList = 4;</code>
       *
       * <pre>
       *新增伙伴信息
       * </pre>
       */
      public game.msg.Define.DPartnerInfo.Builder getPartnerInfoListBuilder(
          int index) {
        return getPartnerInfoListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .game.msg.DPartnerInfo partnerInfoList = 4;</code>
       *
       * <pre>
       *新增伙伴信息
       * </pre>
       */
      public game.msg.Define.DPartnerInfoOrBuilder getPartnerInfoListOrBuilder(
          int index) {
        if (partnerInfoListBuilder_ == null) {
          return partnerInfoList_.get(index);  } else {
          return partnerInfoListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .game.msg.DPartnerInfo partnerInfoList = 4;</code>
       *
       * <pre>
       *新增伙伴信息
       * </pre>
       */
      public java.util.List<? extends game.msg.Define.DPartnerInfoOrBuilder> 
           getPartnerInfoListOrBuilderList() {
        if (partnerInfoListBuilder_ != null) {
          return partnerInfoListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(partnerInfoList_);
        }
      }
      /**
       * <code>repeated .game.msg.DPartnerInfo partnerInfoList = 4;</code>
       *
       * <pre>
       *新增伙伴信息
       * </pre>
       */
      public game.msg.Define.DPartnerInfo.Builder addPartnerInfoListBuilder() {
        return getPartnerInfoListFieldBuilder().addBuilder(
            game.msg.Define.DPartnerInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .game.msg.DPartnerInfo partnerInfoList = 4;</code>
       *
       * <pre>
       *新增伙伴信息
       * </pre>
       */
      public game.msg.Define.DPartnerInfo.Builder addPartnerInfoListBuilder(
          int index) {
        return getPartnerInfoListFieldBuilder().addBuilder(
            index, game.msg.Define.DPartnerInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .game.msg.DPartnerInfo partnerInfoList = 4;</code>
       *
       * <pre>
       *新增伙伴信息
       * </pre>
       */
      public java.util.List<game.msg.Define.DPartnerInfo.Builder> 
           getPartnerInfoListBuilderList() {
        return getPartnerInfoListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          game.msg.Define.DPartnerInfo, game.msg.Define.DPartnerInfo.Builder, game.msg.Define.DPartnerInfoOrBuilder> 
          getPartnerInfoListFieldBuilder() {
        if (partnerInfoListBuilder_ == null) {
          partnerInfoListBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              game.msg.Define.DPartnerInfo, game.msg.Define.DPartnerInfo.Builder, game.msg.Define.DPartnerInfoOrBuilder>(
                  partnerInfoList_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          partnerInfoList_ = null;
        }
        return partnerInfoListBuilder_;
      }

      // repeated int32 chipItemList = 5;
      private java.util.List<java.lang.Integer> chipItemList_ = java.util.Collections.emptyList();
      private void ensureChipItemListIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          chipItemList_ = new java.util.ArrayList<java.lang.Integer>(chipItemList_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated int32 chipItemList = 5;</code>
       *
       * <pre>
       *由英雄转换成物品的列表
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getChipItemListList() {
        return java.util.Collections.unmodifiableList(chipItemList_);
      }
      /**
       * <code>repeated int32 chipItemList = 5;</code>
       *
       * <pre>
       *由英雄转换成物品的列表
       * </pre>
       */
      public int getChipItemListCount() {
        return chipItemList_.size();
      }
      /**
       * <code>repeated int32 chipItemList = 5;</code>
       *
       * <pre>
       *由英雄转换成物品的列表
       * </pre>
       */
      public int getChipItemList(int index) {
        return chipItemList_.get(index);
      }
      /**
       * <code>repeated int32 chipItemList = 5;</code>
       *
       * <pre>
       *由英雄转换成物品的列表
       * </pre>
       */
      public Builder setChipItemList(
          int index, int value) {
        ensureChipItemListIsMutable();
        chipItemList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 chipItemList = 5;</code>
       *
       * <pre>
       *由英雄转换成物品的列表
       * </pre>
       */
      public Builder addChipItemList(int value) {
        ensureChipItemListIsMutable();
        chipItemList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 chipItemList = 5;</code>
       *
       * <pre>
       *由英雄转换成物品的列表
       * </pre>
       */
      public Builder addAllChipItemList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureChipItemListIsMutable();
        super.addAll(values, chipItemList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 chipItemList = 5;</code>
       *
       * <pre>
       *由英雄转换成物品的列表
       * </pre>
       */
      public Builder clearChipItemList() {
        chipItemList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      // optional .game.msg.DrawCardBaseMsh cardInfo = 6;
      private game.msg.Define.DrawCardBaseMsh cardInfo_ = game.msg.Define.DrawCardBaseMsh.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          game.msg.Define.DrawCardBaseMsh, game.msg.Define.DrawCardBaseMsh.Builder, game.msg.Define.DrawCardBaseMshOrBuilder> cardInfoBuilder_;
      /**
       * <code>optional .game.msg.DrawCardBaseMsh cardInfo = 6;</code>
       *
       * <pre>
       *抽卡信息
       * </pre>
       */
      public boolean hasCardInfo() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .game.msg.DrawCardBaseMsh cardInfo = 6;</code>
       *
       * <pre>
       *抽卡信息
       * </pre>
       */
      public game.msg.Define.DrawCardBaseMsh getCardInfo() {
        if (cardInfoBuilder_ == null) {
          return cardInfo_;
        } else {
          return cardInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .game.msg.DrawCardBaseMsh cardInfo = 6;</code>
       *
       * <pre>
       *抽卡信息
       * </pre>
       */
      public Builder setCardInfo(game.msg.Define.DrawCardBaseMsh value) {
        if (cardInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          cardInfo_ = value;
          onChanged();
        } else {
          cardInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .game.msg.DrawCardBaseMsh cardInfo = 6;</code>
       *
       * <pre>
       *抽卡信息
       * </pre>
       */
      public Builder setCardInfo(
          game.msg.Define.DrawCardBaseMsh.Builder builderForValue) {
        if (cardInfoBuilder_ == null) {
          cardInfo_ = builderForValue.build();
          onChanged();
        } else {
          cardInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .game.msg.DrawCardBaseMsh cardInfo = 6;</code>
       *
       * <pre>
       *抽卡信息
       * </pre>
       */
      public Builder mergeCardInfo(game.msg.Define.DrawCardBaseMsh value) {
        if (cardInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              cardInfo_ != game.msg.Define.DrawCardBaseMsh.getDefaultInstance()) {
            cardInfo_ =
              game.msg.Define.DrawCardBaseMsh.newBuilder(cardInfo_).mergeFrom(value).buildPartial();
          } else {
            cardInfo_ = value;
          }
          onChanged();
        } else {
          cardInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .game.msg.DrawCardBaseMsh cardInfo = 6;</code>
       *
       * <pre>
       *抽卡信息
       * </pre>
       */
      public Builder clearCardInfo() {
        if (cardInfoBuilder_ == null) {
          cardInfo_ = game.msg.Define.DrawCardBaseMsh.getDefaultInstance();
          onChanged();
        } else {
          cardInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .game.msg.DrawCardBaseMsh cardInfo = 6;</code>
       *
       * <pre>
       *抽卡信息
       * </pre>
       */
      public game.msg.Define.DrawCardBaseMsh.Builder getCardInfoBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getCardInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .game.msg.DrawCardBaseMsh cardInfo = 6;</code>
       *
       * <pre>
       *抽卡信息
       * </pre>
       */
      public game.msg.Define.DrawCardBaseMshOrBuilder getCardInfoOrBuilder() {
        if (cardInfoBuilder_ != null) {
          return cardInfoBuilder_.getMessageOrBuilder();
        } else {
          return cardInfo_;
        }
      }
      /**
       * <code>optional .game.msg.DrawCardBaseMsh cardInfo = 6;</code>
       *
       * <pre>
       *抽卡信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          game.msg.Define.DrawCardBaseMsh, game.msg.Define.DrawCardBaseMsh.Builder, game.msg.Define.DrawCardBaseMshOrBuilder> 
          getCardInfoFieldBuilder() {
        if (cardInfoBuilder_ == null) {
          cardInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              game.msg.Define.DrawCardBaseMsh, game.msg.Define.DrawCardBaseMsh.Builder, game.msg.Define.DrawCardBaseMshOrBuilder>(
                  cardInfo_,
                  getParentForChildren(),
                  isClean());
          cardInfo_ = null;
        }
        return cardInfoBuilder_;
      }

      // optional int32 rewardScore = 7;
      private int rewardScore_ ;
      /**
       * <code>optional int32 rewardScore = 7;</code>
       *
       * <pre>
       * 抽卡奖励积分
       * </pre>
       */
      public boolean hasRewardScore() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 rewardScore = 7;</code>
       *
       * <pre>
       * 抽卡奖励积分
       * </pre>
       */
      public int getRewardScore() {
        return rewardScore_;
      }
      /**
       * <code>optional int32 rewardScore = 7;</code>
       *
       * <pre>
       * 抽卡奖励积分
       * </pre>
       */
      public Builder setRewardScore(int value) {
        bitField0_ |= 0x00000040;
        rewardScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 rewardScore = 7;</code>
       *
       * <pre>
       * 抽卡奖励积分
       * </pre>
       */
      public Builder clearRewardScore() {
        bitField0_ = (bitField0_ & ~0x00000040);
        rewardScore_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:game.msg.SCDrawCardMsg)
    }

    static {
      defaultInstance = new SCDrawCardMsg(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game.msg.SCDrawCardMsg)
  }

  public interface CSSummonScoreExchangeOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 index = 1;
    /**
     * <code>optional int32 index = 1;</code>
     *
     * <pre>
     * 兑换第几阶的礼包
     * </pre>
     */
    boolean hasIndex();
    /**
     * <code>optional int32 index = 1;</code>
     *
     * <pre>
     * 兑换第几阶的礼包
     * </pre>
     */
    int getIndex();

    // optional int32 selectIndex = 2;
    /**
     * <code>optional int32 selectIndex = 2;</code>
     *
     * <pre>
     * 选择兑换礼包中的物品index
     * </pre>
     */
    boolean hasSelectIndex();
    /**
     * <code>optional int32 selectIndex = 2;</code>
     *
     * <pre>
     * 选择兑换礼包中的物品index
     * </pre>
     */
    int getSelectIndex();
  }
  /**
   * Protobuf type {@code game.msg.CSSummonScoreExchange}
   *
   * <pre>
   * 请求，抽卡积分兑换
   * </pre>
   */
  public static final class CSSummonScoreExchange extends
      com.google.protobuf.GeneratedMessage
      implements CSSummonScoreExchangeOrBuilder {
    // Use CSSummonScoreExchange.newBuilder() to construct.
    private CSSummonScoreExchange(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CSSummonScoreExchange(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CSSummonScoreExchange defaultInstance;
    public static CSSummonScoreExchange getDefaultInstance() {
      return defaultInstance;
    }

    public CSSummonScoreExchange getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CSSummonScoreExchange(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              index_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              selectIndex_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game.msg.MsgCard.internal_static_game_msg_CSSummonScoreExchange_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game.msg.MsgCard.internal_static_game_msg_CSSummonScoreExchange_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game.msg.MsgCard.CSSummonScoreExchange.class, game.msg.MsgCard.CSSummonScoreExchange.Builder.class);
    }

    public static com.google.protobuf.Parser<CSSummonScoreExchange> PARSER =
        new com.google.protobuf.AbstractParser<CSSummonScoreExchange>() {
      public CSSummonScoreExchange parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CSSummonScoreExchange(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CSSummonScoreExchange> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 index = 1;
    public static final int INDEX_FIELD_NUMBER = 1;
    private int index_;
    /**
     * <code>optional int32 index = 1;</code>
     *
     * <pre>
     * 兑换第几阶的礼包
     * </pre>
     */
    public boolean hasIndex() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 index = 1;</code>
     *
     * <pre>
     * 兑换第几阶的礼包
     * </pre>
     */
    public int getIndex() {
      return index_;
    }

    // optional int32 selectIndex = 2;
    public static final int SELECTINDEX_FIELD_NUMBER = 2;
    private int selectIndex_;
    /**
     * <code>optional int32 selectIndex = 2;</code>
     *
     * <pre>
     * 选择兑换礼包中的物品index
     * </pre>
     */
    public boolean hasSelectIndex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 selectIndex = 2;</code>
     *
     * <pre>
     * 选择兑换礼包中的物品index
     * </pre>
     */
    public int getSelectIndex() {
      return selectIndex_;
    }

    private void initFields() {
      index_ = 0;
      selectIndex_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, index_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, selectIndex_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, index_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, selectIndex_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game.msg.MsgCard.CSSummonScoreExchange parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgCard.CSSummonScoreExchange parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgCard.CSSummonScoreExchange parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgCard.CSSummonScoreExchange parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgCard.CSSummonScoreExchange parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgCard.CSSummonScoreExchange parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game.msg.MsgCard.CSSummonScoreExchange parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game.msg.MsgCard.CSSummonScoreExchange parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game.msg.MsgCard.CSSummonScoreExchange parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgCard.CSSummonScoreExchange parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game.msg.MsgCard.CSSummonScoreExchange prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game.msg.CSSummonScoreExchange}
     *
     * <pre>
     * 请求，抽卡积分兑换
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game.msg.MsgCard.CSSummonScoreExchangeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game.msg.MsgCard.internal_static_game_msg_CSSummonScoreExchange_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game.msg.MsgCard.internal_static_game_msg_CSSummonScoreExchange_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game.msg.MsgCard.CSSummonScoreExchange.class, game.msg.MsgCard.CSSummonScoreExchange.Builder.class);
      }

      // Construct using game.msg.MsgCard.CSSummonScoreExchange.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        index_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        selectIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game.msg.MsgCard.internal_static_game_msg_CSSummonScoreExchange_descriptor;
      }

      public game.msg.MsgCard.CSSummonScoreExchange getDefaultInstanceForType() {
        return game.msg.MsgCard.CSSummonScoreExchange.getDefaultInstance();
      }

      public game.msg.MsgCard.CSSummonScoreExchange build() {
        game.msg.MsgCard.CSSummonScoreExchange result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game.msg.MsgCard.CSSummonScoreExchange buildPartial() {
        game.msg.MsgCard.CSSummonScoreExchange result = new game.msg.MsgCard.CSSummonScoreExchange(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.index_ = index_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.selectIndex_ = selectIndex_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game.msg.MsgCard.CSSummonScoreExchange) {
          return mergeFrom((game.msg.MsgCard.CSSummonScoreExchange)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game.msg.MsgCard.CSSummonScoreExchange other) {
        if (other == game.msg.MsgCard.CSSummonScoreExchange.getDefaultInstance()) return this;
        if (other.hasIndex()) {
          setIndex(other.getIndex());
        }
        if (other.hasSelectIndex()) {
          setSelectIndex(other.getSelectIndex());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game.msg.MsgCard.CSSummonScoreExchange parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game.msg.MsgCard.CSSummonScoreExchange) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 index = 1;
      private int index_ ;
      /**
       * <code>optional int32 index = 1;</code>
       *
       * <pre>
       * 兑换第几阶的礼包
       * </pre>
       */
      public boolean hasIndex() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 index = 1;</code>
       *
       * <pre>
       * 兑换第几阶的礼包
       * </pre>
       */
      public int getIndex() {
        return index_;
      }
      /**
       * <code>optional int32 index = 1;</code>
       *
       * <pre>
       * 兑换第几阶的礼包
       * </pre>
       */
      public Builder setIndex(int value) {
        bitField0_ |= 0x00000001;
        index_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 index = 1;</code>
       *
       * <pre>
       * 兑换第几阶的礼包
       * </pre>
       */
      public Builder clearIndex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        index_ = 0;
        onChanged();
        return this;
      }

      // optional int32 selectIndex = 2;
      private int selectIndex_ ;
      /**
       * <code>optional int32 selectIndex = 2;</code>
       *
       * <pre>
       * 选择兑换礼包中的物品index
       * </pre>
       */
      public boolean hasSelectIndex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 selectIndex = 2;</code>
       *
       * <pre>
       * 选择兑换礼包中的物品index
       * </pre>
       */
      public int getSelectIndex() {
        return selectIndex_;
      }
      /**
       * <code>optional int32 selectIndex = 2;</code>
       *
       * <pre>
       * 选择兑换礼包中的物品index
       * </pre>
       */
      public Builder setSelectIndex(int value) {
        bitField0_ |= 0x00000002;
        selectIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 selectIndex = 2;</code>
       *
       * <pre>
       * 选择兑换礼包中的物品index
       * </pre>
       */
      public Builder clearSelectIndex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        selectIndex_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:game.msg.CSSummonScoreExchange)
    }

    static {
      defaultInstance = new CSSummonScoreExchange(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game.msg.CSSummonScoreExchange)
  }

  public interface SCSummonScoreExchangeOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .game.msg.DCardExchangeInfo info = 1;
    /**
     * <code>optional .game.msg.DCardExchangeInfo info = 1;</code>
     *
     * <pre>
     * 积分兑换卡片信息
     * </pre>
     */
    boolean hasInfo();
    /**
     * <code>optional .game.msg.DCardExchangeInfo info = 1;</code>
     *
     * <pre>
     * 积分兑换卡片信息
     * </pre>
     */
    game.msg.Define.DCardExchangeInfo getInfo();
    /**
     * <code>optional .game.msg.DCardExchangeInfo info = 1;</code>
     *
     * <pre>
     * 积分兑换卡片信息
     * </pre>
     */
    game.msg.Define.DCardExchangeInfoOrBuilder getInfoOrBuilder();

    // optional .game.msg.DProduce produce = 3;
    /**
     * <code>optional .game.msg.DProduce produce = 3;</code>
     *
     * <pre>
     * 获得的奖励道具
     * </pre>
     */
    boolean hasProduce();
    /**
     * <code>optional .game.msg.DProduce produce = 3;</code>
     *
     * <pre>
     * 获得的奖励道具
     * </pre>
     */
    game.msg.Define.DProduce getProduce();
    /**
     * <code>optional .game.msg.DProduce produce = 3;</code>
     *
     * <pre>
     * 获得的奖励道具
     * </pre>
     */
    game.msg.Define.DProduceOrBuilder getProduceOrBuilder();
  }
  /**
   * Protobuf type {@code game.msg.SCSummonScoreExchange}
   *
   * <pre>
   * 应答，抽卡积分兑换
   * </pre>
   */
  public static final class SCSummonScoreExchange extends
      com.google.protobuf.GeneratedMessage
      implements SCSummonScoreExchangeOrBuilder {
    // Use SCSummonScoreExchange.newBuilder() to construct.
    private SCSummonScoreExchange(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SCSummonScoreExchange(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SCSummonScoreExchange defaultInstance;
    public static SCSummonScoreExchange getDefaultInstance() {
      return defaultInstance;
    }

    public SCSummonScoreExchange getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SCSummonScoreExchange(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              game.msg.Define.DCardExchangeInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = info_.toBuilder();
              }
              info_ = input.readMessage(game.msg.Define.DCardExchangeInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(info_);
                info_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 26: {
              game.msg.Define.DProduce.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = produce_.toBuilder();
              }
              produce_ = input.readMessage(game.msg.Define.DProduce.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(produce_);
                produce_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game.msg.MsgCard.internal_static_game_msg_SCSummonScoreExchange_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game.msg.MsgCard.internal_static_game_msg_SCSummonScoreExchange_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game.msg.MsgCard.SCSummonScoreExchange.class, game.msg.MsgCard.SCSummonScoreExchange.Builder.class);
    }

    public static com.google.protobuf.Parser<SCSummonScoreExchange> PARSER =
        new com.google.protobuf.AbstractParser<SCSummonScoreExchange>() {
      public SCSummonScoreExchange parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SCSummonScoreExchange(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SCSummonScoreExchange> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .game.msg.DCardExchangeInfo info = 1;
    public static final int INFO_FIELD_NUMBER = 1;
    private game.msg.Define.DCardExchangeInfo info_;
    /**
     * <code>optional .game.msg.DCardExchangeInfo info = 1;</code>
     *
     * <pre>
     * 积分兑换卡片信息
     * </pre>
     */
    public boolean hasInfo() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .game.msg.DCardExchangeInfo info = 1;</code>
     *
     * <pre>
     * 积分兑换卡片信息
     * </pre>
     */
    public game.msg.Define.DCardExchangeInfo getInfo() {
      return info_;
    }
    /**
     * <code>optional .game.msg.DCardExchangeInfo info = 1;</code>
     *
     * <pre>
     * 积分兑换卡片信息
     * </pre>
     */
    public game.msg.Define.DCardExchangeInfoOrBuilder getInfoOrBuilder() {
      return info_;
    }

    // optional .game.msg.DProduce produce = 3;
    public static final int PRODUCE_FIELD_NUMBER = 3;
    private game.msg.Define.DProduce produce_;
    /**
     * <code>optional .game.msg.DProduce produce = 3;</code>
     *
     * <pre>
     * 获得的奖励道具
     * </pre>
     */
    public boolean hasProduce() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .game.msg.DProduce produce = 3;</code>
     *
     * <pre>
     * 获得的奖励道具
     * </pre>
     */
    public game.msg.Define.DProduce getProduce() {
      return produce_;
    }
    /**
     * <code>optional .game.msg.DProduce produce = 3;</code>
     *
     * <pre>
     * 获得的奖励道具
     * </pre>
     */
    public game.msg.Define.DProduceOrBuilder getProduceOrBuilder() {
      return produce_;
    }

    private void initFields() {
      info_ = game.msg.Define.DCardExchangeInfo.getDefaultInstance();
      produce_ = game.msg.Define.DProduce.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, info_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(3, produce_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, info_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, produce_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game.msg.MsgCard.SCSummonScoreExchange parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgCard.SCSummonScoreExchange parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgCard.SCSummonScoreExchange parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgCard.SCSummonScoreExchange parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgCard.SCSummonScoreExchange parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgCard.SCSummonScoreExchange parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game.msg.MsgCard.SCSummonScoreExchange parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game.msg.MsgCard.SCSummonScoreExchange parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game.msg.MsgCard.SCSummonScoreExchange parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgCard.SCSummonScoreExchange parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game.msg.MsgCard.SCSummonScoreExchange prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game.msg.SCSummonScoreExchange}
     *
     * <pre>
     * 应答，抽卡积分兑换
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game.msg.MsgCard.SCSummonScoreExchangeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game.msg.MsgCard.internal_static_game_msg_SCSummonScoreExchange_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game.msg.MsgCard.internal_static_game_msg_SCSummonScoreExchange_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game.msg.MsgCard.SCSummonScoreExchange.class, game.msg.MsgCard.SCSummonScoreExchange.Builder.class);
      }

      // Construct using game.msg.MsgCard.SCSummonScoreExchange.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getInfoFieldBuilder();
          getProduceFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (infoBuilder_ == null) {
          info_ = game.msg.Define.DCardExchangeInfo.getDefaultInstance();
        } else {
          infoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (produceBuilder_ == null) {
          produce_ = game.msg.Define.DProduce.getDefaultInstance();
        } else {
          produceBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game.msg.MsgCard.internal_static_game_msg_SCSummonScoreExchange_descriptor;
      }

      public game.msg.MsgCard.SCSummonScoreExchange getDefaultInstanceForType() {
        return game.msg.MsgCard.SCSummonScoreExchange.getDefaultInstance();
      }

      public game.msg.MsgCard.SCSummonScoreExchange build() {
        game.msg.MsgCard.SCSummonScoreExchange result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game.msg.MsgCard.SCSummonScoreExchange buildPartial() {
        game.msg.MsgCard.SCSummonScoreExchange result = new game.msg.MsgCard.SCSummonScoreExchange(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (infoBuilder_ == null) {
          result.info_ = info_;
        } else {
          result.info_ = infoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (produceBuilder_ == null) {
          result.produce_ = produce_;
        } else {
          result.produce_ = produceBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game.msg.MsgCard.SCSummonScoreExchange) {
          return mergeFrom((game.msg.MsgCard.SCSummonScoreExchange)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game.msg.MsgCard.SCSummonScoreExchange other) {
        if (other == game.msg.MsgCard.SCSummonScoreExchange.getDefaultInstance()) return this;
        if (other.hasInfo()) {
          mergeInfo(other.getInfo());
        }
        if (other.hasProduce()) {
          mergeProduce(other.getProduce());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game.msg.MsgCard.SCSummonScoreExchange parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game.msg.MsgCard.SCSummonScoreExchange) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .game.msg.DCardExchangeInfo info = 1;
      private game.msg.Define.DCardExchangeInfo info_ = game.msg.Define.DCardExchangeInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          game.msg.Define.DCardExchangeInfo, game.msg.Define.DCardExchangeInfo.Builder, game.msg.Define.DCardExchangeInfoOrBuilder> infoBuilder_;
      /**
       * <code>optional .game.msg.DCardExchangeInfo info = 1;</code>
       *
       * <pre>
       * 积分兑换卡片信息
       * </pre>
       */
      public boolean hasInfo() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .game.msg.DCardExchangeInfo info = 1;</code>
       *
       * <pre>
       * 积分兑换卡片信息
       * </pre>
       */
      public game.msg.Define.DCardExchangeInfo getInfo() {
        if (infoBuilder_ == null) {
          return info_;
        } else {
          return infoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .game.msg.DCardExchangeInfo info = 1;</code>
       *
       * <pre>
       * 积分兑换卡片信息
       * </pre>
       */
      public Builder setInfo(game.msg.Define.DCardExchangeInfo value) {
        if (infoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          info_ = value;
          onChanged();
        } else {
          infoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .game.msg.DCardExchangeInfo info = 1;</code>
       *
       * <pre>
       * 积分兑换卡片信息
       * </pre>
       */
      public Builder setInfo(
          game.msg.Define.DCardExchangeInfo.Builder builderForValue) {
        if (infoBuilder_ == null) {
          info_ = builderForValue.build();
          onChanged();
        } else {
          infoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .game.msg.DCardExchangeInfo info = 1;</code>
       *
       * <pre>
       * 积分兑换卡片信息
       * </pre>
       */
      public Builder mergeInfo(game.msg.Define.DCardExchangeInfo value) {
        if (infoBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              info_ != game.msg.Define.DCardExchangeInfo.getDefaultInstance()) {
            info_ =
              game.msg.Define.DCardExchangeInfo.newBuilder(info_).mergeFrom(value).buildPartial();
          } else {
            info_ = value;
          }
          onChanged();
        } else {
          infoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .game.msg.DCardExchangeInfo info = 1;</code>
       *
       * <pre>
       * 积分兑换卡片信息
       * </pre>
       */
      public Builder clearInfo() {
        if (infoBuilder_ == null) {
          info_ = game.msg.Define.DCardExchangeInfo.getDefaultInstance();
          onChanged();
        } else {
          infoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .game.msg.DCardExchangeInfo info = 1;</code>
       *
       * <pre>
       * 积分兑换卡片信息
       * </pre>
       */
      public game.msg.Define.DCardExchangeInfo.Builder getInfoBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .game.msg.DCardExchangeInfo info = 1;</code>
       *
       * <pre>
       * 积分兑换卡片信息
       * </pre>
       */
      public game.msg.Define.DCardExchangeInfoOrBuilder getInfoOrBuilder() {
        if (infoBuilder_ != null) {
          return infoBuilder_.getMessageOrBuilder();
        } else {
          return info_;
        }
      }
      /**
       * <code>optional .game.msg.DCardExchangeInfo info = 1;</code>
       *
       * <pre>
       * 积分兑换卡片信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          game.msg.Define.DCardExchangeInfo, game.msg.Define.DCardExchangeInfo.Builder, game.msg.Define.DCardExchangeInfoOrBuilder> 
          getInfoFieldBuilder() {
        if (infoBuilder_ == null) {
          infoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              game.msg.Define.DCardExchangeInfo, game.msg.Define.DCardExchangeInfo.Builder, game.msg.Define.DCardExchangeInfoOrBuilder>(
                  info_,
                  getParentForChildren(),
                  isClean());
          info_ = null;
        }
        return infoBuilder_;
      }

      // optional .game.msg.DProduce produce = 3;
      private game.msg.Define.DProduce produce_ = game.msg.Define.DProduce.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          game.msg.Define.DProduce, game.msg.Define.DProduce.Builder, game.msg.Define.DProduceOrBuilder> produceBuilder_;
      /**
       * <code>optional .game.msg.DProduce produce = 3;</code>
       *
       * <pre>
       * 获得的奖励道具
       * </pre>
       */
      public boolean hasProduce() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .game.msg.DProduce produce = 3;</code>
       *
       * <pre>
       * 获得的奖励道具
       * </pre>
       */
      public game.msg.Define.DProduce getProduce() {
        if (produceBuilder_ == null) {
          return produce_;
        } else {
          return produceBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .game.msg.DProduce produce = 3;</code>
       *
       * <pre>
       * 获得的奖励道具
       * </pre>
       */
      public Builder setProduce(game.msg.Define.DProduce value) {
        if (produceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          produce_ = value;
          onChanged();
        } else {
          produceBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .game.msg.DProduce produce = 3;</code>
       *
       * <pre>
       * 获得的奖励道具
       * </pre>
       */
      public Builder setProduce(
          game.msg.Define.DProduce.Builder builderForValue) {
        if (produceBuilder_ == null) {
          produce_ = builderForValue.build();
          onChanged();
        } else {
          produceBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .game.msg.DProduce produce = 3;</code>
       *
       * <pre>
       * 获得的奖励道具
       * </pre>
       */
      public Builder mergeProduce(game.msg.Define.DProduce value) {
        if (produceBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              produce_ != game.msg.Define.DProduce.getDefaultInstance()) {
            produce_ =
              game.msg.Define.DProduce.newBuilder(produce_).mergeFrom(value).buildPartial();
          } else {
            produce_ = value;
          }
          onChanged();
        } else {
          produceBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .game.msg.DProduce produce = 3;</code>
       *
       * <pre>
       * 获得的奖励道具
       * </pre>
       */
      public Builder clearProduce() {
        if (produceBuilder_ == null) {
          produce_ = game.msg.Define.DProduce.getDefaultInstance();
          onChanged();
        } else {
          produceBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .game.msg.DProduce produce = 3;</code>
       *
       * <pre>
       * 获得的奖励道具
       * </pre>
       */
      public game.msg.Define.DProduce.Builder getProduceBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getProduceFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .game.msg.DProduce produce = 3;</code>
       *
       * <pre>
       * 获得的奖励道具
       * </pre>
       */
      public game.msg.Define.DProduceOrBuilder getProduceOrBuilder() {
        if (produceBuilder_ != null) {
          return produceBuilder_.getMessageOrBuilder();
        } else {
          return produce_;
        }
      }
      /**
       * <code>optional .game.msg.DProduce produce = 3;</code>
       *
       * <pre>
       * 获得的奖励道具
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          game.msg.Define.DProduce, game.msg.Define.DProduce.Builder, game.msg.Define.DProduceOrBuilder> 
          getProduceFieldBuilder() {
        if (produceBuilder_ == null) {
          produceBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              game.msg.Define.DProduce, game.msg.Define.DProduce.Builder, game.msg.Define.DProduceOrBuilder>(
                  produce_,
                  getParentForChildren(),
                  isClean());
          produce_ = null;
        }
        return produceBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:game.msg.SCSummonScoreExchange)
    }

    static {
      defaultInstance = new SCSummonScoreExchange(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game.msg.SCSummonScoreExchange)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_msg_SCLoadCardInfoMsg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_msg_SCLoadCardInfoMsg_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_msg_CSDrawCardMsg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_msg_CSDrawCardMsg_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_msg_SCDrawCardMsg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_msg_SCDrawCardMsg_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_msg_CSSummonScoreExchange_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_msg_CSSummonScoreExchange_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_msg_SCSummonScoreExchange_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_msg_SCSummonScoreExchange_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016msg.card.proto\022\010game.msg\032\roptions.prot" +
      "o\032\014define.proto\"z\n\021SCLoadCardInfoMsg\022+\n\010" +
      "cardInfo\030\001 \003(\0132\031.game.msg.DrawCardBaseMs" +
      "h\0221\n\014exchangeInfo\030\002 \001(\0132\033.game.msg.DCard" +
      "ExchangeInfo:\005\210\303\032\375*\"v\n\rCSDrawCardMsg\022!\n\004" +
      "type\030\001 \001(\0162\023.game.msg.EDrawType\022+\n\topera" +
      "tion\030\002 \001(\0162\030.game.msg.EDrawOperation\022\016\n\006" +
      "isFree\030\003 \001(\010:\005\210\303\032\376*\"\224\002\n\rSCDrawCardMsg\022!\n" +
      "\004type\030\001 \001(\0162\023.game.msg.EDrawType\022+\n\toper" +
      "ation\030\002 \001(\0162\030.game.msg.EDrawOperation\022#\n",
      "\006reward\030\003 \003(\0132\023.game.msg.DDropItem\022/\n\017pa" +
      "rtnerInfoList\030\004 \003(\0132\026.game.msg.DPartnerI" +
      "nfo\022\024\n\014chipItemList\030\005 \003(\005\022+\n\010cardInfo\030\006 " +
      "\001(\0132\031.game.msg.DrawCardBaseMsh\022\023\n\013reward" +
      "Score\030\007 \001(\005:\005\210\303\032\377*\"B\n\025CSSummonScoreExcha" +
      "nge\022\r\n\005index\030\001 \001(\005\022\023\n\013selectIndex\030\002 \001(\005:" +
      "\005\210\303\032\200+\"n\n\025SCSummonScoreExchange\022)\n\004info\030" +
      "\001 \001(\0132\033.game.msg.DCardExchangeInfo\022#\n\007pr" +
      "oduce\030\003 \001(\0132\022.game.msg.DProduce:\005\210\303\032\201+"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_game_msg_SCLoadCardInfoMsg_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_game_msg_SCLoadCardInfoMsg_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_msg_SCLoadCardInfoMsg_descriptor,
              new java.lang.String[] { "CardInfo", "ExchangeInfo", });
          internal_static_game_msg_CSDrawCardMsg_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_game_msg_CSDrawCardMsg_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_msg_CSDrawCardMsg_descriptor,
              new java.lang.String[] { "Type", "Operation", "IsFree", });
          internal_static_game_msg_SCDrawCardMsg_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_game_msg_SCDrawCardMsg_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_msg_SCDrawCardMsg_descriptor,
              new java.lang.String[] { "Type", "Operation", "Reward", "PartnerInfoList", "ChipItemList", "CardInfo", "RewardScore", });
          internal_static_game_msg_CSSummonScoreExchange_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_game_msg_CSSummonScoreExchange_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_msg_CSSummonScoreExchange_descriptor,
              new java.lang.String[] { "Index", "SelectIndex", });
          internal_static_game_msg_SCSummonScoreExchange_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_game_msg_SCSummonScoreExchange_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_msg_SCSummonScoreExchange_descriptor,
              new java.lang.String[] { "Info", "Produce", });
          com.google.protobuf.ExtensionRegistry registry =
            com.google.protobuf.ExtensionRegistry.newInstance();
          registry.add(game.msg.Options.msgid);
          registry.add(game.msg.Options.msgid);
          registry.add(game.msg.Options.msgid);
          registry.add(game.msg.Options.msgid);
          registry.add(game.msg.Options.msgid);
          return registry;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          game.msg.Options.getDescriptor(),
          game.msg.Define.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
