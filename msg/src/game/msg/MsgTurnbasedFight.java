// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg.turnbasedFight.proto

package game.msg;

public final class MsgTurnbasedFight {
  private MsgTurnbasedFight() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface SCTurnbasedStageStepOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 step = 1;
    /**
     * <code>optional int32 step = 1;</code>
     *
     * <pre>
     *当前波数
     * </pre>
     */
    boolean hasStep();
    /**
     * <code>optional int32 step = 1;</code>
     *
     * <pre>
     *当前波数
     * </pre>
     */
    int getStep();

    // optional int32 stepAll = 2;
    /**
     * <code>optional int32 stepAll = 2;</code>
     *
     * <pre>
     *总波数
     * </pre>
     */
    boolean hasStepAll();
    /**
     * <code>optional int32 stepAll = 2;</code>
     *
     * <pre>
     *总波数
     * </pre>
     */
    int getStepAll();

    // optional .game.msg.DTurnbasedTeamObjs team1 = 3;
    /**
     * <code>optional .game.msg.DTurnbasedTeamObjs team1 = 3;</code>
     *
     * <pre>
     *战队1成员列表
     * </pre>
     */
    boolean hasTeam1();
    /**
     * <code>optional .game.msg.DTurnbasedTeamObjs team1 = 3;</code>
     *
     * <pre>
     *战队1成员列表
     * </pre>
     */
    game.msg.Define.DTurnbasedTeamObjs getTeam1();
    /**
     * <code>optional .game.msg.DTurnbasedTeamObjs team1 = 3;</code>
     *
     * <pre>
     *战队1成员列表
     * </pre>
     */
    game.msg.Define.DTurnbasedTeamObjsOrBuilder getTeam1OrBuilder();

    // optional .game.msg.DTurnbasedTeamObjs team2 = 4;
    /**
     * <code>optional .game.msg.DTurnbasedTeamObjs team2 = 4;</code>
     *
     * <pre>
     *战队2成员列表
     * </pre>
     */
    boolean hasTeam2();
    /**
     * <code>optional .game.msg.DTurnbasedTeamObjs team2 = 4;</code>
     *
     * <pre>
     *战队2成员列表
     * </pre>
     */
    game.msg.Define.DTurnbasedTeamObjs getTeam2();
    /**
     * <code>optional .game.msg.DTurnbasedTeamObjs team2 = 4;</code>
     *
     * <pre>
     *战队2成员列表
     * </pre>
     */
    game.msg.Define.DTurnbasedTeamObjsOrBuilder getTeam2OrBuilder();

    // optional .game.msg.ETeamType selfTeam = 5;
    /**
     * <code>optional .game.msg.ETeamType selfTeam = 5;</code>
     *
     * <pre>
     *己方所在战队
     * </pre>
     */
    boolean hasSelfTeam();
    /**
     * <code>optional .game.msg.ETeamType selfTeam = 5;</code>
     *
     * <pre>
     *己方所在战队
     * </pre>
     */
    game.msg.Define.ETeamType getSelfTeam();

    // optional .game.msg.ETeamType priorTeam = 6;
    /**
     * <code>optional .game.msg.ETeamType priorTeam = 6;</code>
     *
     * <pre>
     *优先出手的战队
     * </pre>
     */
    boolean hasPriorTeam();
    /**
     * <code>optional .game.msg.ETeamType priorTeam = 6;</code>
     *
     * <pre>
     *优先出手的战队
     * </pre>
     */
    game.msg.Define.ETeamType getPriorTeam();

    // optional int32 bossId = 7;
    /**
     * <code>optional int32 bossId = 7;</code>
     *
     * <pre>
     *boss详情,小于0不考虑
     * </pre>
     */
    boolean hasBossId();
    /**
     * <code>optional int32 bossId = 7;</code>
     *
     * <pre>
     *boss详情,小于0不考虑
     * </pre>
     */
    int getBossId();

    // optional bool canQuickFight = 8;
    /**
     * <code>optional bool canQuickFight = 8;</code>
     *
     * <pre>
     *是否可以跳过战斗
     * </pre>
     */
    boolean hasCanQuickFight();
    /**
     * <code>optional bool canQuickFight = 8;</code>
     *
     * <pre>
     *是否可以跳过战斗
     * </pre>
     */
    boolean getCanQuickFight();

    // optional int32 multiple = 9;
    /**
     * <code>optional int32 multiple = 9;</code>
     *
     * <pre>
     *属性倍数（万分比）
     * </pre>
     */
    boolean hasMultiple();
    /**
     * <code>optional int32 multiple = 9;</code>
     *
     * <pre>
     *属性倍数（万分比）
     * </pre>
     */
    int getMultiple();
  }
  /**
   * Protobuf type {@code game.msg.SCTurnbasedStageStep}
   *
   * <pre>
   *战斗每波信息
   * </pre>
   */
  public static final class SCTurnbasedStageStep extends
      com.google.protobuf.GeneratedMessage
      implements SCTurnbasedStageStepOrBuilder {
    // Use SCTurnbasedStageStep.newBuilder() to construct.
    private SCTurnbasedStageStep(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SCTurnbasedStageStep(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SCTurnbasedStageStep defaultInstance;
    public static SCTurnbasedStageStep getDefaultInstance() {
      return defaultInstance;
    }

    public SCTurnbasedStageStep getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SCTurnbasedStageStep(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              step_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              stepAll_ = input.readInt32();
              break;
            }
            case 26: {
              game.msg.Define.DTurnbasedTeamObjs.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = team1_.toBuilder();
              }
              team1_ = input.readMessage(game.msg.Define.DTurnbasedTeamObjs.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(team1_);
                team1_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              game.msg.Define.DTurnbasedTeamObjs.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = team2_.toBuilder();
              }
              team2_ = input.readMessage(game.msg.Define.DTurnbasedTeamObjs.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(team2_);
                team2_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 40: {
              int rawValue = input.readEnum();
              game.msg.Define.ETeamType value = game.msg.Define.ETeamType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(5, rawValue);
              } else {
                bitField0_ |= 0x00000010;
                selfTeam_ = value;
              }
              break;
            }
            case 48: {
              int rawValue = input.readEnum();
              game.msg.Define.ETeamType value = game.msg.Define.ETeamType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(6, rawValue);
              } else {
                bitField0_ |= 0x00000020;
                priorTeam_ = value;
              }
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              bossId_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              canQuickFight_ = input.readBool();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              multiple_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedStageStep_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedStageStep_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game.msg.MsgTurnbasedFight.SCTurnbasedStageStep.class, game.msg.MsgTurnbasedFight.SCTurnbasedStageStep.Builder.class);
    }

    public static com.google.protobuf.Parser<SCTurnbasedStageStep> PARSER =
        new com.google.protobuf.AbstractParser<SCTurnbasedStageStep>() {
      public SCTurnbasedStageStep parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SCTurnbasedStageStep(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SCTurnbasedStageStep> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 step = 1;
    public static final int STEP_FIELD_NUMBER = 1;
    private int step_;
    /**
     * <code>optional int32 step = 1;</code>
     *
     * <pre>
     *当前波数
     * </pre>
     */
    public boolean hasStep() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 step = 1;</code>
     *
     * <pre>
     *当前波数
     * </pre>
     */
    public int getStep() {
      return step_;
    }

    // optional int32 stepAll = 2;
    public static final int STEPALL_FIELD_NUMBER = 2;
    private int stepAll_;
    /**
     * <code>optional int32 stepAll = 2;</code>
     *
     * <pre>
     *总波数
     * </pre>
     */
    public boolean hasStepAll() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 stepAll = 2;</code>
     *
     * <pre>
     *总波数
     * </pre>
     */
    public int getStepAll() {
      return stepAll_;
    }

    // optional .game.msg.DTurnbasedTeamObjs team1 = 3;
    public static final int TEAM1_FIELD_NUMBER = 3;
    private game.msg.Define.DTurnbasedTeamObjs team1_;
    /**
     * <code>optional .game.msg.DTurnbasedTeamObjs team1 = 3;</code>
     *
     * <pre>
     *战队1成员列表
     * </pre>
     */
    public boolean hasTeam1() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .game.msg.DTurnbasedTeamObjs team1 = 3;</code>
     *
     * <pre>
     *战队1成员列表
     * </pre>
     */
    public game.msg.Define.DTurnbasedTeamObjs getTeam1() {
      return team1_;
    }
    /**
     * <code>optional .game.msg.DTurnbasedTeamObjs team1 = 3;</code>
     *
     * <pre>
     *战队1成员列表
     * </pre>
     */
    public game.msg.Define.DTurnbasedTeamObjsOrBuilder getTeam1OrBuilder() {
      return team1_;
    }

    // optional .game.msg.DTurnbasedTeamObjs team2 = 4;
    public static final int TEAM2_FIELD_NUMBER = 4;
    private game.msg.Define.DTurnbasedTeamObjs team2_;
    /**
     * <code>optional .game.msg.DTurnbasedTeamObjs team2 = 4;</code>
     *
     * <pre>
     *战队2成员列表
     * </pre>
     */
    public boolean hasTeam2() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .game.msg.DTurnbasedTeamObjs team2 = 4;</code>
     *
     * <pre>
     *战队2成员列表
     * </pre>
     */
    public game.msg.Define.DTurnbasedTeamObjs getTeam2() {
      return team2_;
    }
    /**
     * <code>optional .game.msg.DTurnbasedTeamObjs team2 = 4;</code>
     *
     * <pre>
     *战队2成员列表
     * </pre>
     */
    public game.msg.Define.DTurnbasedTeamObjsOrBuilder getTeam2OrBuilder() {
      return team2_;
    }

    // optional .game.msg.ETeamType selfTeam = 5;
    public static final int SELFTEAM_FIELD_NUMBER = 5;
    private game.msg.Define.ETeamType selfTeam_;
    /**
     * <code>optional .game.msg.ETeamType selfTeam = 5;</code>
     *
     * <pre>
     *己方所在战队
     * </pre>
     */
    public boolean hasSelfTeam() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .game.msg.ETeamType selfTeam = 5;</code>
     *
     * <pre>
     *己方所在战队
     * </pre>
     */
    public game.msg.Define.ETeamType getSelfTeam() {
      return selfTeam_;
    }

    // optional .game.msg.ETeamType priorTeam = 6;
    public static final int PRIORTEAM_FIELD_NUMBER = 6;
    private game.msg.Define.ETeamType priorTeam_;
    /**
     * <code>optional .game.msg.ETeamType priorTeam = 6;</code>
     *
     * <pre>
     *优先出手的战队
     * </pre>
     */
    public boolean hasPriorTeam() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .game.msg.ETeamType priorTeam = 6;</code>
     *
     * <pre>
     *优先出手的战队
     * </pre>
     */
    public game.msg.Define.ETeamType getPriorTeam() {
      return priorTeam_;
    }

    // optional int32 bossId = 7;
    public static final int BOSSID_FIELD_NUMBER = 7;
    private int bossId_;
    /**
     * <code>optional int32 bossId = 7;</code>
     *
     * <pre>
     *boss详情,小于0不考虑
     * </pre>
     */
    public boolean hasBossId() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 bossId = 7;</code>
     *
     * <pre>
     *boss详情,小于0不考虑
     * </pre>
     */
    public int getBossId() {
      return bossId_;
    }

    // optional bool canQuickFight = 8;
    public static final int CANQUICKFIGHT_FIELD_NUMBER = 8;
    private boolean canQuickFight_;
    /**
     * <code>optional bool canQuickFight = 8;</code>
     *
     * <pre>
     *是否可以跳过战斗
     * </pre>
     */
    public boolean hasCanQuickFight() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional bool canQuickFight = 8;</code>
     *
     * <pre>
     *是否可以跳过战斗
     * </pre>
     */
    public boolean getCanQuickFight() {
      return canQuickFight_;
    }

    // optional int32 multiple = 9;
    public static final int MULTIPLE_FIELD_NUMBER = 9;
    private int multiple_;
    /**
     * <code>optional int32 multiple = 9;</code>
     *
     * <pre>
     *属性倍数（万分比）
     * </pre>
     */
    public boolean hasMultiple() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 multiple = 9;</code>
     *
     * <pre>
     *属性倍数（万分比）
     * </pre>
     */
    public int getMultiple() {
      return multiple_;
    }

    private void initFields() {
      step_ = 0;
      stepAll_ = 0;
      team1_ = game.msg.Define.DTurnbasedTeamObjs.getDefaultInstance();
      team2_ = game.msg.Define.DTurnbasedTeamObjs.getDefaultInstance();
      selfTeam_ = game.msg.Define.ETeamType.Team0;
      priorTeam_ = game.msg.Define.ETeamType.Team0;
      bossId_ = 0;
      canQuickFight_ = false;
      multiple_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (hasTeam1()) {
        if (!getTeam1().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTeam2()) {
        if (!getTeam2().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, step_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, stepAll_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, team1_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, team2_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeEnum(5, selfTeam_.getNumber());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeEnum(6, priorTeam_.getNumber());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, bossId_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBool(8, canQuickFight_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, multiple_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, step_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, stepAll_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, team1_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, team2_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, selfTeam_.getNumber());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, priorTeam_.getNumber());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, bossId_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, canQuickFight_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, multiple_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game.msg.MsgTurnbasedFight.SCTurnbasedStageStep parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedStageStep parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedStageStep parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedStageStep parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedStageStep parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedStageStep parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedStageStep parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedStageStep parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedStageStep parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedStageStep parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game.msg.MsgTurnbasedFight.SCTurnbasedStageStep prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game.msg.SCTurnbasedStageStep}
     *
     * <pre>
     *战斗每波信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game.msg.MsgTurnbasedFight.SCTurnbasedStageStepOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedStageStep_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedStageStep_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game.msg.MsgTurnbasedFight.SCTurnbasedStageStep.class, game.msg.MsgTurnbasedFight.SCTurnbasedStageStep.Builder.class);
      }

      // Construct using game.msg.MsgTurnbasedFight.SCTurnbasedStageStep.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getTeam1FieldBuilder();
          getTeam2FieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        step_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        stepAll_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (team1Builder_ == null) {
          team1_ = game.msg.Define.DTurnbasedTeamObjs.getDefaultInstance();
        } else {
          team1Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (team2Builder_ == null) {
          team2_ = game.msg.Define.DTurnbasedTeamObjs.getDefaultInstance();
        } else {
          team2Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        selfTeam_ = game.msg.Define.ETeamType.Team0;
        bitField0_ = (bitField0_ & ~0x00000010);
        priorTeam_ = game.msg.Define.ETeamType.Team0;
        bitField0_ = (bitField0_ & ~0x00000020);
        bossId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        canQuickFight_ = false;
        bitField0_ = (bitField0_ & ~0x00000080);
        multiple_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedStageStep_descriptor;
      }

      public game.msg.MsgTurnbasedFight.SCTurnbasedStageStep getDefaultInstanceForType() {
        return game.msg.MsgTurnbasedFight.SCTurnbasedStageStep.getDefaultInstance();
      }

      public game.msg.MsgTurnbasedFight.SCTurnbasedStageStep build() {
        game.msg.MsgTurnbasedFight.SCTurnbasedStageStep result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game.msg.MsgTurnbasedFight.SCTurnbasedStageStep buildPartial() {
        game.msg.MsgTurnbasedFight.SCTurnbasedStageStep result = new game.msg.MsgTurnbasedFight.SCTurnbasedStageStep(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.step_ = step_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.stepAll_ = stepAll_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (team1Builder_ == null) {
          result.team1_ = team1_;
        } else {
          result.team1_ = team1Builder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (team2Builder_ == null) {
          result.team2_ = team2_;
        } else {
          result.team2_ = team2Builder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.selfTeam_ = selfTeam_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.priorTeam_ = priorTeam_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.bossId_ = bossId_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.canQuickFight_ = canQuickFight_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.multiple_ = multiple_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game.msg.MsgTurnbasedFight.SCTurnbasedStageStep) {
          return mergeFrom((game.msg.MsgTurnbasedFight.SCTurnbasedStageStep)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game.msg.MsgTurnbasedFight.SCTurnbasedStageStep other) {
        if (other == game.msg.MsgTurnbasedFight.SCTurnbasedStageStep.getDefaultInstance()) return this;
        if (other.hasStep()) {
          setStep(other.getStep());
        }
        if (other.hasStepAll()) {
          setStepAll(other.getStepAll());
        }
        if (other.hasTeam1()) {
          mergeTeam1(other.getTeam1());
        }
        if (other.hasTeam2()) {
          mergeTeam2(other.getTeam2());
        }
        if (other.hasSelfTeam()) {
          setSelfTeam(other.getSelfTeam());
        }
        if (other.hasPriorTeam()) {
          setPriorTeam(other.getPriorTeam());
        }
        if (other.hasBossId()) {
          setBossId(other.getBossId());
        }
        if (other.hasCanQuickFight()) {
          setCanQuickFight(other.getCanQuickFight());
        }
        if (other.hasMultiple()) {
          setMultiple(other.getMultiple());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (hasTeam1()) {
          if (!getTeam1().isInitialized()) {
            
            return false;
          }
        }
        if (hasTeam2()) {
          if (!getTeam2().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game.msg.MsgTurnbasedFight.SCTurnbasedStageStep parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game.msg.MsgTurnbasedFight.SCTurnbasedStageStep) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 step = 1;
      private int step_ ;
      /**
       * <code>optional int32 step = 1;</code>
       *
       * <pre>
       *当前波数
       * </pre>
       */
      public boolean hasStep() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 step = 1;</code>
       *
       * <pre>
       *当前波数
       * </pre>
       */
      public int getStep() {
        return step_;
      }
      /**
       * <code>optional int32 step = 1;</code>
       *
       * <pre>
       *当前波数
       * </pre>
       */
      public Builder setStep(int value) {
        bitField0_ |= 0x00000001;
        step_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 step = 1;</code>
       *
       * <pre>
       *当前波数
       * </pre>
       */
      public Builder clearStep() {
        bitField0_ = (bitField0_ & ~0x00000001);
        step_ = 0;
        onChanged();
        return this;
      }

      // optional int32 stepAll = 2;
      private int stepAll_ ;
      /**
       * <code>optional int32 stepAll = 2;</code>
       *
       * <pre>
       *总波数
       * </pre>
       */
      public boolean hasStepAll() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 stepAll = 2;</code>
       *
       * <pre>
       *总波数
       * </pre>
       */
      public int getStepAll() {
        return stepAll_;
      }
      /**
       * <code>optional int32 stepAll = 2;</code>
       *
       * <pre>
       *总波数
       * </pre>
       */
      public Builder setStepAll(int value) {
        bitField0_ |= 0x00000002;
        stepAll_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 stepAll = 2;</code>
       *
       * <pre>
       *总波数
       * </pre>
       */
      public Builder clearStepAll() {
        bitField0_ = (bitField0_ & ~0x00000002);
        stepAll_ = 0;
        onChanged();
        return this;
      }

      // optional .game.msg.DTurnbasedTeamObjs team1 = 3;
      private game.msg.Define.DTurnbasedTeamObjs team1_ = game.msg.Define.DTurnbasedTeamObjs.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          game.msg.Define.DTurnbasedTeamObjs, game.msg.Define.DTurnbasedTeamObjs.Builder, game.msg.Define.DTurnbasedTeamObjsOrBuilder> team1Builder_;
      /**
       * <code>optional .game.msg.DTurnbasedTeamObjs team1 = 3;</code>
       *
       * <pre>
       *战队1成员列表
       * </pre>
       */
      public boolean hasTeam1() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .game.msg.DTurnbasedTeamObjs team1 = 3;</code>
       *
       * <pre>
       *战队1成员列表
       * </pre>
       */
      public game.msg.Define.DTurnbasedTeamObjs getTeam1() {
        if (team1Builder_ == null) {
          return team1_;
        } else {
          return team1Builder_.getMessage();
        }
      }
      /**
       * <code>optional .game.msg.DTurnbasedTeamObjs team1 = 3;</code>
       *
       * <pre>
       *战队1成员列表
       * </pre>
       */
      public Builder setTeam1(game.msg.Define.DTurnbasedTeamObjs value) {
        if (team1Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          team1_ = value;
          onChanged();
        } else {
          team1Builder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .game.msg.DTurnbasedTeamObjs team1 = 3;</code>
       *
       * <pre>
       *战队1成员列表
       * </pre>
       */
      public Builder setTeam1(
          game.msg.Define.DTurnbasedTeamObjs.Builder builderForValue) {
        if (team1Builder_ == null) {
          team1_ = builderForValue.build();
          onChanged();
        } else {
          team1Builder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .game.msg.DTurnbasedTeamObjs team1 = 3;</code>
       *
       * <pre>
       *战队1成员列表
       * </pre>
       */
      public Builder mergeTeam1(game.msg.Define.DTurnbasedTeamObjs value) {
        if (team1Builder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              team1_ != game.msg.Define.DTurnbasedTeamObjs.getDefaultInstance()) {
            team1_ =
              game.msg.Define.DTurnbasedTeamObjs.newBuilder(team1_).mergeFrom(value).buildPartial();
          } else {
            team1_ = value;
          }
          onChanged();
        } else {
          team1Builder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .game.msg.DTurnbasedTeamObjs team1 = 3;</code>
       *
       * <pre>
       *战队1成员列表
       * </pre>
       */
      public Builder clearTeam1() {
        if (team1Builder_ == null) {
          team1_ = game.msg.Define.DTurnbasedTeamObjs.getDefaultInstance();
          onChanged();
        } else {
          team1Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .game.msg.DTurnbasedTeamObjs team1 = 3;</code>
       *
       * <pre>
       *战队1成员列表
       * </pre>
       */
      public game.msg.Define.DTurnbasedTeamObjs.Builder getTeam1Builder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getTeam1FieldBuilder().getBuilder();
      }
      /**
       * <code>optional .game.msg.DTurnbasedTeamObjs team1 = 3;</code>
       *
       * <pre>
       *战队1成员列表
       * </pre>
       */
      public game.msg.Define.DTurnbasedTeamObjsOrBuilder getTeam1OrBuilder() {
        if (team1Builder_ != null) {
          return team1Builder_.getMessageOrBuilder();
        } else {
          return team1_;
        }
      }
      /**
       * <code>optional .game.msg.DTurnbasedTeamObjs team1 = 3;</code>
       *
       * <pre>
       *战队1成员列表
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          game.msg.Define.DTurnbasedTeamObjs, game.msg.Define.DTurnbasedTeamObjs.Builder, game.msg.Define.DTurnbasedTeamObjsOrBuilder> 
          getTeam1FieldBuilder() {
        if (team1Builder_ == null) {
          team1Builder_ = new com.google.protobuf.SingleFieldBuilder<
              game.msg.Define.DTurnbasedTeamObjs, game.msg.Define.DTurnbasedTeamObjs.Builder, game.msg.Define.DTurnbasedTeamObjsOrBuilder>(
                  team1_,
                  getParentForChildren(),
                  isClean());
          team1_ = null;
        }
        return team1Builder_;
      }

      // optional .game.msg.DTurnbasedTeamObjs team2 = 4;
      private game.msg.Define.DTurnbasedTeamObjs team2_ = game.msg.Define.DTurnbasedTeamObjs.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          game.msg.Define.DTurnbasedTeamObjs, game.msg.Define.DTurnbasedTeamObjs.Builder, game.msg.Define.DTurnbasedTeamObjsOrBuilder> team2Builder_;
      /**
       * <code>optional .game.msg.DTurnbasedTeamObjs team2 = 4;</code>
       *
       * <pre>
       *战队2成员列表
       * </pre>
       */
      public boolean hasTeam2() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .game.msg.DTurnbasedTeamObjs team2 = 4;</code>
       *
       * <pre>
       *战队2成员列表
       * </pre>
       */
      public game.msg.Define.DTurnbasedTeamObjs getTeam2() {
        if (team2Builder_ == null) {
          return team2_;
        } else {
          return team2Builder_.getMessage();
        }
      }
      /**
       * <code>optional .game.msg.DTurnbasedTeamObjs team2 = 4;</code>
       *
       * <pre>
       *战队2成员列表
       * </pre>
       */
      public Builder setTeam2(game.msg.Define.DTurnbasedTeamObjs value) {
        if (team2Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          team2_ = value;
          onChanged();
        } else {
          team2Builder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .game.msg.DTurnbasedTeamObjs team2 = 4;</code>
       *
       * <pre>
       *战队2成员列表
       * </pre>
       */
      public Builder setTeam2(
          game.msg.Define.DTurnbasedTeamObjs.Builder builderForValue) {
        if (team2Builder_ == null) {
          team2_ = builderForValue.build();
          onChanged();
        } else {
          team2Builder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .game.msg.DTurnbasedTeamObjs team2 = 4;</code>
       *
       * <pre>
       *战队2成员列表
       * </pre>
       */
      public Builder mergeTeam2(game.msg.Define.DTurnbasedTeamObjs value) {
        if (team2Builder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              team2_ != game.msg.Define.DTurnbasedTeamObjs.getDefaultInstance()) {
            team2_ =
              game.msg.Define.DTurnbasedTeamObjs.newBuilder(team2_).mergeFrom(value).buildPartial();
          } else {
            team2_ = value;
          }
          onChanged();
        } else {
          team2Builder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .game.msg.DTurnbasedTeamObjs team2 = 4;</code>
       *
       * <pre>
       *战队2成员列表
       * </pre>
       */
      public Builder clearTeam2() {
        if (team2Builder_ == null) {
          team2_ = game.msg.Define.DTurnbasedTeamObjs.getDefaultInstance();
          onChanged();
        } else {
          team2Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .game.msg.DTurnbasedTeamObjs team2 = 4;</code>
       *
       * <pre>
       *战队2成员列表
       * </pre>
       */
      public game.msg.Define.DTurnbasedTeamObjs.Builder getTeam2Builder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getTeam2FieldBuilder().getBuilder();
      }
      /**
       * <code>optional .game.msg.DTurnbasedTeamObjs team2 = 4;</code>
       *
       * <pre>
       *战队2成员列表
       * </pre>
       */
      public game.msg.Define.DTurnbasedTeamObjsOrBuilder getTeam2OrBuilder() {
        if (team2Builder_ != null) {
          return team2Builder_.getMessageOrBuilder();
        } else {
          return team2_;
        }
      }
      /**
       * <code>optional .game.msg.DTurnbasedTeamObjs team2 = 4;</code>
       *
       * <pre>
       *战队2成员列表
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          game.msg.Define.DTurnbasedTeamObjs, game.msg.Define.DTurnbasedTeamObjs.Builder, game.msg.Define.DTurnbasedTeamObjsOrBuilder> 
          getTeam2FieldBuilder() {
        if (team2Builder_ == null) {
          team2Builder_ = new com.google.protobuf.SingleFieldBuilder<
              game.msg.Define.DTurnbasedTeamObjs, game.msg.Define.DTurnbasedTeamObjs.Builder, game.msg.Define.DTurnbasedTeamObjsOrBuilder>(
                  team2_,
                  getParentForChildren(),
                  isClean());
          team2_ = null;
        }
        return team2Builder_;
      }

      // optional .game.msg.ETeamType selfTeam = 5;
      private game.msg.Define.ETeamType selfTeam_ = game.msg.Define.ETeamType.Team0;
      /**
       * <code>optional .game.msg.ETeamType selfTeam = 5;</code>
       *
       * <pre>
       *己方所在战队
       * </pre>
       */
      public boolean hasSelfTeam() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .game.msg.ETeamType selfTeam = 5;</code>
       *
       * <pre>
       *己方所在战队
       * </pre>
       */
      public game.msg.Define.ETeamType getSelfTeam() {
        return selfTeam_;
      }
      /**
       * <code>optional .game.msg.ETeamType selfTeam = 5;</code>
       *
       * <pre>
       *己方所在战队
       * </pre>
       */
      public Builder setSelfTeam(game.msg.Define.ETeamType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        selfTeam_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .game.msg.ETeamType selfTeam = 5;</code>
       *
       * <pre>
       *己方所在战队
       * </pre>
       */
      public Builder clearSelfTeam() {
        bitField0_ = (bitField0_ & ~0x00000010);
        selfTeam_ = game.msg.Define.ETeamType.Team0;
        onChanged();
        return this;
      }

      // optional .game.msg.ETeamType priorTeam = 6;
      private game.msg.Define.ETeamType priorTeam_ = game.msg.Define.ETeamType.Team0;
      /**
       * <code>optional .game.msg.ETeamType priorTeam = 6;</code>
       *
       * <pre>
       *优先出手的战队
       * </pre>
       */
      public boolean hasPriorTeam() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .game.msg.ETeamType priorTeam = 6;</code>
       *
       * <pre>
       *优先出手的战队
       * </pre>
       */
      public game.msg.Define.ETeamType getPriorTeam() {
        return priorTeam_;
      }
      /**
       * <code>optional .game.msg.ETeamType priorTeam = 6;</code>
       *
       * <pre>
       *优先出手的战队
       * </pre>
       */
      public Builder setPriorTeam(game.msg.Define.ETeamType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000020;
        priorTeam_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .game.msg.ETeamType priorTeam = 6;</code>
       *
       * <pre>
       *优先出手的战队
       * </pre>
       */
      public Builder clearPriorTeam() {
        bitField0_ = (bitField0_ & ~0x00000020);
        priorTeam_ = game.msg.Define.ETeamType.Team0;
        onChanged();
        return this;
      }

      // optional int32 bossId = 7;
      private int bossId_ ;
      /**
       * <code>optional int32 bossId = 7;</code>
       *
       * <pre>
       *boss详情,小于0不考虑
       * </pre>
       */
      public boolean hasBossId() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 bossId = 7;</code>
       *
       * <pre>
       *boss详情,小于0不考虑
       * </pre>
       */
      public int getBossId() {
        return bossId_;
      }
      /**
       * <code>optional int32 bossId = 7;</code>
       *
       * <pre>
       *boss详情,小于0不考虑
       * </pre>
       */
      public Builder setBossId(int value) {
        bitField0_ |= 0x00000040;
        bossId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 bossId = 7;</code>
       *
       * <pre>
       *boss详情,小于0不考虑
       * </pre>
       */
      public Builder clearBossId() {
        bitField0_ = (bitField0_ & ~0x00000040);
        bossId_ = 0;
        onChanged();
        return this;
      }

      // optional bool canQuickFight = 8;
      private boolean canQuickFight_ ;
      /**
       * <code>optional bool canQuickFight = 8;</code>
       *
       * <pre>
       *是否可以跳过战斗
       * </pre>
       */
      public boolean hasCanQuickFight() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional bool canQuickFight = 8;</code>
       *
       * <pre>
       *是否可以跳过战斗
       * </pre>
       */
      public boolean getCanQuickFight() {
        return canQuickFight_;
      }
      /**
       * <code>optional bool canQuickFight = 8;</code>
       *
       * <pre>
       *是否可以跳过战斗
       * </pre>
       */
      public Builder setCanQuickFight(boolean value) {
        bitField0_ |= 0x00000080;
        canQuickFight_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool canQuickFight = 8;</code>
       *
       * <pre>
       *是否可以跳过战斗
       * </pre>
       */
      public Builder clearCanQuickFight() {
        bitField0_ = (bitField0_ & ~0x00000080);
        canQuickFight_ = false;
        onChanged();
        return this;
      }

      // optional int32 multiple = 9;
      private int multiple_ ;
      /**
       * <code>optional int32 multiple = 9;</code>
       *
       * <pre>
       *属性倍数（万分比）
       * </pre>
       */
      public boolean hasMultiple() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 multiple = 9;</code>
       *
       * <pre>
       *属性倍数（万分比）
       * </pre>
       */
      public int getMultiple() {
        return multiple_;
      }
      /**
       * <code>optional int32 multiple = 9;</code>
       *
       * <pre>
       *属性倍数（万分比）
       * </pre>
       */
      public Builder setMultiple(int value) {
        bitField0_ |= 0x00000100;
        multiple_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 multiple = 9;</code>
       *
       * <pre>
       *属性倍数（万分比）
       * </pre>
       */
      public Builder clearMultiple() {
        bitField0_ = (bitField0_ & ~0x00000100);
        multiple_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:game.msg.SCTurnbasedStageStep)
    }

    static {
      defaultInstance = new SCTurnbasedStageStep(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game.msg.SCTurnbasedStageStep)
  }

  public interface SCTurnbasedObjectEnterOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .game.msg.DTurnbasedObject fightObjList = 1;
    /**
     * <code>repeated .game.msg.DTurnbasedObject fightObjList = 1;</code>
     *
     * <pre>
     *战斗者列表
     * </pre>
     */
    java.util.List<game.msg.Define.DTurnbasedObject> 
        getFightObjListList();
    /**
     * <code>repeated .game.msg.DTurnbasedObject fightObjList = 1;</code>
     *
     * <pre>
     *战斗者列表
     * </pre>
     */
    game.msg.Define.DTurnbasedObject getFightObjList(int index);
    /**
     * <code>repeated .game.msg.DTurnbasedObject fightObjList = 1;</code>
     *
     * <pre>
     *战斗者列表
     * </pre>
     */
    int getFightObjListCount();
    /**
     * <code>repeated .game.msg.DTurnbasedObject fightObjList = 1;</code>
     *
     * <pre>
     *战斗者列表
     * </pre>
     */
    java.util.List<? extends game.msg.Define.DTurnbasedObjectOrBuilder> 
        getFightObjListOrBuilderList();
    /**
     * <code>repeated .game.msg.DTurnbasedObject fightObjList = 1;</code>
     *
     * <pre>
     *战斗者列表
     * </pre>
     */
    game.msg.Define.DTurnbasedObjectOrBuilder getFightObjListOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code game.msg.SCTurnbasedObjectEnter}
   *
   * <pre>
   *新战斗者入场
   * </pre>
   */
  public static final class SCTurnbasedObjectEnter extends
      com.google.protobuf.GeneratedMessage
      implements SCTurnbasedObjectEnterOrBuilder {
    // Use SCTurnbasedObjectEnter.newBuilder() to construct.
    private SCTurnbasedObjectEnter(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SCTurnbasedObjectEnter(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SCTurnbasedObjectEnter defaultInstance;
    public static SCTurnbasedObjectEnter getDefaultInstance() {
      return defaultInstance;
    }

    public SCTurnbasedObjectEnter getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SCTurnbasedObjectEnter(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                fightObjList_ = new java.util.ArrayList<game.msg.Define.DTurnbasedObject>();
                mutable_bitField0_ |= 0x00000001;
              }
              fightObjList_.add(input.readMessage(game.msg.Define.DTurnbasedObject.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          fightObjList_ = java.util.Collections.unmodifiableList(fightObjList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedObjectEnter_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedObjectEnter_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game.msg.MsgTurnbasedFight.SCTurnbasedObjectEnter.class, game.msg.MsgTurnbasedFight.SCTurnbasedObjectEnter.Builder.class);
    }

    public static com.google.protobuf.Parser<SCTurnbasedObjectEnter> PARSER =
        new com.google.protobuf.AbstractParser<SCTurnbasedObjectEnter>() {
      public SCTurnbasedObjectEnter parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SCTurnbasedObjectEnter(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SCTurnbasedObjectEnter> getParserForType() {
      return PARSER;
    }

    // repeated .game.msg.DTurnbasedObject fightObjList = 1;
    public static final int FIGHTOBJLIST_FIELD_NUMBER = 1;
    private java.util.List<game.msg.Define.DTurnbasedObject> fightObjList_;
    /**
     * <code>repeated .game.msg.DTurnbasedObject fightObjList = 1;</code>
     *
     * <pre>
     *战斗者列表
     * </pre>
     */
    public java.util.List<game.msg.Define.DTurnbasedObject> getFightObjListList() {
      return fightObjList_;
    }
    /**
     * <code>repeated .game.msg.DTurnbasedObject fightObjList = 1;</code>
     *
     * <pre>
     *战斗者列表
     * </pre>
     */
    public java.util.List<? extends game.msg.Define.DTurnbasedObjectOrBuilder> 
        getFightObjListOrBuilderList() {
      return fightObjList_;
    }
    /**
     * <code>repeated .game.msg.DTurnbasedObject fightObjList = 1;</code>
     *
     * <pre>
     *战斗者列表
     * </pre>
     */
    public int getFightObjListCount() {
      return fightObjList_.size();
    }
    /**
     * <code>repeated .game.msg.DTurnbasedObject fightObjList = 1;</code>
     *
     * <pre>
     *战斗者列表
     * </pre>
     */
    public game.msg.Define.DTurnbasedObject getFightObjList(int index) {
      return fightObjList_.get(index);
    }
    /**
     * <code>repeated .game.msg.DTurnbasedObject fightObjList = 1;</code>
     *
     * <pre>
     *战斗者列表
     * </pre>
     */
    public game.msg.Define.DTurnbasedObjectOrBuilder getFightObjListOrBuilder(
        int index) {
      return fightObjList_.get(index);
    }

    private void initFields() {
      fightObjList_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getFightObjListCount(); i++) {
        if (!getFightObjList(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < fightObjList_.size(); i++) {
        output.writeMessage(1, fightObjList_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < fightObjList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, fightObjList_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game.msg.MsgTurnbasedFight.SCTurnbasedObjectEnter parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedObjectEnter parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedObjectEnter parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedObjectEnter parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedObjectEnter parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedObjectEnter parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedObjectEnter parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedObjectEnter parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedObjectEnter parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedObjectEnter parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game.msg.MsgTurnbasedFight.SCTurnbasedObjectEnter prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game.msg.SCTurnbasedObjectEnter}
     *
     * <pre>
     *新战斗者入场
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game.msg.MsgTurnbasedFight.SCTurnbasedObjectEnterOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedObjectEnter_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedObjectEnter_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game.msg.MsgTurnbasedFight.SCTurnbasedObjectEnter.class, game.msg.MsgTurnbasedFight.SCTurnbasedObjectEnter.Builder.class);
      }

      // Construct using game.msg.MsgTurnbasedFight.SCTurnbasedObjectEnter.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getFightObjListFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (fightObjListBuilder_ == null) {
          fightObjList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          fightObjListBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedObjectEnter_descriptor;
      }

      public game.msg.MsgTurnbasedFight.SCTurnbasedObjectEnter getDefaultInstanceForType() {
        return game.msg.MsgTurnbasedFight.SCTurnbasedObjectEnter.getDefaultInstance();
      }

      public game.msg.MsgTurnbasedFight.SCTurnbasedObjectEnter build() {
        game.msg.MsgTurnbasedFight.SCTurnbasedObjectEnter result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game.msg.MsgTurnbasedFight.SCTurnbasedObjectEnter buildPartial() {
        game.msg.MsgTurnbasedFight.SCTurnbasedObjectEnter result = new game.msg.MsgTurnbasedFight.SCTurnbasedObjectEnter(this);
        int from_bitField0_ = bitField0_;
        if (fightObjListBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            fightObjList_ = java.util.Collections.unmodifiableList(fightObjList_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.fightObjList_ = fightObjList_;
        } else {
          result.fightObjList_ = fightObjListBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game.msg.MsgTurnbasedFight.SCTurnbasedObjectEnter) {
          return mergeFrom((game.msg.MsgTurnbasedFight.SCTurnbasedObjectEnter)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game.msg.MsgTurnbasedFight.SCTurnbasedObjectEnter other) {
        if (other == game.msg.MsgTurnbasedFight.SCTurnbasedObjectEnter.getDefaultInstance()) return this;
        if (fightObjListBuilder_ == null) {
          if (!other.fightObjList_.isEmpty()) {
            if (fightObjList_.isEmpty()) {
              fightObjList_ = other.fightObjList_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureFightObjListIsMutable();
              fightObjList_.addAll(other.fightObjList_);
            }
            onChanged();
          }
        } else {
          if (!other.fightObjList_.isEmpty()) {
            if (fightObjListBuilder_.isEmpty()) {
              fightObjListBuilder_.dispose();
              fightObjListBuilder_ = null;
              fightObjList_ = other.fightObjList_;
              bitField0_ = (bitField0_ & ~0x00000001);
              fightObjListBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFightObjListFieldBuilder() : null;
            } else {
              fightObjListBuilder_.addAllMessages(other.fightObjList_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getFightObjListCount(); i++) {
          if (!getFightObjList(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game.msg.MsgTurnbasedFight.SCTurnbasedObjectEnter parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game.msg.MsgTurnbasedFight.SCTurnbasedObjectEnter) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .game.msg.DTurnbasedObject fightObjList = 1;
      private java.util.List<game.msg.Define.DTurnbasedObject> fightObjList_ =
        java.util.Collections.emptyList();
      private void ensureFightObjListIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          fightObjList_ = new java.util.ArrayList<game.msg.Define.DTurnbasedObject>(fightObjList_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          game.msg.Define.DTurnbasedObject, game.msg.Define.DTurnbasedObject.Builder, game.msg.Define.DTurnbasedObjectOrBuilder> fightObjListBuilder_;

      /**
       * <code>repeated .game.msg.DTurnbasedObject fightObjList = 1;</code>
       *
       * <pre>
       *战斗者列表
       * </pre>
       */
      public java.util.List<game.msg.Define.DTurnbasedObject> getFightObjListList() {
        if (fightObjListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fightObjList_);
        } else {
          return fightObjListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .game.msg.DTurnbasedObject fightObjList = 1;</code>
       *
       * <pre>
       *战斗者列表
       * </pre>
       */
      public int getFightObjListCount() {
        if (fightObjListBuilder_ == null) {
          return fightObjList_.size();
        } else {
          return fightObjListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .game.msg.DTurnbasedObject fightObjList = 1;</code>
       *
       * <pre>
       *战斗者列表
       * </pre>
       */
      public game.msg.Define.DTurnbasedObject getFightObjList(int index) {
        if (fightObjListBuilder_ == null) {
          return fightObjList_.get(index);
        } else {
          return fightObjListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .game.msg.DTurnbasedObject fightObjList = 1;</code>
       *
       * <pre>
       *战斗者列表
       * </pre>
       */
      public Builder setFightObjList(
          int index, game.msg.Define.DTurnbasedObject value) {
        if (fightObjListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFightObjListIsMutable();
          fightObjList_.set(index, value);
          onChanged();
        } else {
          fightObjListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DTurnbasedObject fightObjList = 1;</code>
       *
       * <pre>
       *战斗者列表
       * </pre>
       */
      public Builder setFightObjList(
          int index, game.msg.Define.DTurnbasedObject.Builder builderForValue) {
        if (fightObjListBuilder_ == null) {
          ensureFightObjListIsMutable();
          fightObjList_.set(index, builderForValue.build());
          onChanged();
        } else {
          fightObjListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DTurnbasedObject fightObjList = 1;</code>
       *
       * <pre>
       *战斗者列表
       * </pre>
       */
      public Builder addFightObjList(game.msg.Define.DTurnbasedObject value) {
        if (fightObjListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFightObjListIsMutable();
          fightObjList_.add(value);
          onChanged();
        } else {
          fightObjListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DTurnbasedObject fightObjList = 1;</code>
       *
       * <pre>
       *战斗者列表
       * </pre>
       */
      public Builder addFightObjList(
          int index, game.msg.Define.DTurnbasedObject value) {
        if (fightObjListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFightObjListIsMutable();
          fightObjList_.add(index, value);
          onChanged();
        } else {
          fightObjListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DTurnbasedObject fightObjList = 1;</code>
       *
       * <pre>
       *战斗者列表
       * </pre>
       */
      public Builder addFightObjList(
          game.msg.Define.DTurnbasedObject.Builder builderForValue) {
        if (fightObjListBuilder_ == null) {
          ensureFightObjListIsMutable();
          fightObjList_.add(builderForValue.build());
          onChanged();
        } else {
          fightObjListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DTurnbasedObject fightObjList = 1;</code>
       *
       * <pre>
       *战斗者列表
       * </pre>
       */
      public Builder addFightObjList(
          int index, game.msg.Define.DTurnbasedObject.Builder builderForValue) {
        if (fightObjListBuilder_ == null) {
          ensureFightObjListIsMutable();
          fightObjList_.add(index, builderForValue.build());
          onChanged();
        } else {
          fightObjListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DTurnbasedObject fightObjList = 1;</code>
       *
       * <pre>
       *战斗者列表
       * </pre>
       */
      public Builder addAllFightObjList(
          java.lang.Iterable<? extends game.msg.Define.DTurnbasedObject> values) {
        if (fightObjListBuilder_ == null) {
          ensureFightObjListIsMutable();
          super.addAll(values, fightObjList_);
          onChanged();
        } else {
          fightObjListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DTurnbasedObject fightObjList = 1;</code>
       *
       * <pre>
       *战斗者列表
       * </pre>
       */
      public Builder clearFightObjList() {
        if (fightObjListBuilder_ == null) {
          fightObjList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          fightObjListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DTurnbasedObject fightObjList = 1;</code>
       *
       * <pre>
       *战斗者列表
       * </pre>
       */
      public Builder removeFightObjList(int index) {
        if (fightObjListBuilder_ == null) {
          ensureFightObjListIsMutable();
          fightObjList_.remove(index);
          onChanged();
        } else {
          fightObjListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DTurnbasedObject fightObjList = 1;</code>
       *
       * <pre>
       *战斗者列表
       * </pre>
       */
      public game.msg.Define.DTurnbasedObject.Builder getFightObjListBuilder(
          int index) {
        return getFightObjListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .game.msg.DTurnbasedObject fightObjList = 1;</code>
       *
       * <pre>
       *战斗者列表
       * </pre>
       */
      public game.msg.Define.DTurnbasedObjectOrBuilder getFightObjListOrBuilder(
          int index) {
        if (fightObjListBuilder_ == null) {
          return fightObjList_.get(index);  } else {
          return fightObjListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .game.msg.DTurnbasedObject fightObjList = 1;</code>
       *
       * <pre>
       *战斗者列表
       * </pre>
       */
      public java.util.List<? extends game.msg.Define.DTurnbasedObjectOrBuilder> 
           getFightObjListOrBuilderList() {
        if (fightObjListBuilder_ != null) {
          return fightObjListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fightObjList_);
        }
      }
      /**
       * <code>repeated .game.msg.DTurnbasedObject fightObjList = 1;</code>
       *
       * <pre>
       *战斗者列表
       * </pre>
       */
      public game.msg.Define.DTurnbasedObject.Builder addFightObjListBuilder() {
        return getFightObjListFieldBuilder().addBuilder(
            game.msg.Define.DTurnbasedObject.getDefaultInstance());
      }
      /**
       * <code>repeated .game.msg.DTurnbasedObject fightObjList = 1;</code>
       *
       * <pre>
       *战斗者列表
       * </pre>
       */
      public game.msg.Define.DTurnbasedObject.Builder addFightObjListBuilder(
          int index) {
        return getFightObjListFieldBuilder().addBuilder(
            index, game.msg.Define.DTurnbasedObject.getDefaultInstance());
      }
      /**
       * <code>repeated .game.msg.DTurnbasedObject fightObjList = 1;</code>
       *
       * <pre>
       *战斗者列表
       * </pre>
       */
      public java.util.List<game.msg.Define.DTurnbasedObject.Builder> 
           getFightObjListBuilderList() {
        return getFightObjListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          game.msg.Define.DTurnbasedObject, game.msg.Define.DTurnbasedObject.Builder, game.msg.Define.DTurnbasedObjectOrBuilder> 
          getFightObjListFieldBuilder() {
        if (fightObjListBuilder_ == null) {
          fightObjListBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              game.msg.Define.DTurnbasedObject, game.msg.Define.DTurnbasedObject.Builder, game.msg.Define.DTurnbasedObjectOrBuilder>(
                  fightObjList_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          fightObjList_ = null;
        }
        return fightObjListBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:game.msg.SCTurnbasedObjectEnter)
    }

    static {
      defaultInstance = new SCTurnbasedObjectEnter(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game.msg.SCTurnbasedObjectEnter)
  }

  public interface SCTurnbasedObjectLeaveOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .game.msg.DTurnbasedObject fightObjList = 1;
    /**
     * <code>repeated .game.msg.DTurnbasedObject fightObjList = 1;</code>
     *
     * <pre>
     *战斗者列表
     * </pre>
     */
    java.util.List<game.msg.Define.DTurnbasedObject> 
        getFightObjListList();
    /**
     * <code>repeated .game.msg.DTurnbasedObject fightObjList = 1;</code>
     *
     * <pre>
     *战斗者列表
     * </pre>
     */
    game.msg.Define.DTurnbasedObject getFightObjList(int index);
    /**
     * <code>repeated .game.msg.DTurnbasedObject fightObjList = 1;</code>
     *
     * <pre>
     *战斗者列表
     * </pre>
     */
    int getFightObjListCount();
    /**
     * <code>repeated .game.msg.DTurnbasedObject fightObjList = 1;</code>
     *
     * <pre>
     *战斗者列表
     * </pre>
     */
    java.util.List<? extends game.msg.Define.DTurnbasedObjectOrBuilder> 
        getFightObjListOrBuilderList();
    /**
     * <code>repeated .game.msg.DTurnbasedObject fightObjList = 1;</code>
     *
     * <pre>
     *战斗者列表
     * </pre>
     */
    game.msg.Define.DTurnbasedObjectOrBuilder getFightObjListOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code game.msg.SCTurnbasedObjectLeave}
   *
   * <pre>
   *战斗者离场
   * </pre>
   */
  public static final class SCTurnbasedObjectLeave extends
      com.google.protobuf.GeneratedMessage
      implements SCTurnbasedObjectLeaveOrBuilder {
    // Use SCTurnbasedObjectLeave.newBuilder() to construct.
    private SCTurnbasedObjectLeave(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SCTurnbasedObjectLeave(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SCTurnbasedObjectLeave defaultInstance;
    public static SCTurnbasedObjectLeave getDefaultInstance() {
      return defaultInstance;
    }

    public SCTurnbasedObjectLeave getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SCTurnbasedObjectLeave(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                fightObjList_ = new java.util.ArrayList<game.msg.Define.DTurnbasedObject>();
                mutable_bitField0_ |= 0x00000001;
              }
              fightObjList_.add(input.readMessage(game.msg.Define.DTurnbasedObject.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          fightObjList_ = java.util.Collections.unmodifiableList(fightObjList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedObjectLeave_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedObjectLeave_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game.msg.MsgTurnbasedFight.SCTurnbasedObjectLeave.class, game.msg.MsgTurnbasedFight.SCTurnbasedObjectLeave.Builder.class);
    }

    public static com.google.protobuf.Parser<SCTurnbasedObjectLeave> PARSER =
        new com.google.protobuf.AbstractParser<SCTurnbasedObjectLeave>() {
      public SCTurnbasedObjectLeave parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SCTurnbasedObjectLeave(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SCTurnbasedObjectLeave> getParserForType() {
      return PARSER;
    }

    // repeated .game.msg.DTurnbasedObject fightObjList = 1;
    public static final int FIGHTOBJLIST_FIELD_NUMBER = 1;
    private java.util.List<game.msg.Define.DTurnbasedObject> fightObjList_;
    /**
     * <code>repeated .game.msg.DTurnbasedObject fightObjList = 1;</code>
     *
     * <pre>
     *战斗者列表
     * </pre>
     */
    public java.util.List<game.msg.Define.DTurnbasedObject> getFightObjListList() {
      return fightObjList_;
    }
    /**
     * <code>repeated .game.msg.DTurnbasedObject fightObjList = 1;</code>
     *
     * <pre>
     *战斗者列表
     * </pre>
     */
    public java.util.List<? extends game.msg.Define.DTurnbasedObjectOrBuilder> 
        getFightObjListOrBuilderList() {
      return fightObjList_;
    }
    /**
     * <code>repeated .game.msg.DTurnbasedObject fightObjList = 1;</code>
     *
     * <pre>
     *战斗者列表
     * </pre>
     */
    public int getFightObjListCount() {
      return fightObjList_.size();
    }
    /**
     * <code>repeated .game.msg.DTurnbasedObject fightObjList = 1;</code>
     *
     * <pre>
     *战斗者列表
     * </pre>
     */
    public game.msg.Define.DTurnbasedObject getFightObjList(int index) {
      return fightObjList_.get(index);
    }
    /**
     * <code>repeated .game.msg.DTurnbasedObject fightObjList = 1;</code>
     *
     * <pre>
     *战斗者列表
     * </pre>
     */
    public game.msg.Define.DTurnbasedObjectOrBuilder getFightObjListOrBuilder(
        int index) {
      return fightObjList_.get(index);
    }

    private void initFields() {
      fightObjList_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getFightObjListCount(); i++) {
        if (!getFightObjList(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < fightObjList_.size(); i++) {
        output.writeMessage(1, fightObjList_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < fightObjList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, fightObjList_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game.msg.MsgTurnbasedFight.SCTurnbasedObjectLeave parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedObjectLeave parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedObjectLeave parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedObjectLeave parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedObjectLeave parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedObjectLeave parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedObjectLeave parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedObjectLeave parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedObjectLeave parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedObjectLeave parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game.msg.MsgTurnbasedFight.SCTurnbasedObjectLeave prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game.msg.SCTurnbasedObjectLeave}
     *
     * <pre>
     *战斗者离场
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game.msg.MsgTurnbasedFight.SCTurnbasedObjectLeaveOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedObjectLeave_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedObjectLeave_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game.msg.MsgTurnbasedFight.SCTurnbasedObjectLeave.class, game.msg.MsgTurnbasedFight.SCTurnbasedObjectLeave.Builder.class);
      }

      // Construct using game.msg.MsgTurnbasedFight.SCTurnbasedObjectLeave.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getFightObjListFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (fightObjListBuilder_ == null) {
          fightObjList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          fightObjListBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedObjectLeave_descriptor;
      }

      public game.msg.MsgTurnbasedFight.SCTurnbasedObjectLeave getDefaultInstanceForType() {
        return game.msg.MsgTurnbasedFight.SCTurnbasedObjectLeave.getDefaultInstance();
      }

      public game.msg.MsgTurnbasedFight.SCTurnbasedObjectLeave build() {
        game.msg.MsgTurnbasedFight.SCTurnbasedObjectLeave result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game.msg.MsgTurnbasedFight.SCTurnbasedObjectLeave buildPartial() {
        game.msg.MsgTurnbasedFight.SCTurnbasedObjectLeave result = new game.msg.MsgTurnbasedFight.SCTurnbasedObjectLeave(this);
        int from_bitField0_ = bitField0_;
        if (fightObjListBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            fightObjList_ = java.util.Collections.unmodifiableList(fightObjList_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.fightObjList_ = fightObjList_;
        } else {
          result.fightObjList_ = fightObjListBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game.msg.MsgTurnbasedFight.SCTurnbasedObjectLeave) {
          return mergeFrom((game.msg.MsgTurnbasedFight.SCTurnbasedObjectLeave)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game.msg.MsgTurnbasedFight.SCTurnbasedObjectLeave other) {
        if (other == game.msg.MsgTurnbasedFight.SCTurnbasedObjectLeave.getDefaultInstance()) return this;
        if (fightObjListBuilder_ == null) {
          if (!other.fightObjList_.isEmpty()) {
            if (fightObjList_.isEmpty()) {
              fightObjList_ = other.fightObjList_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureFightObjListIsMutable();
              fightObjList_.addAll(other.fightObjList_);
            }
            onChanged();
          }
        } else {
          if (!other.fightObjList_.isEmpty()) {
            if (fightObjListBuilder_.isEmpty()) {
              fightObjListBuilder_.dispose();
              fightObjListBuilder_ = null;
              fightObjList_ = other.fightObjList_;
              bitField0_ = (bitField0_ & ~0x00000001);
              fightObjListBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFightObjListFieldBuilder() : null;
            } else {
              fightObjListBuilder_.addAllMessages(other.fightObjList_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getFightObjListCount(); i++) {
          if (!getFightObjList(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game.msg.MsgTurnbasedFight.SCTurnbasedObjectLeave parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game.msg.MsgTurnbasedFight.SCTurnbasedObjectLeave) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .game.msg.DTurnbasedObject fightObjList = 1;
      private java.util.List<game.msg.Define.DTurnbasedObject> fightObjList_ =
        java.util.Collections.emptyList();
      private void ensureFightObjListIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          fightObjList_ = new java.util.ArrayList<game.msg.Define.DTurnbasedObject>(fightObjList_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          game.msg.Define.DTurnbasedObject, game.msg.Define.DTurnbasedObject.Builder, game.msg.Define.DTurnbasedObjectOrBuilder> fightObjListBuilder_;

      /**
       * <code>repeated .game.msg.DTurnbasedObject fightObjList = 1;</code>
       *
       * <pre>
       *战斗者列表
       * </pre>
       */
      public java.util.List<game.msg.Define.DTurnbasedObject> getFightObjListList() {
        if (fightObjListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fightObjList_);
        } else {
          return fightObjListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .game.msg.DTurnbasedObject fightObjList = 1;</code>
       *
       * <pre>
       *战斗者列表
       * </pre>
       */
      public int getFightObjListCount() {
        if (fightObjListBuilder_ == null) {
          return fightObjList_.size();
        } else {
          return fightObjListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .game.msg.DTurnbasedObject fightObjList = 1;</code>
       *
       * <pre>
       *战斗者列表
       * </pre>
       */
      public game.msg.Define.DTurnbasedObject getFightObjList(int index) {
        if (fightObjListBuilder_ == null) {
          return fightObjList_.get(index);
        } else {
          return fightObjListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .game.msg.DTurnbasedObject fightObjList = 1;</code>
       *
       * <pre>
       *战斗者列表
       * </pre>
       */
      public Builder setFightObjList(
          int index, game.msg.Define.DTurnbasedObject value) {
        if (fightObjListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFightObjListIsMutable();
          fightObjList_.set(index, value);
          onChanged();
        } else {
          fightObjListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DTurnbasedObject fightObjList = 1;</code>
       *
       * <pre>
       *战斗者列表
       * </pre>
       */
      public Builder setFightObjList(
          int index, game.msg.Define.DTurnbasedObject.Builder builderForValue) {
        if (fightObjListBuilder_ == null) {
          ensureFightObjListIsMutable();
          fightObjList_.set(index, builderForValue.build());
          onChanged();
        } else {
          fightObjListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DTurnbasedObject fightObjList = 1;</code>
       *
       * <pre>
       *战斗者列表
       * </pre>
       */
      public Builder addFightObjList(game.msg.Define.DTurnbasedObject value) {
        if (fightObjListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFightObjListIsMutable();
          fightObjList_.add(value);
          onChanged();
        } else {
          fightObjListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DTurnbasedObject fightObjList = 1;</code>
       *
       * <pre>
       *战斗者列表
       * </pre>
       */
      public Builder addFightObjList(
          int index, game.msg.Define.DTurnbasedObject value) {
        if (fightObjListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFightObjListIsMutable();
          fightObjList_.add(index, value);
          onChanged();
        } else {
          fightObjListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DTurnbasedObject fightObjList = 1;</code>
       *
       * <pre>
       *战斗者列表
       * </pre>
       */
      public Builder addFightObjList(
          game.msg.Define.DTurnbasedObject.Builder builderForValue) {
        if (fightObjListBuilder_ == null) {
          ensureFightObjListIsMutable();
          fightObjList_.add(builderForValue.build());
          onChanged();
        } else {
          fightObjListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DTurnbasedObject fightObjList = 1;</code>
       *
       * <pre>
       *战斗者列表
       * </pre>
       */
      public Builder addFightObjList(
          int index, game.msg.Define.DTurnbasedObject.Builder builderForValue) {
        if (fightObjListBuilder_ == null) {
          ensureFightObjListIsMutable();
          fightObjList_.add(index, builderForValue.build());
          onChanged();
        } else {
          fightObjListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DTurnbasedObject fightObjList = 1;</code>
       *
       * <pre>
       *战斗者列表
       * </pre>
       */
      public Builder addAllFightObjList(
          java.lang.Iterable<? extends game.msg.Define.DTurnbasedObject> values) {
        if (fightObjListBuilder_ == null) {
          ensureFightObjListIsMutable();
          super.addAll(values, fightObjList_);
          onChanged();
        } else {
          fightObjListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DTurnbasedObject fightObjList = 1;</code>
       *
       * <pre>
       *战斗者列表
       * </pre>
       */
      public Builder clearFightObjList() {
        if (fightObjListBuilder_ == null) {
          fightObjList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          fightObjListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DTurnbasedObject fightObjList = 1;</code>
       *
       * <pre>
       *战斗者列表
       * </pre>
       */
      public Builder removeFightObjList(int index) {
        if (fightObjListBuilder_ == null) {
          ensureFightObjListIsMutable();
          fightObjList_.remove(index);
          onChanged();
        } else {
          fightObjListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DTurnbasedObject fightObjList = 1;</code>
       *
       * <pre>
       *战斗者列表
       * </pre>
       */
      public game.msg.Define.DTurnbasedObject.Builder getFightObjListBuilder(
          int index) {
        return getFightObjListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .game.msg.DTurnbasedObject fightObjList = 1;</code>
       *
       * <pre>
       *战斗者列表
       * </pre>
       */
      public game.msg.Define.DTurnbasedObjectOrBuilder getFightObjListOrBuilder(
          int index) {
        if (fightObjListBuilder_ == null) {
          return fightObjList_.get(index);  } else {
          return fightObjListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .game.msg.DTurnbasedObject fightObjList = 1;</code>
       *
       * <pre>
       *战斗者列表
       * </pre>
       */
      public java.util.List<? extends game.msg.Define.DTurnbasedObjectOrBuilder> 
           getFightObjListOrBuilderList() {
        if (fightObjListBuilder_ != null) {
          return fightObjListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fightObjList_);
        }
      }
      /**
       * <code>repeated .game.msg.DTurnbasedObject fightObjList = 1;</code>
       *
       * <pre>
       *战斗者列表
       * </pre>
       */
      public game.msg.Define.DTurnbasedObject.Builder addFightObjListBuilder() {
        return getFightObjListFieldBuilder().addBuilder(
            game.msg.Define.DTurnbasedObject.getDefaultInstance());
      }
      /**
       * <code>repeated .game.msg.DTurnbasedObject fightObjList = 1;</code>
       *
       * <pre>
       *战斗者列表
       * </pre>
       */
      public game.msg.Define.DTurnbasedObject.Builder addFightObjListBuilder(
          int index) {
        return getFightObjListFieldBuilder().addBuilder(
            index, game.msg.Define.DTurnbasedObject.getDefaultInstance());
      }
      /**
       * <code>repeated .game.msg.DTurnbasedObject fightObjList = 1;</code>
       *
       * <pre>
       *战斗者列表
       * </pre>
       */
      public java.util.List<game.msg.Define.DTurnbasedObject.Builder> 
           getFightObjListBuilderList() {
        return getFightObjListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          game.msg.Define.DTurnbasedObject, game.msg.Define.DTurnbasedObject.Builder, game.msg.Define.DTurnbasedObjectOrBuilder> 
          getFightObjListFieldBuilder() {
        if (fightObjListBuilder_ == null) {
          fightObjListBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              game.msg.Define.DTurnbasedObject, game.msg.Define.DTurnbasedObject.Builder, game.msg.Define.DTurnbasedObjectOrBuilder>(
                  fightObjList_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          fightObjList_ = null;
        }
        return fightObjListBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:game.msg.SCTurnbasedObjectLeave)
    }

    static {
      defaultInstance = new SCTurnbasedObjectLeave(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game.msg.SCTurnbasedObjectLeave)
  }

  public interface SCTurnbasedRoundChangeOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 round = 1;
    /**
     * <code>optional int32 round = 1;</code>
     *
     * <pre>
     *回合数
     * </pre>
     */
    boolean hasRound();
    /**
     * <code>optional int32 round = 1;</code>
     *
     * <pre>
     *回合数
     * </pre>
     */
    int getRound();

    // optional int32 maxRound = 2;
    /**
     * <code>optional int32 maxRound = 2;</code>
     *
     * <pre>
     *最大回合数
     * </pre>
     */
    boolean hasMaxRound();
    /**
     * <code>optional int32 maxRound = 2;</code>
     *
     * <pre>
     *最大回合数
     * </pre>
     */
    int getMaxRound();

    // repeated .game.msg.DTurnbasedBuff buff = 3;
    /**
     * <code>repeated .game.msg.DTurnbasedBuff buff = 3;</code>
     *
     * <pre>
     *移除的buff
     * </pre>
     */
    java.util.List<game.msg.Define.DTurnbasedBuff> 
        getBuffList();
    /**
     * <code>repeated .game.msg.DTurnbasedBuff buff = 3;</code>
     *
     * <pre>
     *移除的buff
     * </pre>
     */
    game.msg.Define.DTurnbasedBuff getBuff(int index);
    /**
     * <code>repeated .game.msg.DTurnbasedBuff buff = 3;</code>
     *
     * <pre>
     *移除的buff
     * </pre>
     */
    int getBuffCount();
    /**
     * <code>repeated .game.msg.DTurnbasedBuff buff = 3;</code>
     *
     * <pre>
     *移除的buff
     * </pre>
     */
    java.util.List<? extends game.msg.Define.DTurnbasedBuffOrBuilder> 
        getBuffOrBuilderList();
    /**
     * <code>repeated .game.msg.DTurnbasedBuff buff = 3;</code>
     *
     * <pre>
     *移除的buff
     * </pre>
     */
    game.msg.Define.DTurnbasedBuffOrBuilder getBuffOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code game.msg.SCTurnbasedRoundChange}
   *
   * <pre>
   *回合信息改变
   * </pre>
   */
  public static final class SCTurnbasedRoundChange extends
      com.google.protobuf.GeneratedMessage
      implements SCTurnbasedRoundChangeOrBuilder {
    // Use SCTurnbasedRoundChange.newBuilder() to construct.
    private SCTurnbasedRoundChange(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SCTurnbasedRoundChange(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SCTurnbasedRoundChange defaultInstance;
    public static SCTurnbasedRoundChange getDefaultInstance() {
      return defaultInstance;
    }

    public SCTurnbasedRoundChange getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SCTurnbasedRoundChange(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              round_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              maxRound_ = input.readInt32();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                buff_ = new java.util.ArrayList<game.msg.Define.DTurnbasedBuff>();
                mutable_bitField0_ |= 0x00000004;
              }
              buff_.add(input.readMessage(game.msg.Define.DTurnbasedBuff.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          buff_ = java.util.Collections.unmodifiableList(buff_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedRoundChange_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedRoundChange_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game.msg.MsgTurnbasedFight.SCTurnbasedRoundChange.class, game.msg.MsgTurnbasedFight.SCTurnbasedRoundChange.Builder.class);
    }

    public static com.google.protobuf.Parser<SCTurnbasedRoundChange> PARSER =
        new com.google.protobuf.AbstractParser<SCTurnbasedRoundChange>() {
      public SCTurnbasedRoundChange parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SCTurnbasedRoundChange(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SCTurnbasedRoundChange> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 round = 1;
    public static final int ROUND_FIELD_NUMBER = 1;
    private int round_;
    /**
     * <code>optional int32 round = 1;</code>
     *
     * <pre>
     *回合数
     * </pre>
     */
    public boolean hasRound() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 round = 1;</code>
     *
     * <pre>
     *回合数
     * </pre>
     */
    public int getRound() {
      return round_;
    }

    // optional int32 maxRound = 2;
    public static final int MAXROUND_FIELD_NUMBER = 2;
    private int maxRound_;
    /**
     * <code>optional int32 maxRound = 2;</code>
     *
     * <pre>
     *最大回合数
     * </pre>
     */
    public boolean hasMaxRound() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 maxRound = 2;</code>
     *
     * <pre>
     *最大回合数
     * </pre>
     */
    public int getMaxRound() {
      return maxRound_;
    }

    // repeated .game.msg.DTurnbasedBuff buff = 3;
    public static final int BUFF_FIELD_NUMBER = 3;
    private java.util.List<game.msg.Define.DTurnbasedBuff> buff_;
    /**
     * <code>repeated .game.msg.DTurnbasedBuff buff = 3;</code>
     *
     * <pre>
     *移除的buff
     * </pre>
     */
    public java.util.List<game.msg.Define.DTurnbasedBuff> getBuffList() {
      return buff_;
    }
    /**
     * <code>repeated .game.msg.DTurnbasedBuff buff = 3;</code>
     *
     * <pre>
     *移除的buff
     * </pre>
     */
    public java.util.List<? extends game.msg.Define.DTurnbasedBuffOrBuilder> 
        getBuffOrBuilderList() {
      return buff_;
    }
    /**
     * <code>repeated .game.msg.DTurnbasedBuff buff = 3;</code>
     *
     * <pre>
     *移除的buff
     * </pre>
     */
    public int getBuffCount() {
      return buff_.size();
    }
    /**
     * <code>repeated .game.msg.DTurnbasedBuff buff = 3;</code>
     *
     * <pre>
     *移除的buff
     * </pre>
     */
    public game.msg.Define.DTurnbasedBuff getBuff(int index) {
      return buff_.get(index);
    }
    /**
     * <code>repeated .game.msg.DTurnbasedBuff buff = 3;</code>
     *
     * <pre>
     *移除的buff
     * </pre>
     */
    public game.msg.Define.DTurnbasedBuffOrBuilder getBuffOrBuilder(
        int index) {
      return buff_.get(index);
    }

    private void initFields() {
      round_ = 0;
      maxRound_ = 0;
      buff_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, round_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, maxRound_);
      }
      for (int i = 0; i < buff_.size(); i++) {
        output.writeMessage(3, buff_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, round_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, maxRound_);
      }
      for (int i = 0; i < buff_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, buff_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game.msg.MsgTurnbasedFight.SCTurnbasedRoundChange parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedRoundChange parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedRoundChange parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedRoundChange parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedRoundChange parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedRoundChange parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedRoundChange parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedRoundChange parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedRoundChange parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedRoundChange parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game.msg.MsgTurnbasedFight.SCTurnbasedRoundChange prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game.msg.SCTurnbasedRoundChange}
     *
     * <pre>
     *回合信息改变
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game.msg.MsgTurnbasedFight.SCTurnbasedRoundChangeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedRoundChange_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedRoundChange_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game.msg.MsgTurnbasedFight.SCTurnbasedRoundChange.class, game.msg.MsgTurnbasedFight.SCTurnbasedRoundChange.Builder.class);
      }

      // Construct using game.msg.MsgTurnbasedFight.SCTurnbasedRoundChange.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getBuffFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        round_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        maxRound_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (buffBuilder_ == null) {
          buff_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          buffBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedRoundChange_descriptor;
      }

      public game.msg.MsgTurnbasedFight.SCTurnbasedRoundChange getDefaultInstanceForType() {
        return game.msg.MsgTurnbasedFight.SCTurnbasedRoundChange.getDefaultInstance();
      }

      public game.msg.MsgTurnbasedFight.SCTurnbasedRoundChange build() {
        game.msg.MsgTurnbasedFight.SCTurnbasedRoundChange result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game.msg.MsgTurnbasedFight.SCTurnbasedRoundChange buildPartial() {
        game.msg.MsgTurnbasedFight.SCTurnbasedRoundChange result = new game.msg.MsgTurnbasedFight.SCTurnbasedRoundChange(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.round_ = round_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.maxRound_ = maxRound_;
        if (buffBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            buff_ = java.util.Collections.unmodifiableList(buff_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.buff_ = buff_;
        } else {
          result.buff_ = buffBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game.msg.MsgTurnbasedFight.SCTurnbasedRoundChange) {
          return mergeFrom((game.msg.MsgTurnbasedFight.SCTurnbasedRoundChange)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game.msg.MsgTurnbasedFight.SCTurnbasedRoundChange other) {
        if (other == game.msg.MsgTurnbasedFight.SCTurnbasedRoundChange.getDefaultInstance()) return this;
        if (other.hasRound()) {
          setRound(other.getRound());
        }
        if (other.hasMaxRound()) {
          setMaxRound(other.getMaxRound());
        }
        if (buffBuilder_ == null) {
          if (!other.buff_.isEmpty()) {
            if (buff_.isEmpty()) {
              buff_ = other.buff_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureBuffIsMutable();
              buff_.addAll(other.buff_);
            }
            onChanged();
          }
        } else {
          if (!other.buff_.isEmpty()) {
            if (buffBuilder_.isEmpty()) {
              buffBuilder_.dispose();
              buffBuilder_ = null;
              buff_ = other.buff_;
              bitField0_ = (bitField0_ & ~0x00000004);
              buffBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getBuffFieldBuilder() : null;
            } else {
              buffBuilder_.addAllMessages(other.buff_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game.msg.MsgTurnbasedFight.SCTurnbasedRoundChange parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game.msg.MsgTurnbasedFight.SCTurnbasedRoundChange) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 round = 1;
      private int round_ ;
      /**
       * <code>optional int32 round = 1;</code>
       *
       * <pre>
       *回合数
       * </pre>
       */
      public boolean hasRound() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 round = 1;</code>
       *
       * <pre>
       *回合数
       * </pre>
       */
      public int getRound() {
        return round_;
      }
      /**
       * <code>optional int32 round = 1;</code>
       *
       * <pre>
       *回合数
       * </pre>
       */
      public Builder setRound(int value) {
        bitField0_ |= 0x00000001;
        round_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 round = 1;</code>
       *
       * <pre>
       *回合数
       * </pre>
       */
      public Builder clearRound() {
        bitField0_ = (bitField0_ & ~0x00000001);
        round_ = 0;
        onChanged();
        return this;
      }

      // optional int32 maxRound = 2;
      private int maxRound_ ;
      /**
       * <code>optional int32 maxRound = 2;</code>
       *
       * <pre>
       *最大回合数
       * </pre>
       */
      public boolean hasMaxRound() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 maxRound = 2;</code>
       *
       * <pre>
       *最大回合数
       * </pre>
       */
      public int getMaxRound() {
        return maxRound_;
      }
      /**
       * <code>optional int32 maxRound = 2;</code>
       *
       * <pre>
       *最大回合数
       * </pre>
       */
      public Builder setMaxRound(int value) {
        bitField0_ |= 0x00000002;
        maxRound_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 maxRound = 2;</code>
       *
       * <pre>
       *最大回合数
       * </pre>
       */
      public Builder clearMaxRound() {
        bitField0_ = (bitField0_ & ~0x00000002);
        maxRound_ = 0;
        onChanged();
        return this;
      }

      // repeated .game.msg.DTurnbasedBuff buff = 3;
      private java.util.List<game.msg.Define.DTurnbasedBuff> buff_ =
        java.util.Collections.emptyList();
      private void ensureBuffIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          buff_ = new java.util.ArrayList<game.msg.Define.DTurnbasedBuff>(buff_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          game.msg.Define.DTurnbasedBuff, game.msg.Define.DTurnbasedBuff.Builder, game.msg.Define.DTurnbasedBuffOrBuilder> buffBuilder_;

      /**
       * <code>repeated .game.msg.DTurnbasedBuff buff = 3;</code>
       *
       * <pre>
       *移除的buff
       * </pre>
       */
      public java.util.List<game.msg.Define.DTurnbasedBuff> getBuffList() {
        if (buffBuilder_ == null) {
          return java.util.Collections.unmodifiableList(buff_);
        } else {
          return buffBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .game.msg.DTurnbasedBuff buff = 3;</code>
       *
       * <pre>
       *移除的buff
       * </pre>
       */
      public int getBuffCount() {
        if (buffBuilder_ == null) {
          return buff_.size();
        } else {
          return buffBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .game.msg.DTurnbasedBuff buff = 3;</code>
       *
       * <pre>
       *移除的buff
       * </pre>
       */
      public game.msg.Define.DTurnbasedBuff getBuff(int index) {
        if (buffBuilder_ == null) {
          return buff_.get(index);
        } else {
          return buffBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .game.msg.DTurnbasedBuff buff = 3;</code>
       *
       * <pre>
       *移除的buff
       * </pre>
       */
      public Builder setBuff(
          int index, game.msg.Define.DTurnbasedBuff value) {
        if (buffBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBuffIsMutable();
          buff_.set(index, value);
          onChanged();
        } else {
          buffBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DTurnbasedBuff buff = 3;</code>
       *
       * <pre>
       *移除的buff
       * </pre>
       */
      public Builder setBuff(
          int index, game.msg.Define.DTurnbasedBuff.Builder builderForValue) {
        if (buffBuilder_ == null) {
          ensureBuffIsMutable();
          buff_.set(index, builderForValue.build());
          onChanged();
        } else {
          buffBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DTurnbasedBuff buff = 3;</code>
       *
       * <pre>
       *移除的buff
       * </pre>
       */
      public Builder addBuff(game.msg.Define.DTurnbasedBuff value) {
        if (buffBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBuffIsMutable();
          buff_.add(value);
          onChanged();
        } else {
          buffBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DTurnbasedBuff buff = 3;</code>
       *
       * <pre>
       *移除的buff
       * </pre>
       */
      public Builder addBuff(
          int index, game.msg.Define.DTurnbasedBuff value) {
        if (buffBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBuffIsMutable();
          buff_.add(index, value);
          onChanged();
        } else {
          buffBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DTurnbasedBuff buff = 3;</code>
       *
       * <pre>
       *移除的buff
       * </pre>
       */
      public Builder addBuff(
          game.msg.Define.DTurnbasedBuff.Builder builderForValue) {
        if (buffBuilder_ == null) {
          ensureBuffIsMutable();
          buff_.add(builderForValue.build());
          onChanged();
        } else {
          buffBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DTurnbasedBuff buff = 3;</code>
       *
       * <pre>
       *移除的buff
       * </pre>
       */
      public Builder addBuff(
          int index, game.msg.Define.DTurnbasedBuff.Builder builderForValue) {
        if (buffBuilder_ == null) {
          ensureBuffIsMutable();
          buff_.add(index, builderForValue.build());
          onChanged();
        } else {
          buffBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DTurnbasedBuff buff = 3;</code>
       *
       * <pre>
       *移除的buff
       * </pre>
       */
      public Builder addAllBuff(
          java.lang.Iterable<? extends game.msg.Define.DTurnbasedBuff> values) {
        if (buffBuilder_ == null) {
          ensureBuffIsMutable();
          super.addAll(values, buff_);
          onChanged();
        } else {
          buffBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DTurnbasedBuff buff = 3;</code>
       *
       * <pre>
       *移除的buff
       * </pre>
       */
      public Builder clearBuff() {
        if (buffBuilder_ == null) {
          buff_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          buffBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DTurnbasedBuff buff = 3;</code>
       *
       * <pre>
       *移除的buff
       * </pre>
       */
      public Builder removeBuff(int index) {
        if (buffBuilder_ == null) {
          ensureBuffIsMutable();
          buff_.remove(index);
          onChanged();
        } else {
          buffBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DTurnbasedBuff buff = 3;</code>
       *
       * <pre>
       *移除的buff
       * </pre>
       */
      public game.msg.Define.DTurnbasedBuff.Builder getBuffBuilder(
          int index) {
        return getBuffFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .game.msg.DTurnbasedBuff buff = 3;</code>
       *
       * <pre>
       *移除的buff
       * </pre>
       */
      public game.msg.Define.DTurnbasedBuffOrBuilder getBuffOrBuilder(
          int index) {
        if (buffBuilder_ == null) {
          return buff_.get(index);  } else {
          return buffBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .game.msg.DTurnbasedBuff buff = 3;</code>
       *
       * <pre>
       *移除的buff
       * </pre>
       */
      public java.util.List<? extends game.msg.Define.DTurnbasedBuffOrBuilder> 
           getBuffOrBuilderList() {
        if (buffBuilder_ != null) {
          return buffBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(buff_);
        }
      }
      /**
       * <code>repeated .game.msg.DTurnbasedBuff buff = 3;</code>
       *
       * <pre>
       *移除的buff
       * </pre>
       */
      public game.msg.Define.DTurnbasedBuff.Builder addBuffBuilder() {
        return getBuffFieldBuilder().addBuilder(
            game.msg.Define.DTurnbasedBuff.getDefaultInstance());
      }
      /**
       * <code>repeated .game.msg.DTurnbasedBuff buff = 3;</code>
       *
       * <pre>
       *移除的buff
       * </pre>
       */
      public game.msg.Define.DTurnbasedBuff.Builder addBuffBuilder(
          int index) {
        return getBuffFieldBuilder().addBuilder(
            index, game.msg.Define.DTurnbasedBuff.getDefaultInstance());
      }
      /**
       * <code>repeated .game.msg.DTurnbasedBuff buff = 3;</code>
       *
       * <pre>
       *移除的buff
       * </pre>
       */
      public java.util.List<game.msg.Define.DTurnbasedBuff.Builder> 
           getBuffBuilderList() {
        return getBuffFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          game.msg.Define.DTurnbasedBuff, game.msg.Define.DTurnbasedBuff.Builder, game.msg.Define.DTurnbasedBuffOrBuilder> 
          getBuffFieldBuilder() {
        if (buffBuilder_ == null) {
          buffBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              game.msg.Define.DTurnbasedBuff, game.msg.Define.DTurnbasedBuff.Builder, game.msg.Define.DTurnbasedBuffOrBuilder>(
                  buff_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          buff_ = null;
        }
        return buffBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:game.msg.SCTurnbasedRoundChange)
    }

    static {
      defaultInstance = new SCTurnbasedRoundChange(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game.msg.SCTurnbasedRoundChange)
  }

  public interface SCTurnbasedCastSkillOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 casterId = 1;
    /**
     * <code>optional int32 casterId = 1;</code>
     *
     * <pre>
     *施放的战斗者Id
     * </pre>
     */
    boolean hasCasterId();
    /**
     * <code>optional int32 casterId = 1;</code>
     *
     * <pre>
     *施放的战斗者Id
     * </pre>
     */
    int getCasterId();

    // optional int32 sn = 2;
    /**
     * <code>optional int32 sn = 2;</code>
     *
     * <pre>
     *技能配置sn
     * </pre>
     */
    boolean hasSn();
    /**
     * <code>optional int32 sn = 2;</code>
     *
     * <pre>
     *技能配置sn
     * </pre>
     */
    int getSn();

    // repeated .game.msg.DTurnbasedSkillTarget targetList = 3;
    /**
     * <code>repeated .game.msg.DTurnbasedSkillTarget targetList = 3;</code>
     *
     * <pre>
     *技能目标列表的战斗数据变化
     * </pre>
     */
    java.util.List<game.msg.Define.DTurnbasedSkillTarget> 
        getTargetListList();
    /**
     * <code>repeated .game.msg.DTurnbasedSkillTarget targetList = 3;</code>
     *
     * <pre>
     *技能目标列表的战斗数据变化
     * </pre>
     */
    game.msg.Define.DTurnbasedSkillTarget getTargetList(int index);
    /**
     * <code>repeated .game.msg.DTurnbasedSkillTarget targetList = 3;</code>
     *
     * <pre>
     *技能目标列表的战斗数据变化
     * </pre>
     */
    int getTargetListCount();
    /**
     * <code>repeated .game.msg.DTurnbasedSkillTarget targetList = 3;</code>
     *
     * <pre>
     *技能目标列表的战斗数据变化
     * </pre>
     */
    java.util.List<? extends game.msg.Define.DTurnbasedSkillTargetOrBuilder> 
        getTargetListOrBuilderList();
    /**
     * <code>repeated .game.msg.DTurnbasedSkillTarget targetList = 3;</code>
     *
     * <pre>
     *技能目标列表的战斗数据变化
     * </pre>
     */
    game.msg.Define.DTurnbasedSkillTargetOrBuilder getTargetListOrBuilder(
        int index);

    // optional .game.msg.DTurnbasedSkillTarget caster = 4;
    /**
     * <code>optional .game.msg.DTurnbasedSkillTarget caster = 4;</code>
     *
     * <pre>
     *施法者的战斗数据变化
     * </pre>
     */
    boolean hasCaster();
    /**
     * <code>optional .game.msg.DTurnbasedSkillTarget caster = 4;</code>
     *
     * <pre>
     *施法者的战斗数据变化
     * </pre>
     */
    game.msg.Define.DTurnbasedSkillTarget getCaster();
    /**
     * <code>optional .game.msg.DTurnbasedSkillTarget caster = 4;</code>
     *
     * <pre>
     *施法者的战斗数据变化
     * </pre>
     */
    game.msg.Define.DTurnbasedSkillTargetOrBuilder getCasterOrBuilder();
  }
  /**
   * Protobuf type {@code game.msg.SCTurnbasedCastSkill}
   *
   * <pre>
   *施放技能
   * </pre>
   */
  public static final class SCTurnbasedCastSkill extends
      com.google.protobuf.GeneratedMessage
      implements SCTurnbasedCastSkillOrBuilder {
    // Use SCTurnbasedCastSkill.newBuilder() to construct.
    private SCTurnbasedCastSkill(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SCTurnbasedCastSkill(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SCTurnbasedCastSkill defaultInstance;
    public static SCTurnbasedCastSkill getDefaultInstance() {
      return defaultInstance;
    }

    public SCTurnbasedCastSkill getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SCTurnbasedCastSkill(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              casterId_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              sn_ = input.readInt32();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                targetList_ = new java.util.ArrayList<game.msg.Define.DTurnbasedSkillTarget>();
                mutable_bitField0_ |= 0x00000004;
              }
              targetList_.add(input.readMessage(game.msg.Define.DTurnbasedSkillTarget.PARSER, extensionRegistry));
              break;
            }
            case 34: {
              game.msg.Define.DTurnbasedSkillTarget.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = caster_.toBuilder();
              }
              caster_ = input.readMessage(game.msg.Define.DTurnbasedSkillTarget.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(caster_);
                caster_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          targetList_ = java.util.Collections.unmodifiableList(targetList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedCastSkill_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedCastSkill_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game.msg.MsgTurnbasedFight.SCTurnbasedCastSkill.class, game.msg.MsgTurnbasedFight.SCTurnbasedCastSkill.Builder.class);
    }

    public static com.google.protobuf.Parser<SCTurnbasedCastSkill> PARSER =
        new com.google.protobuf.AbstractParser<SCTurnbasedCastSkill>() {
      public SCTurnbasedCastSkill parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SCTurnbasedCastSkill(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SCTurnbasedCastSkill> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 casterId = 1;
    public static final int CASTERID_FIELD_NUMBER = 1;
    private int casterId_;
    /**
     * <code>optional int32 casterId = 1;</code>
     *
     * <pre>
     *施放的战斗者Id
     * </pre>
     */
    public boolean hasCasterId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 casterId = 1;</code>
     *
     * <pre>
     *施放的战斗者Id
     * </pre>
     */
    public int getCasterId() {
      return casterId_;
    }

    // optional int32 sn = 2;
    public static final int SN_FIELD_NUMBER = 2;
    private int sn_;
    /**
     * <code>optional int32 sn = 2;</code>
     *
     * <pre>
     *技能配置sn
     * </pre>
     */
    public boolean hasSn() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 sn = 2;</code>
     *
     * <pre>
     *技能配置sn
     * </pre>
     */
    public int getSn() {
      return sn_;
    }

    // repeated .game.msg.DTurnbasedSkillTarget targetList = 3;
    public static final int TARGETLIST_FIELD_NUMBER = 3;
    private java.util.List<game.msg.Define.DTurnbasedSkillTarget> targetList_;
    /**
     * <code>repeated .game.msg.DTurnbasedSkillTarget targetList = 3;</code>
     *
     * <pre>
     *技能目标列表的战斗数据变化
     * </pre>
     */
    public java.util.List<game.msg.Define.DTurnbasedSkillTarget> getTargetListList() {
      return targetList_;
    }
    /**
     * <code>repeated .game.msg.DTurnbasedSkillTarget targetList = 3;</code>
     *
     * <pre>
     *技能目标列表的战斗数据变化
     * </pre>
     */
    public java.util.List<? extends game.msg.Define.DTurnbasedSkillTargetOrBuilder> 
        getTargetListOrBuilderList() {
      return targetList_;
    }
    /**
     * <code>repeated .game.msg.DTurnbasedSkillTarget targetList = 3;</code>
     *
     * <pre>
     *技能目标列表的战斗数据变化
     * </pre>
     */
    public int getTargetListCount() {
      return targetList_.size();
    }
    /**
     * <code>repeated .game.msg.DTurnbasedSkillTarget targetList = 3;</code>
     *
     * <pre>
     *技能目标列表的战斗数据变化
     * </pre>
     */
    public game.msg.Define.DTurnbasedSkillTarget getTargetList(int index) {
      return targetList_.get(index);
    }
    /**
     * <code>repeated .game.msg.DTurnbasedSkillTarget targetList = 3;</code>
     *
     * <pre>
     *技能目标列表的战斗数据变化
     * </pre>
     */
    public game.msg.Define.DTurnbasedSkillTargetOrBuilder getTargetListOrBuilder(
        int index) {
      return targetList_.get(index);
    }

    // optional .game.msg.DTurnbasedSkillTarget caster = 4;
    public static final int CASTER_FIELD_NUMBER = 4;
    private game.msg.Define.DTurnbasedSkillTarget caster_;
    /**
     * <code>optional .game.msg.DTurnbasedSkillTarget caster = 4;</code>
     *
     * <pre>
     *施法者的战斗数据变化
     * </pre>
     */
    public boolean hasCaster() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .game.msg.DTurnbasedSkillTarget caster = 4;</code>
     *
     * <pre>
     *施法者的战斗数据变化
     * </pre>
     */
    public game.msg.Define.DTurnbasedSkillTarget getCaster() {
      return caster_;
    }
    /**
     * <code>optional .game.msg.DTurnbasedSkillTarget caster = 4;</code>
     *
     * <pre>
     *施法者的战斗数据变化
     * </pre>
     */
    public game.msg.Define.DTurnbasedSkillTargetOrBuilder getCasterOrBuilder() {
      return caster_;
    }

    private void initFields() {
      casterId_ = 0;
      sn_ = 0;
      targetList_ = java.util.Collections.emptyList();
      caster_ = game.msg.Define.DTurnbasedSkillTarget.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, casterId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, sn_);
      }
      for (int i = 0; i < targetList_.size(); i++) {
        output.writeMessage(3, targetList_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(4, caster_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, casterId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, sn_);
      }
      for (int i = 0; i < targetList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, targetList_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, caster_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game.msg.MsgTurnbasedFight.SCTurnbasedCastSkill parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedCastSkill parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedCastSkill parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedCastSkill parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedCastSkill parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedCastSkill parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedCastSkill parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedCastSkill parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedCastSkill parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedCastSkill parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game.msg.MsgTurnbasedFight.SCTurnbasedCastSkill prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game.msg.SCTurnbasedCastSkill}
     *
     * <pre>
     *施放技能
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game.msg.MsgTurnbasedFight.SCTurnbasedCastSkillOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedCastSkill_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedCastSkill_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game.msg.MsgTurnbasedFight.SCTurnbasedCastSkill.class, game.msg.MsgTurnbasedFight.SCTurnbasedCastSkill.Builder.class);
      }

      // Construct using game.msg.MsgTurnbasedFight.SCTurnbasedCastSkill.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getTargetListFieldBuilder();
          getCasterFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        casterId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        sn_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (targetListBuilder_ == null) {
          targetList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          targetListBuilder_.clear();
        }
        if (casterBuilder_ == null) {
          caster_ = game.msg.Define.DTurnbasedSkillTarget.getDefaultInstance();
        } else {
          casterBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedCastSkill_descriptor;
      }

      public game.msg.MsgTurnbasedFight.SCTurnbasedCastSkill getDefaultInstanceForType() {
        return game.msg.MsgTurnbasedFight.SCTurnbasedCastSkill.getDefaultInstance();
      }

      public game.msg.MsgTurnbasedFight.SCTurnbasedCastSkill build() {
        game.msg.MsgTurnbasedFight.SCTurnbasedCastSkill result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game.msg.MsgTurnbasedFight.SCTurnbasedCastSkill buildPartial() {
        game.msg.MsgTurnbasedFight.SCTurnbasedCastSkill result = new game.msg.MsgTurnbasedFight.SCTurnbasedCastSkill(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.casterId_ = casterId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.sn_ = sn_;
        if (targetListBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            targetList_ = java.util.Collections.unmodifiableList(targetList_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.targetList_ = targetList_;
        } else {
          result.targetList_ = targetListBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        if (casterBuilder_ == null) {
          result.caster_ = caster_;
        } else {
          result.caster_ = casterBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game.msg.MsgTurnbasedFight.SCTurnbasedCastSkill) {
          return mergeFrom((game.msg.MsgTurnbasedFight.SCTurnbasedCastSkill)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game.msg.MsgTurnbasedFight.SCTurnbasedCastSkill other) {
        if (other == game.msg.MsgTurnbasedFight.SCTurnbasedCastSkill.getDefaultInstance()) return this;
        if (other.hasCasterId()) {
          setCasterId(other.getCasterId());
        }
        if (other.hasSn()) {
          setSn(other.getSn());
        }
        if (targetListBuilder_ == null) {
          if (!other.targetList_.isEmpty()) {
            if (targetList_.isEmpty()) {
              targetList_ = other.targetList_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureTargetListIsMutable();
              targetList_.addAll(other.targetList_);
            }
            onChanged();
          }
        } else {
          if (!other.targetList_.isEmpty()) {
            if (targetListBuilder_.isEmpty()) {
              targetListBuilder_.dispose();
              targetListBuilder_ = null;
              targetList_ = other.targetList_;
              bitField0_ = (bitField0_ & ~0x00000004);
              targetListBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTargetListFieldBuilder() : null;
            } else {
              targetListBuilder_.addAllMessages(other.targetList_);
            }
          }
        }
        if (other.hasCaster()) {
          mergeCaster(other.getCaster());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game.msg.MsgTurnbasedFight.SCTurnbasedCastSkill parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game.msg.MsgTurnbasedFight.SCTurnbasedCastSkill) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 casterId = 1;
      private int casterId_ ;
      /**
       * <code>optional int32 casterId = 1;</code>
       *
       * <pre>
       *施放的战斗者Id
       * </pre>
       */
      public boolean hasCasterId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 casterId = 1;</code>
       *
       * <pre>
       *施放的战斗者Id
       * </pre>
       */
      public int getCasterId() {
        return casterId_;
      }
      /**
       * <code>optional int32 casterId = 1;</code>
       *
       * <pre>
       *施放的战斗者Id
       * </pre>
       */
      public Builder setCasterId(int value) {
        bitField0_ |= 0x00000001;
        casterId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 casterId = 1;</code>
       *
       * <pre>
       *施放的战斗者Id
       * </pre>
       */
      public Builder clearCasterId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        casterId_ = 0;
        onChanged();
        return this;
      }

      // optional int32 sn = 2;
      private int sn_ ;
      /**
       * <code>optional int32 sn = 2;</code>
       *
       * <pre>
       *技能配置sn
       * </pre>
       */
      public boolean hasSn() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 sn = 2;</code>
       *
       * <pre>
       *技能配置sn
       * </pre>
       */
      public int getSn() {
        return sn_;
      }
      /**
       * <code>optional int32 sn = 2;</code>
       *
       * <pre>
       *技能配置sn
       * </pre>
       */
      public Builder setSn(int value) {
        bitField0_ |= 0x00000002;
        sn_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 sn = 2;</code>
       *
       * <pre>
       *技能配置sn
       * </pre>
       */
      public Builder clearSn() {
        bitField0_ = (bitField0_ & ~0x00000002);
        sn_ = 0;
        onChanged();
        return this;
      }

      // repeated .game.msg.DTurnbasedSkillTarget targetList = 3;
      private java.util.List<game.msg.Define.DTurnbasedSkillTarget> targetList_ =
        java.util.Collections.emptyList();
      private void ensureTargetListIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          targetList_ = new java.util.ArrayList<game.msg.Define.DTurnbasedSkillTarget>(targetList_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          game.msg.Define.DTurnbasedSkillTarget, game.msg.Define.DTurnbasedSkillTarget.Builder, game.msg.Define.DTurnbasedSkillTargetOrBuilder> targetListBuilder_;

      /**
       * <code>repeated .game.msg.DTurnbasedSkillTarget targetList = 3;</code>
       *
       * <pre>
       *技能目标列表的战斗数据变化
       * </pre>
       */
      public java.util.List<game.msg.Define.DTurnbasedSkillTarget> getTargetListList() {
        if (targetListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(targetList_);
        } else {
          return targetListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .game.msg.DTurnbasedSkillTarget targetList = 3;</code>
       *
       * <pre>
       *技能目标列表的战斗数据变化
       * </pre>
       */
      public int getTargetListCount() {
        if (targetListBuilder_ == null) {
          return targetList_.size();
        } else {
          return targetListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .game.msg.DTurnbasedSkillTarget targetList = 3;</code>
       *
       * <pre>
       *技能目标列表的战斗数据变化
       * </pre>
       */
      public game.msg.Define.DTurnbasedSkillTarget getTargetList(int index) {
        if (targetListBuilder_ == null) {
          return targetList_.get(index);
        } else {
          return targetListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .game.msg.DTurnbasedSkillTarget targetList = 3;</code>
       *
       * <pre>
       *技能目标列表的战斗数据变化
       * </pre>
       */
      public Builder setTargetList(
          int index, game.msg.Define.DTurnbasedSkillTarget value) {
        if (targetListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTargetListIsMutable();
          targetList_.set(index, value);
          onChanged();
        } else {
          targetListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DTurnbasedSkillTarget targetList = 3;</code>
       *
       * <pre>
       *技能目标列表的战斗数据变化
       * </pre>
       */
      public Builder setTargetList(
          int index, game.msg.Define.DTurnbasedSkillTarget.Builder builderForValue) {
        if (targetListBuilder_ == null) {
          ensureTargetListIsMutable();
          targetList_.set(index, builderForValue.build());
          onChanged();
        } else {
          targetListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DTurnbasedSkillTarget targetList = 3;</code>
       *
       * <pre>
       *技能目标列表的战斗数据变化
       * </pre>
       */
      public Builder addTargetList(game.msg.Define.DTurnbasedSkillTarget value) {
        if (targetListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTargetListIsMutable();
          targetList_.add(value);
          onChanged();
        } else {
          targetListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DTurnbasedSkillTarget targetList = 3;</code>
       *
       * <pre>
       *技能目标列表的战斗数据变化
       * </pre>
       */
      public Builder addTargetList(
          int index, game.msg.Define.DTurnbasedSkillTarget value) {
        if (targetListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTargetListIsMutable();
          targetList_.add(index, value);
          onChanged();
        } else {
          targetListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DTurnbasedSkillTarget targetList = 3;</code>
       *
       * <pre>
       *技能目标列表的战斗数据变化
       * </pre>
       */
      public Builder addTargetList(
          game.msg.Define.DTurnbasedSkillTarget.Builder builderForValue) {
        if (targetListBuilder_ == null) {
          ensureTargetListIsMutable();
          targetList_.add(builderForValue.build());
          onChanged();
        } else {
          targetListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DTurnbasedSkillTarget targetList = 3;</code>
       *
       * <pre>
       *技能目标列表的战斗数据变化
       * </pre>
       */
      public Builder addTargetList(
          int index, game.msg.Define.DTurnbasedSkillTarget.Builder builderForValue) {
        if (targetListBuilder_ == null) {
          ensureTargetListIsMutable();
          targetList_.add(index, builderForValue.build());
          onChanged();
        } else {
          targetListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DTurnbasedSkillTarget targetList = 3;</code>
       *
       * <pre>
       *技能目标列表的战斗数据变化
       * </pre>
       */
      public Builder addAllTargetList(
          java.lang.Iterable<? extends game.msg.Define.DTurnbasedSkillTarget> values) {
        if (targetListBuilder_ == null) {
          ensureTargetListIsMutable();
          super.addAll(values, targetList_);
          onChanged();
        } else {
          targetListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DTurnbasedSkillTarget targetList = 3;</code>
       *
       * <pre>
       *技能目标列表的战斗数据变化
       * </pre>
       */
      public Builder clearTargetList() {
        if (targetListBuilder_ == null) {
          targetList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          targetListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DTurnbasedSkillTarget targetList = 3;</code>
       *
       * <pre>
       *技能目标列表的战斗数据变化
       * </pre>
       */
      public Builder removeTargetList(int index) {
        if (targetListBuilder_ == null) {
          ensureTargetListIsMutable();
          targetList_.remove(index);
          onChanged();
        } else {
          targetListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DTurnbasedSkillTarget targetList = 3;</code>
       *
       * <pre>
       *技能目标列表的战斗数据变化
       * </pre>
       */
      public game.msg.Define.DTurnbasedSkillTarget.Builder getTargetListBuilder(
          int index) {
        return getTargetListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .game.msg.DTurnbasedSkillTarget targetList = 3;</code>
       *
       * <pre>
       *技能目标列表的战斗数据变化
       * </pre>
       */
      public game.msg.Define.DTurnbasedSkillTargetOrBuilder getTargetListOrBuilder(
          int index) {
        if (targetListBuilder_ == null) {
          return targetList_.get(index);  } else {
          return targetListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .game.msg.DTurnbasedSkillTarget targetList = 3;</code>
       *
       * <pre>
       *技能目标列表的战斗数据变化
       * </pre>
       */
      public java.util.List<? extends game.msg.Define.DTurnbasedSkillTargetOrBuilder> 
           getTargetListOrBuilderList() {
        if (targetListBuilder_ != null) {
          return targetListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(targetList_);
        }
      }
      /**
       * <code>repeated .game.msg.DTurnbasedSkillTarget targetList = 3;</code>
       *
       * <pre>
       *技能目标列表的战斗数据变化
       * </pre>
       */
      public game.msg.Define.DTurnbasedSkillTarget.Builder addTargetListBuilder() {
        return getTargetListFieldBuilder().addBuilder(
            game.msg.Define.DTurnbasedSkillTarget.getDefaultInstance());
      }
      /**
       * <code>repeated .game.msg.DTurnbasedSkillTarget targetList = 3;</code>
       *
       * <pre>
       *技能目标列表的战斗数据变化
       * </pre>
       */
      public game.msg.Define.DTurnbasedSkillTarget.Builder addTargetListBuilder(
          int index) {
        return getTargetListFieldBuilder().addBuilder(
            index, game.msg.Define.DTurnbasedSkillTarget.getDefaultInstance());
      }
      /**
       * <code>repeated .game.msg.DTurnbasedSkillTarget targetList = 3;</code>
       *
       * <pre>
       *技能目标列表的战斗数据变化
       * </pre>
       */
      public java.util.List<game.msg.Define.DTurnbasedSkillTarget.Builder> 
           getTargetListBuilderList() {
        return getTargetListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          game.msg.Define.DTurnbasedSkillTarget, game.msg.Define.DTurnbasedSkillTarget.Builder, game.msg.Define.DTurnbasedSkillTargetOrBuilder> 
          getTargetListFieldBuilder() {
        if (targetListBuilder_ == null) {
          targetListBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              game.msg.Define.DTurnbasedSkillTarget, game.msg.Define.DTurnbasedSkillTarget.Builder, game.msg.Define.DTurnbasedSkillTargetOrBuilder>(
                  targetList_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          targetList_ = null;
        }
        return targetListBuilder_;
      }

      // optional .game.msg.DTurnbasedSkillTarget caster = 4;
      private game.msg.Define.DTurnbasedSkillTarget caster_ = game.msg.Define.DTurnbasedSkillTarget.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          game.msg.Define.DTurnbasedSkillTarget, game.msg.Define.DTurnbasedSkillTarget.Builder, game.msg.Define.DTurnbasedSkillTargetOrBuilder> casterBuilder_;
      /**
       * <code>optional .game.msg.DTurnbasedSkillTarget caster = 4;</code>
       *
       * <pre>
       *施法者的战斗数据变化
       * </pre>
       */
      public boolean hasCaster() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .game.msg.DTurnbasedSkillTarget caster = 4;</code>
       *
       * <pre>
       *施法者的战斗数据变化
       * </pre>
       */
      public game.msg.Define.DTurnbasedSkillTarget getCaster() {
        if (casterBuilder_ == null) {
          return caster_;
        } else {
          return casterBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .game.msg.DTurnbasedSkillTarget caster = 4;</code>
       *
       * <pre>
       *施法者的战斗数据变化
       * </pre>
       */
      public Builder setCaster(game.msg.Define.DTurnbasedSkillTarget value) {
        if (casterBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          caster_ = value;
          onChanged();
        } else {
          casterBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .game.msg.DTurnbasedSkillTarget caster = 4;</code>
       *
       * <pre>
       *施法者的战斗数据变化
       * </pre>
       */
      public Builder setCaster(
          game.msg.Define.DTurnbasedSkillTarget.Builder builderForValue) {
        if (casterBuilder_ == null) {
          caster_ = builderForValue.build();
          onChanged();
        } else {
          casterBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .game.msg.DTurnbasedSkillTarget caster = 4;</code>
       *
       * <pre>
       *施法者的战斗数据变化
       * </pre>
       */
      public Builder mergeCaster(game.msg.Define.DTurnbasedSkillTarget value) {
        if (casterBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              caster_ != game.msg.Define.DTurnbasedSkillTarget.getDefaultInstance()) {
            caster_ =
              game.msg.Define.DTurnbasedSkillTarget.newBuilder(caster_).mergeFrom(value).buildPartial();
          } else {
            caster_ = value;
          }
          onChanged();
        } else {
          casterBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .game.msg.DTurnbasedSkillTarget caster = 4;</code>
       *
       * <pre>
       *施法者的战斗数据变化
       * </pre>
       */
      public Builder clearCaster() {
        if (casterBuilder_ == null) {
          caster_ = game.msg.Define.DTurnbasedSkillTarget.getDefaultInstance();
          onChanged();
        } else {
          casterBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .game.msg.DTurnbasedSkillTarget caster = 4;</code>
       *
       * <pre>
       *施法者的战斗数据变化
       * </pre>
       */
      public game.msg.Define.DTurnbasedSkillTarget.Builder getCasterBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getCasterFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .game.msg.DTurnbasedSkillTarget caster = 4;</code>
       *
       * <pre>
       *施法者的战斗数据变化
       * </pre>
       */
      public game.msg.Define.DTurnbasedSkillTargetOrBuilder getCasterOrBuilder() {
        if (casterBuilder_ != null) {
          return casterBuilder_.getMessageOrBuilder();
        } else {
          return caster_;
        }
      }
      /**
       * <code>optional .game.msg.DTurnbasedSkillTarget caster = 4;</code>
       *
       * <pre>
       *施法者的战斗数据变化
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          game.msg.Define.DTurnbasedSkillTarget, game.msg.Define.DTurnbasedSkillTarget.Builder, game.msg.Define.DTurnbasedSkillTargetOrBuilder> 
          getCasterFieldBuilder() {
        if (casterBuilder_ == null) {
          casterBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              game.msg.Define.DTurnbasedSkillTarget, game.msg.Define.DTurnbasedSkillTarget.Builder, game.msg.Define.DTurnbasedSkillTargetOrBuilder>(
                  caster_,
                  getParentForChildren(),
                  isClean());
          caster_ = null;
        }
        return casterBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:game.msg.SCTurnbasedCastSkill)
    }

    static {
      defaultInstance = new SCTurnbasedCastSkill(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game.msg.SCTurnbasedCastSkill)
  }

  public interface SCTurnbasedRoundOrderEndOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .game.msg.DTurnbasedBuff buff = 1;
    /**
     * <code>repeated .game.msg.DTurnbasedBuff buff = 1;</code>
     *
     * <pre>
     *移除的buff
     * </pre>
     */
    java.util.List<game.msg.Define.DTurnbasedBuff> 
        getBuffList();
    /**
     * <code>repeated .game.msg.DTurnbasedBuff buff = 1;</code>
     *
     * <pre>
     *移除的buff
     * </pre>
     */
    game.msg.Define.DTurnbasedBuff getBuff(int index);
    /**
     * <code>repeated .game.msg.DTurnbasedBuff buff = 1;</code>
     *
     * <pre>
     *移除的buff
     * </pre>
     */
    int getBuffCount();
    /**
     * <code>repeated .game.msg.DTurnbasedBuff buff = 1;</code>
     *
     * <pre>
     *移除的buff
     * </pre>
     */
    java.util.List<? extends game.msg.Define.DTurnbasedBuffOrBuilder> 
        getBuffOrBuilderList();
    /**
     * <code>repeated .game.msg.DTurnbasedBuff buff = 1;</code>
     *
     * <pre>
     *移除的buff
     * </pre>
     */
    game.msg.Define.DTurnbasedBuffOrBuilder getBuffOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code game.msg.SCTurnbasedRoundOrderEnd}
   *
   * <pre>
   *出手结束
   * </pre>
   */
  public static final class SCTurnbasedRoundOrderEnd extends
      com.google.protobuf.GeneratedMessage
      implements SCTurnbasedRoundOrderEndOrBuilder {
    // Use SCTurnbasedRoundOrderEnd.newBuilder() to construct.
    private SCTurnbasedRoundOrderEnd(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SCTurnbasedRoundOrderEnd(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SCTurnbasedRoundOrderEnd defaultInstance;
    public static SCTurnbasedRoundOrderEnd getDefaultInstance() {
      return defaultInstance;
    }

    public SCTurnbasedRoundOrderEnd getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SCTurnbasedRoundOrderEnd(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                buff_ = new java.util.ArrayList<game.msg.Define.DTurnbasedBuff>();
                mutable_bitField0_ |= 0x00000001;
              }
              buff_.add(input.readMessage(game.msg.Define.DTurnbasedBuff.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          buff_ = java.util.Collections.unmodifiableList(buff_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedRoundOrderEnd_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedRoundOrderEnd_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game.msg.MsgTurnbasedFight.SCTurnbasedRoundOrderEnd.class, game.msg.MsgTurnbasedFight.SCTurnbasedRoundOrderEnd.Builder.class);
    }

    public static com.google.protobuf.Parser<SCTurnbasedRoundOrderEnd> PARSER =
        new com.google.protobuf.AbstractParser<SCTurnbasedRoundOrderEnd>() {
      public SCTurnbasedRoundOrderEnd parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SCTurnbasedRoundOrderEnd(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SCTurnbasedRoundOrderEnd> getParserForType() {
      return PARSER;
    }

    // repeated .game.msg.DTurnbasedBuff buff = 1;
    public static final int BUFF_FIELD_NUMBER = 1;
    private java.util.List<game.msg.Define.DTurnbasedBuff> buff_;
    /**
     * <code>repeated .game.msg.DTurnbasedBuff buff = 1;</code>
     *
     * <pre>
     *移除的buff
     * </pre>
     */
    public java.util.List<game.msg.Define.DTurnbasedBuff> getBuffList() {
      return buff_;
    }
    /**
     * <code>repeated .game.msg.DTurnbasedBuff buff = 1;</code>
     *
     * <pre>
     *移除的buff
     * </pre>
     */
    public java.util.List<? extends game.msg.Define.DTurnbasedBuffOrBuilder> 
        getBuffOrBuilderList() {
      return buff_;
    }
    /**
     * <code>repeated .game.msg.DTurnbasedBuff buff = 1;</code>
     *
     * <pre>
     *移除的buff
     * </pre>
     */
    public int getBuffCount() {
      return buff_.size();
    }
    /**
     * <code>repeated .game.msg.DTurnbasedBuff buff = 1;</code>
     *
     * <pre>
     *移除的buff
     * </pre>
     */
    public game.msg.Define.DTurnbasedBuff getBuff(int index) {
      return buff_.get(index);
    }
    /**
     * <code>repeated .game.msg.DTurnbasedBuff buff = 1;</code>
     *
     * <pre>
     *移除的buff
     * </pre>
     */
    public game.msg.Define.DTurnbasedBuffOrBuilder getBuffOrBuilder(
        int index) {
      return buff_.get(index);
    }

    private void initFields() {
      buff_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < buff_.size(); i++) {
        output.writeMessage(1, buff_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < buff_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, buff_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game.msg.MsgTurnbasedFight.SCTurnbasedRoundOrderEnd parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedRoundOrderEnd parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedRoundOrderEnd parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedRoundOrderEnd parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedRoundOrderEnd parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedRoundOrderEnd parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedRoundOrderEnd parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedRoundOrderEnd parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedRoundOrderEnd parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedRoundOrderEnd parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game.msg.MsgTurnbasedFight.SCTurnbasedRoundOrderEnd prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game.msg.SCTurnbasedRoundOrderEnd}
     *
     * <pre>
     *出手结束
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game.msg.MsgTurnbasedFight.SCTurnbasedRoundOrderEndOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedRoundOrderEnd_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedRoundOrderEnd_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game.msg.MsgTurnbasedFight.SCTurnbasedRoundOrderEnd.class, game.msg.MsgTurnbasedFight.SCTurnbasedRoundOrderEnd.Builder.class);
      }

      // Construct using game.msg.MsgTurnbasedFight.SCTurnbasedRoundOrderEnd.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getBuffFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (buffBuilder_ == null) {
          buff_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          buffBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedRoundOrderEnd_descriptor;
      }

      public game.msg.MsgTurnbasedFight.SCTurnbasedRoundOrderEnd getDefaultInstanceForType() {
        return game.msg.MsgTurnbasedFight.SCTurnbasedRoundOrderEnd.getDefaultInstance();
      }

      public game.msg.MsgTurnbasedFight.SCTurnbasedRoundOrderEnd build() {
        game.msg.MsgTurnbasedFight.SCTurnbasedRoundOrderEnd result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game.msg.MsgTurnbasedFight.SCTurnbasedRoundOrderEnd buildPartial() {
        game.msg.MsgTurnbasedFight.SCTurnbasedRoundOrderEnd result = new game.msg.MsgTurnbasedFight.SCTurnbasedRoundOrderEnd(this);
        int from_bitField0_ = bitField0_;
        if (buffBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            buff_ = java.util.Collections.unmodifiableList(buff_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.buff_ = buff_;
        } else {
          result.buff_ = buffBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game.msg.MsgTurnbasedFight.SCTurnbasedRoundOrderEnd) {
          return mergeFrom((game.msg.MsgTurnbasedFight.SCTurnbasedRoundOrderEnd)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game.msg.MsgTurnbasedFight.SCTurnbasedRoundOrderEnd other) {
        if (other == game.msg.MsgTurnbasedFight.SCTurnbasedRoundOrderEnd.getDefaultInstance()) return this;
        if (buffBuilder_ == null) {
          if (!other.buff_.isEmpty()) {
            if (buff_.isEmpty()) {
              buff_ = other.buff_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureBuffIsMutable();
              buff_.addAll(other.buff_);
            }
            onChanged();
          }
        } else {
          if (!other.buff_.isEmpty()) {
            if (buffBuilder_.isEmpty()) {
              buffBuilder_.dispose();
              buffBuilder_ = null;
              buff_ = other.buff_;
              bitField0_ = (bitField0_ & ~0x00000001);
              buffBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getBuffFieldBuilder() : null;
            } else {
              buffBuilder_.addAllMessages(other.buff_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game.msg.MsgTurnbasedFight.SCTurnbasedRoundOrderEnd parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game.msg.MsgTurnbasedFight.SCTurnbasedRoundOrderEnd) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .game.msg.DTurnbasedBuff buff = 1;
      private java.util.List<game.msg.Define.DTurnbasedBuff> buff_ =
        java.util.Collections.emptyList();
      private void ensureBuffIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          buff_ = new java.util.ArrayList<game.msg.Define.DTurnbasedBuff>(buff_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          game.msg.Define.DTurnbasedBuff, game.msg.Define.DTurnbasedBuff.Builder, game.msg.Define.DTurnbasedBuffOrBuilder> buffBuilder_;

      /**
       * <code>repeated .game.msg.DTurnbasedBuff buff = 1;</code>
       *
       * <pre>
       *移除的buff
       * </pre>
       */
      public java.util.List<game.msg.Define.DTurnbasedBuff> getBuffList() {
        if (buffBuilder_ == null) {
          return java.util.Collections.unmodifiableList(buff_);
        } else {
          return buffBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .game.msg.DTurnbasedBuff buff = 1;</code>
       *
       * <pre>
       *移除的buff
       * </pre>
       */
      public int getBuffCount() {
        if (buffBuilder_ == null) {
          return buff_.size();
        } else {
          return buffBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .game.msg.DTurnbasedBuff buff = 1;</code>
       *
       * <pre>
       *移除的buff
       * </pre>
       */
      public game.msg.Define.DTurnbasedBuff getBuff(int index) {
        if (buffBuilder_ == null) {
          return buff_.get(index);
        } else {
          return buffBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .game.msg.DTurnbasedBuff buff = 1;</code>
       *
       * <pre>
       *移除的buff
       * </pre>
       */
      public Builder setBuff(
          int index, game.msg.Define.DTurnbasedBuff value) {
        if (buffBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBuffIsMutable();
          buff_.set(index, value);
          onChanged();
        } else {
          buffBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DTurnbasedBuff buff = 1;</code>
       *
       * <pre>
       *移除的buff
       * </pre>
       */
      public Builder setBuff(
          int index, game.msg.Define.DTurnbasedBuff.Builder builderForValue) {
        if (buffBuilder_ == null) {
          ensureBuffIsMutable();
          buff_.set(index, builderForValue.build());
          onChanged();
        } else {
          buffBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DTurnbasedBuff buff = 1;</code>
       *
       * <pre>
       *移除的buff
       * </pre>
       */
      public Builder addBuff(game.msg.Define.DTurnbasedBuff value) {
        if (buffBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBuffIsMutable();
          buff_.add(value);
          onChanged();
        } else {
          buffBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DTurnbasedBuff buff = 1;</code>
       *
       * <pre>
       *移除的buff
       * </pre>
       */
      public Builder addBuff(
          int index, game.msg.Define.DTurnbasedBuff value) {
        if (buffBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBuffIsMutable();
          buff_.add(index, value);
          onChanged();
        } else {
          buffBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DTurnbasedBuff buff = 1;</code>
       *
       * <pre>
       *移除的buff
       * </pre>
       */
      public Builder addBuff(
          game.msg.Define.DTurnbasedBuff.Builder builderForValue) {
        if (buffBuilder_ == null) {
          ensureBuffIsMutable();
          buff_.add(builderForValue.build());
          onChanged();
        } else {
          buffBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DTurnbasedBuff buff = 1;</code>
       *
       * <pre>
       *移除的buff
       * </pre>
       */
      public Builder addBuff(
          int index, game.msg.Define.DTurnbasedBuff.Builder builderForValue) {
        if (buffBuilder_ == null) {
          ensureBuffIsMutable();
          buff_.add(index, builderForValue.build());
          onChanged();
        } else {
          buffBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DTurnbasedBuff buff = 1;</code>
       *
       * <pre>
       *移除的buff
       * </pre>
       */
      public Builder addAllBuff(
          java.lang.Iterable<? extends game.msg.Define.DTurnbasedBuff> values) {
        if (buffBuilder_ == null) {
          ensureBuffIsMutable();
          super.addAll(values, buff_);
          onChanged();
        } else {
          buffBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DTurnbasedBuff buff = 1;</code>
       *
       * <pre>
       *移除的buff
       * </pre>
       */
      public Builder clearBuff() {
        if (buffBuilder_ == null) {
          buff_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          buffBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DTurnbasedBuff buff = 1;</code>
       *
       * <pre>
       *移除的buff
       * </pre>
       */
      public Builder removeBuff(int index) {
        if (buffBuilder_ == null) {
          ensureBuffIsMutable();
          buff_.remove(index);
          onChanged();
        } else {
          buffBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DTurnbasedBuff buff = 1;</code>
       *
       * <pre>
       *移除的buff
       * </pre>
       */
      public game.msg.Define.DTurnbasedBuff.Builder getBuffBuilder(
          int index) {
        return getBuffFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .game.msg.DTurnbasedBuff buff = 1;</code>
       *
       * <pre>
       *移除的buff
       * </pre>
       */
      public game.msg.Define.DTurnbasedBuffOrBuilder getBuffOrBuilder(
          int index) {
        if (buffBuilder_ == null) {
          return buff_.get(index);  } else {
          return buffBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .game.msg.DTurnbasedBuff buff = 1;</code>
       *
       * <pre>
       *移除的buff
       * </pre>
       */
      public java.util.List<? extends game.msg.Define.DTurnbasedBuffOrBuilder> 
           getBuffOrBuilderList() {
        if (buffBuilder_ != null) {
          return buffBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(buff_);
        }
      }
      /**
       * <code>repeated .game.msg.DTurnbasedBuff buff = 1;</code>
       *
       * <pre>
       *移除的buff
       * </pre>
       */
      public game.msg.Define.DTurnbasedBuff.Builder addBuffBuilder() {
        return getBuffFieldBuilder().addBuilder(
            game.msg.Define.DTurnbasedBuff.getDefaultInstance());
      }
      /**
       * <code>repeated .game.msg.DTurnbasedBuff buff = 1;</code>
       *
       * <pre>
       *移除的buff
       * </pre>
       */
      public game.msg.Define.DTurnbasedBuff.Builder addBuffBuilder(
          int index) {
        return getBuffFieldBuilder().addBuilder(
            index, game.msg.Define.DTurnbasedBuff.getDefaultInstance());
      }
      /**
       * <code>repeated .game.msg.DTurnbasedBuff buff = 1;</code>
       *
       * <pre>
       *移除的buff
       * </pre>
       */
      public java.util.List<game.msg.Define.DTurnbasedBuff.Builder> 
           getBuffBuilderList() {
        return getBuffFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          game.msg.Define.DTurnbasedBuff, game.msg.Define.DTurnbasedBuff.Builder, game.msg.Define.DTurnbasedBuffOrBuilder> 
          getBuffFieldBuilder() {
        if (buffBuilder_ == null) {
          buffBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              game.msg.Define.DTurnbasedBuff, game.msg.Define.DTurnbasedBuff.Builder, game.msg.Define.DTurnbasedBuffOrBuilder>(
                  buff_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          buff_ = null;
        }
        return buffBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:game.msg.SCTurnbasedRoundOrderEnd)
    }

    static {
      defaultInstance = new SCTurnbasedRoundOrderEnd(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game.msg.SCTurnbasedRoundOrderEnd)
  }

  public interface SCTurnbasedBuffOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 casterId = 1;
    /**
     * <code>optional int32 casterId = 1;</code>
     *
     * <pre>
     *buff所在的战斗者Id
     * </pre>
     */
    boolean hasCasterId();
    /**
     * <code>optional int32 casterId = 1;</code>
     *
     * <pre>
     *buff所在的战斗者Id
     * </pre>
     */
    int getCasterId();

    // optional .game.msg.DTurnbasedBuff buff = 2;
    /**
     * <code>optional .game.msg.DTurnbasedBuff buff = 2;</code>
     *
     * <pre>
     *buff信息
     * </pre>
     */
    boolean hasBuff();
    /**
     * <code>optional .game.msg.DTurnbasedBuff buff = 2;</code>
     *
     * <pre>
     *buff信息
     * </pre>
     */
    game.msg.Define.DTurnbasedBuff getBuff();
    /**
     * <code>optional .game.msg.DTurnbasedBuff buff = 2;</code>
     *
     * <pre>
     *buff信息
     * </pre>
     */
    game.msg.Define.DTurnbasedBuffOrBuilder getBuffOrBuilder();

    // optional bool isRemove = 3;
    /**
     * <code>optional bool isRemove = 3;</code>
     *
     * <pre>
     *生效后是否移除
     * </pre>
     */
    boolean hasIsRemove();
    /**
     * <code>optional bool isRemove = 3;</code>
     *
     * <pre>
     *生效后是否移除
     * </pre>
     */
    boolean getIsRemove();

    // optional int32 damage = 4;
    /**
     * <code>optional int32 damage = 4;</code>
     *
     * <pre>
     *造成的伤害
     * </pre>
     */
    boolean hasDamage();
    /**
     * <code>optional int32 damage = 4;</code>
     *
     * <pre>
     *造成的伤害
     * </pre>
     */
    int getDamage();

    // optional int32 rage = 5;
    /**
     * <code>optional int32 rage = 5;</code>
     *
     * <pre>
     *改变的怒气
     * </pre>
     */
    boolean hasRage();
    /**
     * <code>optional int32 rage = 5;</code>
     *
     * <pre>
     *改变的怒气
     * </pre>
     */
    int getRage();
  }
  /**
   * Protobuf type {@code game.msg.SCTurnbasedBuff}
   *
   * <pre>
   *buff生效
   * </pre>
   */
  public static final class SCTurnbasedBuff extends
      com.google.protobuf.GeneratedMessage
      implements SCTurnbasedBuffOrBuilder {
    // Use SCTurnbasedBuff.newBuilder() to construct.
    private SCTurnbasedBuff(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SCTurnbasedBuff(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SCTurnbasedBuff defaultInstance;
    public static SCTurnbasedBuff getDefaultInstance() {
      return defaultInstance;
    }

    public SCTurnbasedBuff getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SCTurnbasedBuff(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              casterId_ = input.readInt32();
              break;
            }
            case 18: {
              game.msg.Define.DTurnbasedBuff.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = buff_.toBuilder();
              }
              buff_ = input.readMessage(game.msg.Define.DTurnbasedBuff.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(buff_);
                buff_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              isRemove_ = input.readBool();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              damage_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              rage_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedBuff_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedBuff_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game.msg.MsgTurnbasedFight.SCTurnbasedBuff.class, game.msg.MsgTurnbasedFight.SCTurnbasedBuff.Builder.class);
    }

    public static com.google.protobuf.Parser<SCTurnbasedBuff> PARSER =
        new com.google.protobuf.AbstractParser<SCTurnbasedBuff>() {
      public SCTurnbasedBuff parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SCTurnbasedBuff(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SCTurnbasedBuff> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 casterId = 1;
    public static final int CASTERID_FIELD_NUMBER = 1;
    private int casterId_;
    /**
     * <code>optional int32 casterId = 1;</code>
     *
     * <pre>
     *buff所在的战斗者Id
     * </pre>
     */
    public boolean hasCasterId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 casterId = 1;</code>
     *
     * <pre>
     *buff所在的战斗者Id
     * </pre>
     */
    public int getCasterId() {
      return casterId_;
    }

    // optional .game.msg.DTurnbasedBuff buff = 2;
    public static final int BUFF_FIELD_NUMBER = 2;
    private game.msg.Define.DTurnbasedBuff buff_;
    /**
     * <code>optional .game.msg.DTurnbasedBuff buff = 2;</code>
     *
     * <pre>
     *buff信息
     * </pre>
     */
    public boolean hasBuff() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .game.msg.DTurnbasedBuff buff = 2;</code>
     *
     * <pre>
     *buff信息
     * </pre>
     */
    public game.msg.Define.DTurnbasedBuff getBuff() {
      return buff_;
    }
    /**
     * <code>optional .game.msg.DTurnbasedBuff buff = 2;</code>
     *
     * <pre>
     *buff信息
     * </pre>
     */
    public game.msg.Define.DTurnbasedBuffOrBuilder getBuffOrBuilder() {
      return buff_;
    }

    // optional bool isRemove = 3;
    public static final int ISREMOVE_FIELD_NUMBER = 3;
    private boolean isRemove_;
    /**
     * <code>optional bool isRemove = 3;</code>
     *
     * <pre>
     *生效后是否移除
     * </pre>
     */
    public boolean hasIsRemove() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool isRemove = 3;</code>
     *
     * <pre>
     *生效后是否移除
     * </pre>
     */
    public boolean getIsRemove() {
      return isRemove_;
    }

    // optional int32 damage = 4;
    public static final int DAMAGE_FIELD_NUMBER = 4;
    private int damage_;
    /**
     * <code>optional int32 damage = 4;</code>
     *
     * <pre>
     *造成的伤害
     * </pre>
     */
    public boolean hasDamage() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 damage = 4;</code>
     *
     * <pre>
     *造成的伤害
     * </pre>
     */
    public int getDamage() {
      return damage_;
    }

    // optional int32 rage = 5;
    public static final int RAGE_FIELD_NUMBER = 5;
    private int rage_;
    /**
     * <code>optional int32 rage = 5;</code>
     *
     * <pre>
     *改变的怒气
     * </pre>
     */
    public boolean hasRage() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 rage = 5;</code>
     *
     * <pre>
     *改变的怒气
     * </pre>
     */
    public int getRage() {
      return rage_;
    }

    private void initFields() {
      casterId_ = 0;
      buff_ = game.msg.Define.DTurnbasedBuff.getDefaultInstance();
      isRemove_ = false;
      damage_ = 0;
      rage_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, casterId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, buff_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, isRemove_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, damage_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, rage_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, casterId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, buff_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, isRemove_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, damage_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, rage_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game.msg.MsgTurnbasedFight.SCTurnbasedBuff parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedBuff parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedBuff parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedBuff parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedBuff parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedBuff parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedBuff parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedBuff parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedBuff parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedBuff parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game.msg.MsgTurnbasedFight.SCTurnbasedBuff prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game.msg.SCTurnbasedBuff}
     *
     * <pre>
     *buff生效
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game.msg.MsgTurnbasedFight.SCTurnbasedBuffOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedBuff_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedBuff_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game.msg.MsgTurnbasedFight.SCTurnbasedBuff.class, game.msg.MsgTurnbasedFight.SCTurnbasedBuff.Builder.class);
      }

      // Construct using game.msg.MsgTurnbasedFight.SCTurnbasedBuff.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getBuffFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        casterId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (buffBuilder_ == null) {
          buff_ = game.msg.Define.DTurnbasedBuff.getDefaultInstance();
        } else {
          buffBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        isRemove_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        damage_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        rage_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedBuff_descriptor;
      }

      public game.msg.MsgTurnbasedFight.SCTurnbasedBuff getDefaultInstanceForType() {
        return game.msg.MsgTurnbasedFight.SCTurnbasedBuff.getDefaultInstance();
      }

      public game.msg.MsgTurnbasedFight.SCTurnbasedBuff build() {
        game.msg.MsgTurnbasedFight.SCTurnbasedBuff result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game.msg.MsgTurnbasedFight.SCTurnbasedBuff buildPartial() {
        game.msg.MsgTurnbasedFight.SCTurnbasedBuff result = new game.msg.MsgTurnbasedFight.SCTurnbasedBuff(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.casterId_ = casterId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (buffBuilder_ == null) {
          result.buff_ = buff_;
        } else {
          result.buff_ = buffBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.isRemove_ = isRemove_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.damage_ = damage_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.rage_ = rage_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game.msg.MsgTurnbasedFight.SCTurnbasedBuff) {
          return mergeFrom((game.msg.MsgTurnbasedFight.SCTurnbasedBuff)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game.msg.MsgTurnbasedFight.SCTurnbasedBuff other) {
        if (other == game.msg.MsgTurnbasedFight.SCTurnbasedBuff.getDefaultInstance()) return this;
        if (other.hasCasterId()) {
          setCasterId(other.getCasterId());
        }
        if (other.hasBuff()) {
          mergeBuff(other.getBuff());
        }
        if (other.hasIsRemove()) {
          setIsRemove(other.getIsRemove());
        }
        if (other.hasDamage()) {
          setDamage(other.getDamage());
        }
        if (other.hasRage()) {
          setRage(other.getRage());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game.msg.MsgTurnbasedFight.SCTurnbasedBuff parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game.msg.MsgTurnbasedFight.SCTurnbasedBuff) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 casterId = 1;
      private int casterId_ ;
      /**
       * <code>optional int32 casterId = 1;</code>
       *
       * <pre>
       *buff所在的战斗者Id
       * </pre>
       */
      public boolean hasCasterId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 casterId = 1;</code>
       *
       * <pre>
       *buff所在的战斗者Id
       * </pre>
       */
      public int getCasterId() {
        return casterId_;
      }
      /**
       * <code>optional int32 casterId = 1;</code>
       *
       * <pre>
       *buff所在的战斗者Id
       * </pre>
       */
      public Builder setCasterId(int value) {
        bitField0_ |= 0x00000001;
        casterId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 casterId = 1;</code>
       *
       * <pre>
       *buff所在的战斗者Id
       * </pre>
       */
      public Builder clearCasterId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        casterId_ = 0;
        onChanged();
        return this;
      }

      // optional .game.msg.DTurnbasedBuff buff = 2;
      private game.msg.Define.DTurnbasedBuff buff_ = game.msg.Define.DTurnbasedBuff.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          game.msg.Define.DTurnbasedBuff, game.msg.Define.DTurnbasedBuff.Builder, game.msg.Define.DTurnbasedBuffOrBuilder> buffBuilder_;
      /**
       * <code>optional .game.msg.DTurnbasedBuff buff = 2;</code>
       *
       * <pre>
       *buff信息
       * </pre>
       */
      public boolean hasBuff() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .game.msg.DTurnbasedBuff buff = 2;</code>
       *
       * <pre>
       *buff信息
       * </pre>
       */
      public game.msg.Define.DTurnbasedBuff getBuff() {
        if (buffBuilder_ == null) {
          return buff_;
        } else {
          return buffBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .game.msg.DTurnbasedBuff buff = 2;</code>
       *
       * <pre>
       *buff信息
       * </pre>
       */
      public Builder setBuff(game.msg.Define.DTurnbasedBuff value) {
        if (buffBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          buff_ = value;
          onChanged();
        } else {
          buffBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .game.msg.DTurnbasedBuff buff = 2;</code>
       *
       * <pre>
       *buff信息
       * </pre>
       */
      public Builder setBuff(
          game.msg.Define.DTurnbasedBuff.Builder builderForValue) {
        if (buffBuilder_ == null) {
          buff_ = builderForValue.build();
          onChanged();
        } else {
          buffBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .game.msg.DTurnbasedBuff buff = 2;</code>
       *
       * <pre>
       *buff信息
       * </pre>
       */
      public Builder mergeBuff(game.msg.Define.DTurnbasedBuff value) {
        if (buffBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              buff_ != game.msg.Define.DTurnbasedBuff.getDefaultInstance()) {
            buff_ =
              game.msg.Define.DTurnbasedBuff.newBuilder(buff_).mergeFrom(value).buildPartial();
          } else {
            buff_ = value;
          }
          onChanged();
        } else {
          buffBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .game.msg.DTurnbasedBuff buff = 2;</code>
       *
       * <pre>
       *buff信息
       * </pre>
       */
      public Builder clearBuff() {
        if (buffBuilder_ == null) {
          buff_ = game.msg.Define.DTurnbasedBuff.getDefaultInstance();
          onChanged();
        } else {
          buffBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .game.msg.DTurnbasedBuff buff = 2;</code>
       *
       * <pre>
       *buff信息
       * </pre>
       */
      public game.msg.Define.DTurnbasedBuff.Builder getBuffBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getBuffFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .game.msg.DTurnbasedBuff buff = 2;</code>
       *
       * <pre>
       *buff信息
       * </pre>
       */
      public game.msg.Define.DTurnbasedBuffOrBuilder getBuffOrBuilder() {
        if (buffBuilder_ != null) {
          return buffBuilder_.getMessageOrBuilder();
        } else {
          return buff_;
        }
      }
      /**
       * <code>optional .game.msg.DTurnbasedBuff buff = 2;</code>
       *
       * <pre>
       *buff信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          game.msg.Define.DTurnbasedBuff, game.msg.Define.DTurnbasedBuff.Builder, game.msg.Define.DTurnbasedBuffOrBuilder> 
          getBuffFieldBuilder() {
        if (buffBuilder_ == null) {
          buffBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              game.msg.Define.DTurnbasedBuff, game.msg.Define.DTurnbasedBuff.Builder, game.msg.Define.DTurnbasedBuffOrBuilder>(
                  buff_,
                  getParentForChildren(),
                  isClean());
          buff_ = null;
        }
        return buffBuilder_;
      }

      // optional bool isRemove = 3;
      private boolean isRemove_ ;
      /**
       * <code>optional bool isRemove = 3;</code>
       *
       * <pre>
       *生效后是否移除
       * </pre>
       */
      public boolean hasIsRemove() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool isRemove = 3;</code>
       *
       * <pre>
       *生效后是否移除
       * </pre>
       */
      public boolean getIsRemove() {
        return isRemove_;
      }
      /**
       * <code>optional bool isRemove = 3;</code>
       *
       * <pre>
       *生效后是否移除
       * </pre>
       */
      public Builder setIsRemove(boolean value) {
        bitField0_ |= 0x00000004;
        isRemove_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isRemove = 3;</code>
       *
       * <pre>
       *生效后是否移除
       * </pre>
       */
      public Builder clearIsRemove() {
        bitField0_ = (bitField0_ & ~0x00000004);
        isRemove_ = false;
        onChanged();
        return this;
      }

      // optional int32 damage = 4;
      private int damage_ ;
      /**
       * <code>optional int32 damage = 4;</code>
       *
       * <pre>
       *造成的伤害
       * </pre>
       */
      public boolean hasDamage() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 damage = 4;</code>
       *
       * <pre>
       *造成的伤害
       * </pre>
       */
      public int getDamage() {
        return damage_;
      }
      /**
       * <code>optional int32 damage = 4;</code>
       *
       * <pre>
       *造成的伤害
       * </pre>
       */
      public Builder setDamage(int value) {
        bitField0_ |= 0x00000008;
        damage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 damage = 4;</code>
       *
       * <pre>
       *造成的伤害
       * </pre>
       */
      public Builder clearDamage() {
        bitField0_ = (bitField0_ & ~0x00000008);
        damage_ = 0;
        onChanged();
        return this;
      }

      // optional int32 rage = 5;
      private int rage_ ;
      /**
       * <code>optional int32 rage = 5;</code>
       *
       * <pre>
       *改变的怒气
       * </pre>
       */
      public boolean hasRage() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 rage = 5;</code>
       *
       * <pre>
       *改变的怒气
       * </pre>
       */
      public int getRage() {
        return rage_;
      }
      /**
       * <code>optional int32 rage = 5;</code>
       *
       * <pre>
       *改变的怒气
       * </pre>
       */
      public Builder setRage(int value) {
        bitField0_ |= 0x00000010;
        rage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 rage = 5;</code>
       *
       * <pre>
       *改变的怒气
       * </pre>
       */
      public Builder clearRage() {
        bitField0_ = (bitField0_ & ~0x00000010);
        rage_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:game.msg.SCTurnbasedBuff)
    }

    static {
      defaultInstance = new SCTurnbasedBuff(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game.msg.SCTurnbasedBuff)
  }

  public interface CSTurnbasedCastSkillOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 sn = 1;
    /**
     * <code>required int32 sn = 1;</code>
     *
     * <pre>
     *技能配置sn
     * </pre>
     */
    boolean hasSn();
    /**
     * <code>required int32 sn = 1;</code>
     *
     * <pre>
     *技能配置sn
     * </pre>
     */
    int getSn();

    // required int32 casterId = 2;
    /**
     * <code>required int32 casterId = 2;</code>
     *
     * <pre>
     *战斗者Id
     * </pre>
     */
    boolean hasCasterId();
    /**
     * <code>required int32 casterId = 2;</code>
     *
     * <pre>
     *战斗者Id
     * </pre>
     */
    int getCasterId();
  }
  /**
   * Protobuf type {@code game.msg.CSTurnbasedCastSkill}
   *
   * <pre>
   *使用技能
   * </pre>
   */
  public static final class CSTurnbasedCastSkill extends
      com.google.protobuf.GeneratedMessage
      implements CSTurnbasedCastSkillOrBuilder {
    // Use CSTurnbasedCastSkill.newBuilder() to construct.
    private CSTurnbasedCastSkill(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CSTurnbasedCastSkill(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CSTurnbasedCastSkill defaultInstance;
    public static CSTurnbasedCastSkill getDefaultInstance() {
      return defaultInstance;
    }

    public CSTurnbasedCastSkill getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CSTurnbasedCastSkill(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              sn_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              casterId_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game.msg.MsgTurnbasedFight.internal_static_game_msg_CSTurnbasedCastSkill_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game.msg.MsgTurnbasedFight.internal_static_game_msg_CSTurnbasedCastSkill_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game.msg.MsgTurnbasedFight.CSTurnbasedCastSkill.class, game.msg.MsgTurnbasedFight.CSTurnbasedCastSkill.Builder.class);
    }

    public static com.google.protobuf.Parser<CSTurnbasedCastSkill> PARSER =
        new com.google.protobuf.AbstractParser<CSTurnbasedCastSkill>() {
      public CSTurnbasedCastSkill parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CSTurnbasedCastSkill(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CSTurnbasedCastSkill> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 sn = 1;
    public static final int SN_FIELD_NUMBER = 1;
    private int sn_;
    /**
     * <code>required int32 sn = 1;</code>
     *
     * <pre>
     *技能配置sn
     * </pre>
     */
    public boolean hasSn() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 sn = 1;</code>
     *
     * <pre>
     *技能配置sn
     * </pre>
     */
    public int getSn() {
      return sn_;
    }

    // required int32 casterId = 2;
    public static final int CASTERID_FIELD_NUMBER = 2;
    private int casterId_;
    /**
     * <code>required int32 casterId = 2;</code>
     *
     * <pre>
     *战斗者Id
     * </pre>
     */
    public boolean hasCasterId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 casterId = 2;</code>
     *
     * <pre>
     *战斗者Id
     * </pre>
     */
    public int getCasterId() {
      return casterId_;
    }

    private void initFields() {
      sn_ = 0;
      casterId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasSn()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCasterId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, sn_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, casterId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, sn_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, casterId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game.msg.MsgTurnbasedFight.CSTurnbasedCastSkill parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedCastSkill parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedCastSkill parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedCastSkill parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedCastSkill parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedCastSkill parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedCastSkill parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedCastSkill parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedCastSkill parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedCastSkill parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game.msg.MsgTurnbasedFight.CSTurnbasedCastSkill prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game.msg.CSTurnbasedCastSkill}
     *
     * <pre>
     *使用技能
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game.msg.MsgTurnbasedFight.CSTurnbasedCastSkillOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_CSTurnbasedCastSkill_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_CSTurnbasedCastSkill_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game.msg.MsgTurnbasedFight.CSTurnbasedCastSkill.class, game.msg.MsgTurnbasedFight.CSTurnbasedCastSkill.Builder.class);
      }

      // Construct using game.msg.MsgTurnbasedFight.CSTurnbasedCastSkill.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        sn_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        casterId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_CSTurnbasedCastSkill_descriptor;
      }

      public game.msg.MsgTurnbasedFight.CSTurnbasedCastSkill getDefaultInstanceForType() {
        return game.msg.MsgTurnbasedFight.CSTurnbasedCastSkill.getDefaultInstance();
      }

      public game.msg.MsgTurnbasedFight.CSTurnbasedCastSkill build() {
        game.msg.MsgTurnbasedFight.CSTurnbasedCastSkill result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game.msg.MsgTurnbasedFight.CSTurnbasedCastSkill buildPartial() {
        game.msg.MsgTurnbasedFight.CSTurnbasedCastSkill result = new game.msg.MsgTurnbasedFight.CSTurnbasedCastSkill(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.sn_ = sn_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.casterId_ = casterId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game.msg.MsgTurnbasedFight.CSTurnbasedCastSkill) {
          return mergeFrom((game.msg.MsgTurnbasedFight.CSTurnbasedCastSkill)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game.msg.MsgTurnbasedFight.CSTurnbasedCastSkill other) {
        if (other == game.msg.MsgTurnbasedFight.CSTurnbasedCastSkill.getDefaultInstance()) return this;
        if (other.hasSn()) {
          setSn(other.getSn());
        }
        if (other.hasCasterId()) {
          setCasterId(other.getCasterId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSn()) {
          
          return false;
        }
        if (!hasCasterId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game.msg.MsgTurnbasedFight.CSTurnbasedCastSkill parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game.msg.MsgTurnbasedFight.CSTurnbasedCastSkill) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 sn = 1;
      private int sn_ ;
      /**
       * <code>required int32 sn = 1;</code>
       *
       * <pre>
       *技能配置sn
       * </pre>
       */
      public boolean hasSn() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 sn = 1;</code>
       *
       * <pre>
       *技能配置sn
       * </pre>
       */
      public int getSn() {
        return sn_;
      }
      /**
       * <code>required int32 sn = 1;</code>
       *
       * <pre>
       *技能配置sn
       * </pre>
       */
      public Builder setSn(int value) {
        bitField0_ |= 0x00000001;
        sn_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 sn = 1;</code>
       *
       * <pre>
       *技能配置sn
       * </pre>
       */
      public Builder clearSn() {
        bitField0_ = (bitField0_ & ~0x00000001);
        sn_ = 0;
        onChanged();
        return this;
      }

      // required int32 casterId = 2;
      private int casterId_ ;
      /**
       * <code>required int32 casterId = 2;</code>
       *
       * <pre>
       *战斗者Id
       * </pre>
       */
      public boolean hasCasterId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 casterId = 2;</code>
       *
       * <pre>
       *战斗者Id
       * </pre>
       */
      public int getCasterId() {
        return casterId_;
      }
      /**
       * <code>required int32 casterId = 2;</code>
       *
       * <pre>
       *战斗者Id
       * </pre>
       */
      public Builder setCasterId(int value) {
        bitField0_ |= 0x00000002;
        casterId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 casterId = 2;</code>
       *
       * <pre>
       *战斗者Id
       * </pre>
       */
      public Builder clearCasterId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        casterId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:game.msg.CSTurnbasedCastSkill)
    }

    static {
      defaultInstance = new CSTurnbasedCastSkill(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game.msg.CSTurnbasedCastSkill)
  }

  public interface CSTurnbasedSpeedOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional float speed = 1;
    /**
     * <code>optional float speed = 1;</code>
     *
     * <pre>
     *速率
     * </pre>
     */
    boolean hasSpeed();
    /**
     * <code>optional float speed = 1;</code>
     *
     * <pre>
     *速率
     * </pre>
     */
    float getSpeed();
  }
  /**
   * Protobuf type {@code game.msg.CSTurnbasedSpeed}
   *
   * <pre>
   *修改变速倍率
   * </pre>
   */
  public static final class CSTurnbasedSpeed extends
      com.google.protobuf.GeneratedMessage
      implements CSTurnbasedSpeedOrBuilder {
    // Use CSTurnbasedSpeed.newBuilder() to construct.
    private CSTurnbasedSpeed(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CSTurnbasedSpeed(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CSTurnbasedSpeed defaultInstance;
    public static CSTurnbasedSpeed getDefaultInstance() {
      return defaultInstance;
    }

    public CSTurnbasedSpeed getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CSTurnbasedSpeed(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 13: {
              bitField0_ |= 0x00000001;
              speed_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game.msg.MsgTurnbasedFight.internal_static_game_msg_CSTurnbasedSpeed_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game.msg.MsgTurnbasedFight.internal_static_game_msg_CSTurnbasedSpeed_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game.msg.MsgTurnbasedFight.CSTurnbasedSpeed.class, game.msg.MsgTurnbasedFight.CSTurnbasedSpeed.Builder.class);
    }

    public static com.google.protobuf.Parser<CSTurnbasedSpeed> PARSER =
        new com.google.protobuf.AbstractParser<CSTurnbasedSpeed>() {
      public CSTurnbasedSpeed parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CSTurnbasedSpeed(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CSTurnbasedSpeed> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional float speed = 1;
    public static final int SPEED_FIELD_NUMBER = 1;
    private float speed_;
    /**
     * <code>optional float speed = 1;</code>
     *
     * <pre>
     *速率
     * </pre>
     */
    public boolean hasSpeed() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional float speed = 1;</code>
     *
     * <pre>
     *速率
     * </pre>
     */
    public float getSpeed() {
      return speed_;
    }

    private void initFields() {
      speed_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(1, speed_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, speed_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game.msg.MsgTurnbasedFight.CSTurnbasedSpeed parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedSpeed parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedSpeed parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedSpeed parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedSpeed parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedSpeed parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedSpeed parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedSpeed parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedSpeed parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedSpeed parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game.msg.MsgTurnbasedFight.CSTurnbasedSpeed prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game.msg.CSTurnbasedSpeed}
     *
     * <pre>
     *修改变速倍率
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game.msg.MsgTurnbasedFight.CSTurnbasedSpeedOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_CSTurnbasedSpeed_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_CSTurnbasedSpeed_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game.msg.MsgTurnbasedFight.CSTurnbasedSpeed.class, game.msg.MsgTurnbasedFight.CSTurnbasedSpeed.Builder.class);
      }

      // Construct using game.msg.MsgTurnbasedFight.CSTurnbasedSpeed.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        speed_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_CSTurnbasedSpeed_descriptor;
      }

      public game.msg.MsgTurnbasedFight.CSTurnbasedSpeed getDefaultInstanceForType() {
        return game.msg.MsgTurnbasedFight.CSTurnbasedSpeed.getDefaultInstance();
      }

      public game.msg.MsgTurnbasedFight.CSTurnbasedSpeed build() {
        game.msg.MsgTurnbasedFight.CSTurnbasedSpeed result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game.msg.MsgTurnbasedFight.CSTurnbasedSpeed buildPartial() {
        game.msg.MsgTurnbasedFight.CSTurnbasedSpeed result = new game.msg.MsgTurnbasedFight.CSTurnbasedSpeed(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.speed_ = speed_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game.msg.MsgTurnbasedFight.CSTurnbasedSpeed) {
          return mergeFrom((game.msg.MsgTurnbasedFight.CSTurnbasedSpeed)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game.msg.MsgTurnbasedFight.CSTurnbasedSpeed other) {
        if (other == game.msg.MsgTurnbasedFight.CSTurnbasedSpeed.getDefaultInstance()) return this;
        if (other.hasSpeed()) {
          setSpeed(other.getSpeed());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game.msg.MsgTurnbasedFight.CSTurnbasedSpeed parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game.msg.MsgTurnbasedFight.CSTurnbasedSpeed) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional float speed = 1;
      private float speed_ ;
      /**
       * <code>optional float speed = 1;</code>
       *
       * <pre>
       *速率
       * </pre>
       */
      public boolean hasSpeed() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional float speed = 1;</code>
       *
       * <pre>
       *速率
       * </pre>
       */
      public float getSpeed() {
        return speed_;
      }
      /**
       * <code>optional float speed = 1;</code>
       *
       * <pre>
       *速率
       * </pre>
       */
      public Builder setSpeed(float value) {
        bitField0_ |= 0x00000001;
        speed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float speed = 1;</code>
       *
       * <pre>
       *速率
       * </pre>
       */
      public Builder clearSpeed() {
        bitField0_ = (bitField0_ & ~0x00000001);
        speed_ = 0F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:game.msg.CSTurnbasedSpeed)
    }

    static {
      defaultInstance = new CSTurnbasedSpeed(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game.msg.CSTurnbasedSpeed)
  }

  public interface SCTurnbasedSpeedOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional float speed = 1;
    /**
     * <code>optional float speed = 1;</code>
     *
     * <pre>
     *速率
     * </pre>
     */
    boolean hasSpeed();
    /**
     * <code>optional float speed = 1;</code>
     *
     * <pre>
     *速率
     * </pre>
     */
    float getSpeed();
  }
  /**
   * Protobuf type {@code game.msg.SCTurnbasedSpeed}
   *
   * <pre>
   *修改变速倍率
   * </pre>
   */
  public static final class SCTurnbasedSpeed extends
      com.google.protobuf.GeneratedMessage
      implements SCTurnbasedSpeedOrBuilder {
    // Use SCTurnbasedSpeed.newBuilder() to construct.
    private SCTurnbasedSpeed(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SCTurnbasedSpeed(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SCTurnbasedSpeed defaultInstance;
    public static SCTurnbasedSpeed getDefaultInstance() {
      return defaultInstance;
    }

    public SCTurnbasedSpeed getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SCTurnbasedSpeed(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 13: {
              bitField0_ |= 0x00000001;
              speed_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedSpeed_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedSpeed_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game.msg.MsgTurnbasedFight.SCTurnbasedSpeed.class, game.msg.MsgTurnbasedFight.SCTurnbasedSpeed.Builder.class);
    }

    public static com.google.protobuf.Parser<SCTurnbasedSpeed> PARSER =
        new com.google.protobuf.AbstractParser<SCTurnbasedSpeed>() {
      public SCTurnbasedSpeed parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SCTurnbasedSpeed(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SCTurnbasedSpeed> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional float speed = 1;
    public static final int SPEED_FIELD_NUMBER = 1;
    private float speed_;
    /**
     * <code>optional float speed = 1;</code>
     *
     * <pre>
     *速率
     * </pre>
     */
    public boolean hasSpeed() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional float speed = 1;</code>
     *
     * <pre>
     *速率
     * </pre>
     */
    public float getSpeed() {
      return speed_;
    }

    private void initFields() {
      speed_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(1, speed_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, speed_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game.msg.MsgTurnbasedFight.SCTurnbasedSpeed parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedSpeed parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedSpeed parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedSpeed parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedSpeed parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedSpeed parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedSpeed parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedSpeed parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedSpeed parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedSpeed parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game.msg.MsgTurnbasedFight.SCTurnbasedSpeed prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game.msg.SCTurnbasedSpeed}
     *
     * <pre>
     *修改变速倍率
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game.msg.MsgTurnbasedFight.SCTurnbasedSpeedOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedSpeed_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedSpeed_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game.msg.MsgTurnbasedFight.SCTurnbasedSpeed.class, game.msg.MsgTurnbasedFight.SCTurnbasedSpeed.Builder.class);
      }

      // Construct using game.msg.MsgTurnbasedFight.SCTurnbasedSpeed.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        speed_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedSpeed_descriptor;
      }

      public game.msg.MsgTurnbasedFight.SCTurnbasedSpeed getDefaultInstanceForType() {
        return game.msg.MsgTurnbasedFight.SCTurnbasedSpeed.getDefaultInstance();
      }

      public game.msg.MsgTurnbasedFight.SCTurnbasedSpeed build() {
        game.msg.MsgTurnbasedFight.SCTurnbasedSpeed result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game.msg.MsgTurnbasedFight.SCTurnbasedSpeed buildPartial() {
        game.msg.MsgTurnbasedFight.SCTurnbasedSpeed result = new game.msg.MsgTurnbasedFight.SCTurnbasedSpeed(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.speed_ = speed_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game.msg.MsgTurnbasedFight.SCTurnbasedSpeed) {
          return mergeFrom((game.msg.MsgTurnbasedFight.SCTurnbasedSpeed)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game.msg.MsgTurnbasedFight.SCTurnbasedSpeed other) {
        if (other == game.msg.MsgTurnbasedFight.SCTurnbasedSpeed.getDefaultInstance()) return this;
        if (other.hasSpeed()) {
          setSpeed(other.getSpeed());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game.msg.MsgTurnbasedFight.SCTurnbasedSpeed parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game.msg.MsgTurnbasedFight.SCTurnbasedSpeed) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional float speed = 1;
      private float speed_ ;
      /**
       * <code>optional float speed = 1;</code>
       *
       * <pre>
       *速率
       * </pre>
       */
      public boolean hasSpeed() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional float speed = 1;</code>
       *
       * <pre>
       *速率
       * </pre>
       */
      public float getSpeed() {
        return speed_;
      }
      /**
       * <code>optional float speed = 1;</code>
       *
       * <pre>
       *速率
       * </pre>
       */
      public Builder setSpeed(float value) {
        bitField0_ |= 0x00000001;
        speed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float speed = 1;</code>
       *
       * <pre>
       *速率
       * </pre>
       */
      public Builder clearSpeed() {
        bitField0_ = (bitField0_ & ~0x00000001);
        speed_ = 0F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:game.msg.SCTurnbasedSpeed)
    }

    static {
      defaultInstance = new SCTurnbasedSpeed(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game.msg.SCTurnbasedSpeed)
  }

  public interface CSTurnbasedAutoFightOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional bool auto = 1;
    /**
     * <code>optional bool auto = 1;</code>
     *
     * <pre>
     *是否自动
     * </pre>
     */
    boolean hasAuto();
    /**
     * <code>optional bool auto = 1;</code>
     *
     * <pre>
     *是否自动
     * </pre>
     */
    boolean getAuto();
  }
  /**
   * Protobuf type {@code game.msg.CSTurnbasedAutoFight}
   *
   * <pre>
   *自动战斗
   * </pre>
   */
  public static final class CSTurnbasedAutoFight extends
      com.google.protobuf.GeneratedMessage
      implements CSTurnbasedAutoFightOrBuilder {
    // Use CSTurnbasedAutoFight.newBuilder() to construct.
    private CSTurnbasedAutoFight(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CSTurnbasedAutoFight(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CSTurnbasedAutoFight defaultInstance;
    public static CSTurnbasedAutoFight getDefaultInstance() {
      return defaultInstance;
    }

    public CSTurnbasedAutoFight getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CSTurnbasedAutoFight(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              auto_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game.msg.MsgTurnbasedFight.internal_static_game_msg_CSTurnbasedAutoFight_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game.msg.MsgTurnbasedFight.internal_static_game_msg_CSTurnbasedAutoFight_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game.msg.MsgTurnbasedFight.CSTurnbasedAutoFight.class, game.msg.MsgTurnbasedFight.CSTurnbasedAutoFight.Builder.class);
    }

    public static com.google.protobuf.Parser<CSTurnbasedAutoFight> PARSER =
        new com.google.protobuf.AbstractParser<CSTurnbasedAutoFight>() {
      public CSTurnbasedAutoFight parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CSTurnbasedAutoFight(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CSTurnbasedAutoFight> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional bool auto = 1;
    public static final int AUTO_FIELD_NUMBER = 1;
    private boolean auto_;
    /**
     * <code>optional bool auto = 1;</code>
     *
     * <pre>
     *是否自动
     * </pre>
     */
    public boolean hasAuto() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bool auto = 1;</code>
     *
     * <pre>
     *是否自动
     * </pre>
     */
    public boolean getAuto() {
      return auto_;
    }

    private void initFields() {
      auto_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, auto_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, auto_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game.msg.MsgTurnbasedFight.CSTurnbasedAutoFight parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedAutoFight parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedAutoFight parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedAutoFight parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedAutoFight parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedAutoFight parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedAutoFight parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedAutoFight parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedAutoFight parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedAutoFight parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game.msg.MsgTurnbasedFight.CSTurnbasedAutoFight prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game.msg.CSTurnbasedAutoFight}
     *
     * <pre>
     *自动战斗
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game.msg.MsgTurnbasedFight.CSTurnbasedAutoFightOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_CSTurnbasedAutoFight_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_CSTurnbasedAutoFight_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game.msg.MsgTurnbasedFight.CSTurnbasedAutoFight.class, game.msg.MsgTurnbasedFight.CSTurnbasedAutoFight.Builder.class);
      }

      // Construct using game.msg.MsgTurnbasedFight.CSTurnbasedAutoFight.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        auto_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_CSTurnbasedAutoFight_descriptor;
      }

      public game.msg.MsgTurnbasedFight.CSTurnbasedAutoFight getDefaultInstanceForType() {
        return game.msg.MsgTurnbasedFight.CSTurnbasedAutoFight.getDefaultInstance();
      }

      public game.msg.MsgTurnbasedFight.CSTurnbasedAutoFight build() {
        game.msg.MsgTurnbasedFight.CSTurnbasedAutoFight result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game.msg.MsgTurnbasedFight.CSTurnbasedAutoFight buildPartial() {
        game.msg.MsgTurnbasedFight.CSTurnbasedAutoFight result = new game.msg.MsgTurnbasedFight.CSTurnbasedAutoFight(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.auto_ = auto_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game.msg.MsgTurnbasedFight.CSTurnbasedAutoFight) {
          return mergeFrom((game.msg.MsgTurnbasedFight.CSTurnbasedAutoFight)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game.msg.MsgTurnbasedFight.CSTurnbasedAutoFight other) {
        if (other == game.msg.MsgTurnbasedFight.CSTurnbasedAutoFight.getDefaultInstance()) return this;
        if (other.hasAuto()) {
          setAuto(other.getAuto());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game.msg.MsgTurnbasedFight.CSTurnbasedAutoFight parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game.msg.MsgTurnbasedFight.CSTurnbasedAutoFight) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional bool auto = 1;
      private boolean auto_ ;
      /**
       * <code>optional bool auto = 1;</code>
       *
       * <pre>
       *是否自动
       * </pre>
       */
      public boolean hasAuto() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bool auto = 1;</code>
       *
       * <pre>
       *是否自动
       * </pre>
       */
      public boolean getAuto() {
        return auto_;
      }
      /**
       * <code>optional bool auto = 1;</code>
       *
       * <pre>
       *是否自动
       * </pre>
       */
      public Builder setAuto(boolean value) {
        bitField0_ |= 0x00000001;
        auto_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool auto = 1;</code>
       *
       * <pre>
       *是否自动
       * </pre>
       */
      public Builder clearAuto() {
        bitField0_ = (bitField0_ & ~0x00000001);
        auto_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:game.msg.CSTurnbasedAutoFight)
    }

    static {
      defaultInstance = new CSTurnbasedAutoFight(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game.msg.CSTurnbasedAutoFight)
  }

  public interface SCTurnbasedAutoFightOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional bool auto = 1;
    /**
     * <code>optional bool auto = 1;</code>
     *
     * <pre>
     *是否自动
     * </pre>
     */
    boolean hasAuto();
    /**
     * <code>optional bool auto = 1;</code>
     *
     * <pre>
     *是否自动
     * </pre>
     */
    boolean getAuto();
  }
  /**
   * Protobuf type {@code game.msg.SCTurnbasedAutoFight}
   *
   * <pre>
   *自动战斗
   * </pre>
   */
  public static final class SCTurnbasedAutoFight extends
      com.google.protobuf.GeneratedMessage
      implements SCTurnbasedAutoFightOrBuilder {
    // Use SCTurnbasedAutoFight.newBuilder() to construct.
    private SCTurnbasedAutoFight(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SCTurnbasedAutoFight(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SCTurnbasedAutoFight defaultInstance;
    public static SCTurnbasedAutoFight getDefaultInstance() {
      return defaultInstance;
    }

    public SCTurnbasedAutoFight getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SCTurnbasedAutoFight(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              auto_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedAutoFight_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedAutoFight_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game.msg.MsgTurnbasedFight.SCTurnbasedAutoFight.class, game.msg.MsgTurnbasedFight.SCTurnbasedAutoFight.Builder.class);
    }

    public static com.google.protobuf.Parser<SCTurnbasedAutoFight> PARSER =
        new com.google.protobuf.AbstractParser<SCTurnbasedAutoFight>() {
      public SCTurnbasedAutoFight parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SCTurnbasedAutoFight(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SCTurnbasedAutoFight> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional bool auto = 1;
    public static final int AUTO_FIELD_NUMBER = 1;
    private boolean auto_;
    /**
     * <code>optional bool auto = 1;</code>
     *
     * <pre>
     *是否自动
     * </pre>
     */
    public boolean hasAuto() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bool auto = 1;</code>
     *
     * <pre>
     *是否自动
     * </pre>
     */
    public boolean getAuto() {
      return auto_;
    }

    private void initFields() {
      auto_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, auto_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, auto_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game.msg.MsgTurnbasedFight.SCTurnbasedAutoFight parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedAutoFight parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedAutoFight parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedAutoFight parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedAutoFight parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedAutoFight parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedAutoFight parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedAutoFight parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedAutoFight parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedAutoFight parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game.msg.MsgTurnbasedFight.SCTurnbasedAutoFight prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game.msg.SCTurnbasedAutoFight}
     *
     * <pre>
     *自动战斗
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game.msg.MsgTurnbasedFight.SCTurnbasedAutoFightOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedAutoFight_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedAutoFight_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game.msg.MsgTurnbasedFight.SCTurnbasedAutoFight.class, game.msg.MsgTurnbasedFight.SCTurnbasedAutoFight.Builder.class);
      }

      // Construct using game.msg.MsgTurnbasedFight.SCTurnbasedAutoFight.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        auto_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedAutoFight_descriptor;
      }

      public game.msg.MsgTurnbasedFight.SCTurnbasedAutoFight getDefaultInstanceForType() {
        return game.msg.MsgTurnbasedFight.SCTurnbasedAutoFight.getDefaultInstance();
      }

      public game.msg.MsgTurnbasedFight.SCTurnbasedAutoFight build() {
        game.msg.MsgTurnbasedFight.SCTurnbasedAutoFight result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game.msg.MsgTurnbasedFight.SCTurnbasedAutoFight buildPartial() {
        game.msg.MsgTurnbasedFight.SCTurnbasedAutoFight result = new game.msg.MsgTurnbasedFight.SCTurnbasedAutoFight(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.auto_ = auto_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game.msg.MsgTurnbasedFight.SCTurnbasedAutoFight) {
          return mergeFrom((game.msg.MsgTurnbasedFight.SCTurnbasedAutoFight)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game.msg.MsgTurnbasedFight.SCTurnbasedAutoFight other) {
        if (other == game.msg.MsgTurnbasedFight.SCTurnbasedAutoFight.getDefaultInstance()) return this;
        if (other.hasAuto()) {
          setAuto(other.getAuto());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game.msg.MsgTurnbasedFight.SCTurnbasedAutoFight parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game.msg.MsgTurnbasedFight.SCTurnbasedAutoFight) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional bool auto = 1;
      private boolean auto_ ;
      /**
       * <code>optional bool auto = 1;</code>
       *
       * <pre>
       *是否自动
       * </pre>
       */
      public boolean hasAuto() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bool auto = 1;</code>
       *
       * <pre>
       *是否自动
       * </pre>
       */
      public boolean getAuto() {
        return auto_;
      }
      /**
       * <code>optional bool auto = 1;</code>
       *
       * <pre>
       *是否自动
       * </pre>
       */
      public Builder setAuto(boolean value) {
        bitField0_ |= 0x00000001;
        auto_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool auto = 1;</code>
       *
       * <pre>
       *是否自动
       * </pre>
       */
      public Builder clearAuto() {
        bitField0_ = (bitField0_ & ~0x00000001);
        auto_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:game.msg.SCTurnbasedAutoFight)
    }

    static {
      defaultInstance = new SCTurnbasedAutoFight(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game.msg.SCTurnbasedAutoFight)
  }

  public interface CSTurnbasedStartFightOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code game.msg.CSTurnbasedStartFight}
   *
   * <pre>
   *开始战斗
   * </pre>
   */
  public static final class CSTurnbasedStartFight extends
      com.google.protobuf.GeneratedMessage
      implements CSTurnbasedStartFightOrBuilder {
    // Use CSTurnbasedStartFight.newBuilder() to construct.
    private CSTurnbasedStartFight(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CSTurnbasedStartFight(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CSTurnbasedStartFight defaultInstance;
    public static CSTurnbasedStartFight getDefaultInstance() {
      return defaultInstance;
    }

    public CSTurnbasedStartFight getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CSTurnbasedStartFight(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game.msg.MsgTurnbasedFight.internal_static_game_msg_CSTurnbasedStartFight_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game.msg.MsgTurnbasedFight.internal_static_game_msg_CSTurnbasedStartFight_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game.msg.MsgTurnbasedFight.CSTurnbasedStartFight.class, game.msg.MsgTurnbasedFight.CSTurnbasedStartFight.Builder.class);
    }

    public static com.google.protobuf.Parser<CSTurnbasedStartFight> PARSER =
        new com.google.protobuf.AbstractParser<CSTurnbasedStartFight>() {
      public CSTurnbasedStartFight parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CSTurnbasedStartFight(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CSTurnbasedStartFight> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game.msg.MsgTurnbasedFight.CSTurnbasedStartFight parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedStartFight parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedStartFight parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedStartFight parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedStartFight parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedStartFight parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedStartFight parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedStartFight parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedStartFight parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedStartFight parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game.msg.MsgTurnbasedFight.CSTurnbasedStartFight prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game.msg.CSTurnbasedStartFight}
     *
     * <pre>
     *开始战斗
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game.msg.MsgTurnbasedFight.CSTurnbasedStartFightOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_CSTurnbasedStartFight_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_CSTurnbasedStartFight_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game.msg.MsgTurnbasedFight.CSTurnbasedStartFight.class, game.msg.MsgTurnbasedFight.CSTurnbasedStartFight.Builder.class);
      }

      // Construct using game.msg.MsgTurnbasedFight.CSTurnbasedStartFight.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_CSTurnbasedStartFight_descriptor;
      }

      public game.msg.MsgTurnbasedFight.CSTurnbasedStartFight getDefaultInstanceForType() {
        return game.msg.MsgTurnbasedFight.CSTurnbasedStartFight.getDefaultInstance();
      }

      public game.msg.MsgTurnbasedFight.CSTurnbasedStartFight build() {
        game.msg.MsgTurnbasedFight.CSTurnbasedStartFight result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game.msg.MsgTurnbasedFight.CSTurnbasedStartFight buildPartial() {
        game.msg.MsgTurnbasedFight.CSTurnbasedStartFight result = new game.msg.MsgTurnbasedFight.CSTurnbasedStartFight(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game.msg.MsgTurnbasedFight.CSTurnbasedStartFight) {
          return mergeFrom((game.msg.MsgTurnbasedFight.CSTurnbasedStartFight)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game.msg.MsgTurnbasedFight.CSTurnbasedStartFight other) {
        if (other == game.msg.MsgTurnbasedFight.CSTurnbasedStartFight.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game.msg.MsgTurnbasedFight.CSTurnbasedStartFight parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game.msg.MsgTurnbasedFight.CSTurnbasedStartFight) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:game.msg.CSTurnbasedStartFight)
    }

    static {
      defaultInstance = new CSTurnbasedStartFight(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game.msg.CSTurnbasedStartFight)
  }

  public interface CSTurnbasedQuickFightOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code game.msg.CSTurnbasedQuickFight}
   *
   * <pre>
   *跳过战斗
   * </pre>
   */
  public static final class CSTurnbasedQuickFight extends
      com.google.protobuf.GeneratedMessage
      implements CSTurnbasedQuickFightOrBuilder {
    // Use CSTurnbasedQuickFight.newBuilder() to construct.
    private CSTurnbasedQuickFight(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CSTurnbasedQuickFight(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CSTurnbasedQuickFight defaultInstance;
    public static CSTurnbasedQuickFight getDefaultInstance() {
      return defaultInstance;
    }

    public CSTurnbasedQuickFight getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CSTurnbasedQuickFight(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game.msg.MsgTurnbasedFight.internal_static_game_msg_CSTurnbasedQuickFight_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game.msg.MsgTurnbasedFight.internal_static_game_msg_CSTurnbasedQuickFight_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game.msg.MsgTurnbasedFight.CSTurnbasedQuickFight.class, game.msg.MsgTurnbasedFight.CSTurnbasedQuickFight.Builder.class);
    }

    public static com.google.protobuf.Parser<CSTurnbasedQuickFight> PARSER =
        new com.google.protobuf.AbstractParser<CSTurnbasedQuickFight>() {
      public CSTurnbasedQuickFight parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CSTurnbasedQuickFight(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CSTurnbasedQuickFight> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game.msg.MsgTurnbasedFight.CSTurnbasedQuickFight parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedQuickFight parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedQuickFight parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedQuickFight parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedQuickFight parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedQuickFight parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedQuickFight parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedQuickFight parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedQuickFight parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedQuickFight parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game.msg.MsgTurnbasedFight.CSTurnbasedQuickFight prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game.msg.CSTurnbasedQuickFight}
     *
     * <pre>
     *跳过战斗
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game.msg.MsgTurnbasedFight.CSTurnbasedQuickFightOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_CSTurnbasedQuickFight_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_CSTurnbasedQuickFight_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game.msg.MsgTurnbasedFight.CSTurnbasedQuickFight.class, game.msg.MsgTurnbasedFight.CSTurnbasedQuickFight.Builder.class);
      }

      // Construct using game.msg.MsgTurnbasedFight.CSTurnbasedQuickFight.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_CSTurnbasedQuickFight_descriptor;
      }

      public game.msg.MsgTurnbasedFight.CSTurnbasedQuickFight getDefaultInstanceForType() {
        return game.msg.MsgTurnbasedFight.CSTurnbasedQuickFight.getDefaultInstance();
      }

      public game.msg.MsgTurnbasedFight.CSTurnbasedQuickFight build() {
        game.msg.MsgTurnbasedFight.CSTurnbasedQuickFight result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game.msg.MsgTurnbasedFight.CSTurnbasedQuickFight buildPartial() {
        game.msg.MsgTurnbasedFight.CSTurnbasedQuickFight result = new game.msg.MsgTurnbasedFight.CSTurnbasedQuickFight(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game.msg.MsgTurnbasedFight.CSTurnbasedQuickFight) {
          return mergeFrom((game.msg.MsgTurnbasedFight.CSTurnbasedQuickFight)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game.msg.MsgTurnbasedFight.CSTurnbasedQuickFight other) {
        if (other == game.msg.MsgTurnbasedFight.CSTurnbasedQuickFight.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game.msg.MsgTurnbasedFight.CSTurnbasedQuickFight parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game.msg.MsgTurnbasedFight.CSTurnbasedQuickFight) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:game.msg.CSTurnbasedQuickFight)
    }

    static {
      defaultInstance = new CSTurnbasedQuickFight(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game.msg.CSTurnbasedQuickFight)
  }

  public interface SCTurnbasedFinishOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .game.msg.ETeamType winTeam = 1;
    /**
     * <code>optional .game.msg.ETeamType winTeam = 1;</code>
     *
     * <pre>
     *胜利战队
     * </pre>
     */
    boolean hasWinTeam();
    /**
     * <code>optional .game.msg.ETeamType winTeam = 1;</code>
     *
     * <pre>
     *胜利战队
     * </pre>
     */
    game.msg.Define.ETeamType getWinTeam();

    // repeated .game.msg.DTurnbasedFinishObject objList = 2;
    /**
     * <code>repeated .game.msg.DTurnbasedFinishObject objList = 2;</code>
     *
     * <pre>
     *结束时的战斗者数据列表
     * </pre>
     */
    java.util.List<game.msg.Define.DTurnbasedFinishObject> 
        getObjListList();
    /**
     * <code>repeated .game.msg.DTurnbasedFinishObject objList = 2;</code>
     *
     * <pre>
     *结束时的战斗者数据列表
     * </pre>
     */
    game.msg.Define.DTurnbasedFinishObject getObjList(int index);
    /**
     * <code>repeated .game.msg.DTurnbasedFinishObject objList = 2;</code>
     *
     * <pre>
     *结束时的战斗者数据列表
     * </pre>
     */
    int getObjListCount();
    /**
     * <code>repeated .game.msg.DTurnbasedFinishObject objList = 2;</code>
     *
     * <pre>
     *结束时的战斗者数据列表
     * </pre>
     */
    java.util.List<? extends game.msg.Define.DTurnbasedFinishObjectOrBuilder> 
        getObjListOrBuilderList();
    /**
     * <code>repeated .game.msg.DTurnbasedFinishObject objList = 2;</code>
     *
     * <pre>
     *结束时的战斗者数据列表
     * </pre>
     */
    game.msg.Define.DTurnbasedFinishObjectOrBuilder getObjListOrBuilder(
        int index);

    // optional .game.msg.ECrossFightType fightType = 3;
    /**
     * <code>optional .game.msg.ECrossFightType fightType = 3;</code>
     *
     * <pre>
     *战斗类型(不同的战斗类型，以下的数据不一样)
     * </pre>
     */
    boolean hasFightType();
    /**
     * <code>optional .game.msg.ECrossFightType fightType = 3;</code>
     *
     * <pre>
     *战斗类型(不同的战斗类型，以下的数据不一样)
     * </pre>
     */
    game.msg.Define.ECrossFightType getFightType();

    // repeated int32 star = 4;
    /**
     * <code>repeated int32 star = 4;</code>
     *
     * <pre>
     *得星数
     * </pre>
     */
    java.util.List<java.lang.Integer> getStarList();
    /**
     * <code>repeated int32 star = 4;</code>
     *
     * <pre>
     *得星数
     * </pre>
     */
    int getStarCount();
    /**
     * <code>repeated int32 star = 4;</code>
     *
     * <pre>
     *得星数
     * </pre>
     */
    int getStar(int index);

    // repeated int32 harm = 5;
    /**
     * <code>repeated int32 harm = 5;</code>
     *
     * <pre>
     *本次战斗对每个位置造成的伤害(如：0,111,0...)
     * </pre>
     */
    java.util.List<java.lang.Integer> getHarmList();
    /**
     * <code>repeated int32 harm = 5;</code>
     *
     * <pre>
     *本次战斗对每个位置造成的伤害(如：0,111,0...)
     * </pre>
     */
    int getHarmCount();
    /**
     * <code>repeated int32 harm = 5;</code>
     *
     * <pre>
     *本次战斗对每个位置造成的伤害(如：0,111,0...)
     * </pre>
     */
    int getHarm(int index);

    // repeated int32 param32 = 6;
    /**
     * <code>repeated int32 param32 = 6;</code>
     *
     * <pre>
     *int参数值
     * </pre>
     */
    java.util.List<java.lang.Integer> getParam32List();
    /**
     * <code>repeated int32 param32 = 6;</code>
     *
     * <pre>
     *int参数值
     * </pre>
     */
    int getParam32Count();
    /**
     * <code>repeated int32 param32 = 6;</code>
     *
     * <pre>
     *int参数值
     * </pre>
     */
    int getParam32(int index);

    // repeated int64 param64 = 7;
    /**
     * <code>repeated int64 param64 = 7;</code>
     *
     * <pre>
     *long参数值
     * </pre>
     */
    java.util.List<java.lang.Long> getParam64List();
    /**
     * <code>repeated int64 param64 = 7;</code>
     *
     * <pre>
     *long参数值
     * </pre>
     */
    int getParam64Count();
    /**
     * <code>repeated int64 param64 = 7;</code>
     *
     * <pre>
     *long参数值
     * </pre>
     */
    long getParam64(int index);

    // optional bool isCombatEnd = 8;
    /**
     * <code>optional bool isCombatEnd = 8;</code>
     *
     * <pre>
     *是否完整的战斗结束（false即中途结束）
     * </pre>
     */
    boolean hasIsCombatEnd();
    /**
     * <code>optional bool isCombatEnd = 8;</code>
     *
     * <pre>
     *是否完整的战斗结束（false即中途结束）
     * </pre>
     */
    boolean getIsCombatEnd();
  }
  /**
   * Protobuf type {@code game.msg.SCTurnbasedFinish}
   *
   * <pre>
   *战斗结束
   * </pre>
   */
  public static final class SCTurnbasedFinish extends
      com.google.protobuf.GeneratedMessage
      implements SCTurnbasedFinishOrBuilder {
    // Use SCTurnbasedFinish.newBuilder() to construct.
    private SCTurnbasedFinish(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SCTurnbasedFinish(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SCTurnbasedFinish defaultInstance;
    public static SCTurnbasedFinish getDefaultInstance() {
      return defaultInstance;
    }

    public SCTurnbasedFinish getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SCTurnbasedFinish(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              game.msg.Define.ETeamType value = game.msg.Define.ETeamType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                winTeam_ = value;
              }
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                objList_ = new java.util.ArrayList<game.msg.Define.DTurnbasedFinishObject>();
                mutable_bitField0_ |= 0x00000002;
              }
              objList_.add(input.readMessage(game.msg.Define.DTurnbasedFinishObject.PARSER, extensionRegistry));
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              game.msg.Define.ECrossFightType value = game.msg.Define.ECrossFightType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                fightType_ = value;
              }
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                star_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              star_.add(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                star_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                star_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                harm_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              harm_.add(input.readInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                harm_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                harm_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                param32_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              param32_.add(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                param32_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                param32_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                param64_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000040;
              }
              param64_.add(input.readInt64());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                param64_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                param64_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 64: {
              bitField0_ |= 0x00000004;
              isCombatEnd_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          objList_ = java.util.Collections.unmodifiableList(objList_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          star_ = java.util.Collections.unmodifiableList(star_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          harm_ = java.util.Collections.unmodifiableList(harm_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          param32_ = java.util.Collections.unmodifiableList(param32_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          param64_ = java.util.Collections.unmodifiableList(param64_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedFinish_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedFinish_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game.msg.MsgTurnbasedFight.SCTurnbasedFinish.class, game.msg.MsgTurnbasedFight.SCTurnbasedFinish.Builder.class);
    }

    public static com.google.protobuf.Parser<SCTurnbasedFinish> PARSER =
        new com.google.protobuf.AbstractParser<SCTurnbasedFinish>() {
      public SCTurnbasedFinish parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SCTurnbasedFinish(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SCTurnbasedFinish> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .game.msg.ETeamType winTeam = 1;
    public static final int WINTEAM_FIELD_NUMBER = 1;
    private game.msg.Define.ETeamType winTeam_;
    /**
     * <code>optional .game.msg.ETeamType winTeam = 1;</code>
     *
     * <pre>
     *胜利战队
     * </pre>
     */
    public boolean hasWinTeam() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .game.msg.ETeamType winTeam = 1;</code>
     *
     * <pre>
     *胜利战队
     * </pre>
     */
    public game.msg.Define.ETeamType getWinTeam() {
      return winTeam_;
    }

    // repeated .game.msg.DTurnbasedFinishObject objList = 2;
    public static final int OBJLIST_FIELD_NUMBER = 2;
    private java.util.List<game.msg.Define.DTurnbasedFinishObject> objList_;
    /**
     * <code>repeated .game.msg.DTurnbasedFinishObject objList = 2;</code>
     *
     * <pre>
     *结束时的战斗者数据列表
     * </pre>
     */
    public java.util.List<game.msg.Define.DTurnbasedFinishObject> getObjListList() {
      return objList_;
    }
    /**
     * <code>repeated .game.msg.DTurnbasedFinishObject objList = 2;</code>
     *
     * <pre>
     *结束时的战斗者数据列表
     * </pre>
     */
    public java.util.List<? extends game.msg.Define.DTurnbasedFinishObjectOrBuilder> 
        getObjListOrBuilderList() {
      return objList_;
    }
    /**
     * <code>repeated .game.msg.DTurnbasedFinishObject objList = 2;</code>
     *
     * <pre>
     *结束时的战斗者数据列表
     * </pre>
     */
    public int getObjListCount() {
      return objList_.size();
    }
    /**
     * <code>repeated .game.msg.DTurnbasedFinishObject objList = 2;</code>
     *
     * <pre>
     *结束时的战斗者数据列表
     * </pre>
     */
    public game.msg.Define.DTurnbasedFinishObject getObjList(int index) {
      return objList_.get(index);
    }
    /**
     * <code>repeated .game.msg.DTurnbasedFinishObject objList = 2;</code>
     *
     * <pre>
     *结束时的战斗者数据列表
     * </pre>
     */
    public game.msg.Define.DTurnbasedFinishObjectOrBuilder getObjListOrBuilder(
        int index) {
      return objList_.get(index);
    }

    // optional .game.msg.ECrossFightType fightType = 3;
    public static final int FIGHTTYPE_FIELD_NUMBER = 3;
    private game.msg.Define.ECrossFightType fightType_;
    /**
     * <code>optional .game.msg.ECrossFightType fightType = 3;</code>
     *
     * <pre>
     *战斗类型(不同的战斗类型，以下的数据不一样)
     * </pre>
     */
    public boolean hasFightType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .game.msg.ECrossFightType fightType = 3;</code>
     *
     * <pre>
     *战斗类型(不同的战斗类型，以下的数据不一样)
     * </pre>
     */
    public game.msg.Define.ECrossFightType getFightType() {
      return fightType_;
    }

    // repeated int32 star = 4;
    public static final int STAR_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> star_;
    /**
     * <code>repeated int32 star = 4;</code>
     *
     * <pre>
     *得星数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getStarList() {
      return star_;
    }
    /**
     * <code>repeated int32 star = 4;</code>
     *
     * <pre>
     *得星数
     * </pre>
     */
    public int getStarCount() {
      return star_.size();
    }
    /**
     * <code>repeated int32 star = 4;</code>
     *
     * <pre>
     *得星数
     * </pre>
     */
    public int getStar(int index) {
      return star_.get(index);
    }

    // repeated int32 harm = 5;
    public static final int HARM_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> harm_;
    /**
     * <code>repeated int32 harm = 5;</code>
     *
     * <pre>
     *本次战斗对每个位置造成的伤害(如：0,111,0...)
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getHarmList() {
      return harm_;
    }
    /**
     * <code>repeated int32 harm = 5;</code>
     *
     * <pre>
     *本次战斗对每个位置造成的伤害(如：0,111,0...)
     * </pre>
     */
    public int getHarmCount() {
      return harm_.size();
    }
    /**
     * <code>repeated int32 harm = 5;</code>
     *
     * <pre>
     *本次战斗对每个位置造成的伤害(如：0,111,0...)
     * </pre>
     */
    public int getHarm(int index) {
      return harm_.get(index);
    }

    // repeated int32 param32 = 6;
    public static final int PARAM32_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> param32_;
    /**
     * <code>repeated int32 param32 = 6;</code>
     *
     * <pre>
     *int参数值
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getParam32List() {
      return param32_;
    }
    /**
     * <code>repeated int32 param32 = 6;</code>
     *
     * <pre>
     *int参数值
     * </pre>
     */
    public int getParam32Count() {
      return param32_.size();
    }
    /**
     * <code>repeated int32 param32 = 6;</code>
     *
     * <pre>
     *int参数值
     * </pre>
     */
    public int getParam32(int index) {
      return param32_.get(index);
    }

    // repeated int64 param64 = 7;
    public static final int PARAM64_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Long> param64_;
    /**
     * <code>repeated int64 param64 = 7;</code>
     *
     * <pre>
     *long参数值
     * </pre>
     */
    public java.util.List<java.lang.Long>
        getParam64List() {
      return param64_;
    }
    /**
     * <code>repeated int64 param64 = 7;</code>
     *
     * <pre>
     *long参数值
     * </pre>
     */
    public int getParam64Count() {
      return param64_.size();
    }
    /**
     * <code>repeated int64 param64 = 7;</code>
     *
     * <pre>
     *long参数值
     * </pre>
     */
    public long getParam64(int index) {
      return param64_.get(index);
    }

    // optional bool isCombatEnd = 8;
    public static final int ISCOMBATEND_FIELD_NUMBER = 8;
    private boolean isCombatEnd_;
    /**
     * <code>optional bool isCombatEnd = 8;</code>
     *
     * <pre>
     *是否完整的战斗结束（false即中途结束）
     * </pre>
     */
    public boolean hasIsCombatEnd() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool isCombatEnd = 8;</code>
     *
     * <pre>
     *是否完整的战斗结束（false即中途结束）
     * </pre>
     */
    public boolean getIsCombatEnd() {
      return isCombatEnd_;
    }

    private void initFields() {
      winTeam_ = game.msg.Define.ETeamType.Team0;
      objList_ = java.util.Collections.emptyList();
      fightType_ = game.msg.Define.ECrossFightType.FIGHT_INSTANCE;
      star_ = java.util.Collections.emptyList();
      harm_ = java.util.Collections.emptyList();
      param32_ = java.util.Collections.emptyList();
      param64_ = java.util.Collections.emptyList();
      isCombatEnd_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, winTeam_.getNumber());
      }
      for (int i = 0; i < objList_.size(); i++) {
        output.writeMessage(2, objList_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(3, fightType_.getNumber());
      }
      for (int i = 0; i < star_.size(); i++) {
        output.writeInt32(4, star_.get(i));
      }
      for (int i = 0; i < harm_.size(); i++) {
        output.writeInt32(5, harm_.get(i));
      }
      for (int i = 0; i < param32_.size(); i++) {
        output.writeInt32(6, param32_.get(i));
      }
      for (int i = 0; i < param64_.size(); i++) {
        output.writeInt64(7, param64_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(8, isCombatEnd_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, winTeam_.getNumber());
      }
      for (int i = 0; i < objList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, objList_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, fightType_.getNumber());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < star_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(star_.get(i));
        }
        size += dataSize;
        size += 1 * getStarList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < harm_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(harm_.get(i));
        }
        size += dataSize;
        size += 1 * getHarmList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < param32_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(param32_.get(i));
        }
        size += dataSize;
        size += 1 * getParam32List().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < param64_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(param64_.get(i));
        }
        size += dataSize;
        size += 1 * getParam64List().size();
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, isCombatEnd_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game.msg.MsgTurnbasedFight.SCTurnbasedFinish parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedFinish parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedFinish parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedFinish parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedFinish parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedFinish parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedFinish parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedFinish parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedFinish parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedFinish parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game.msg.MsgTurnbasedFight.SCTurnbasedFinish prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game.msg.SCTurnbasedFinish}
     *
     * <pre>
     *战斗结束
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game.msg.MsgTurnbasedFight.SCTurnbasedFinishOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedFinish_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedFinish_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game.msg.MsgTurnbasedFight.SCTurnbasedFinish.class, game.msg.MsgTurnbasedFight.SCTurnbasedFinish.Builder.class);
      }

      // Construct using game.msg.MsgTurnbasedFight.SCTurnbasedFinish.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getObjListFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        winTeam_ = game.msg.Define.ETeamType.Team0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (objListBuilder_ == null) {
          objList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          objListBuilder_.clear();
        }
        fightType_ = game.msg.Define.ECrossFightType.FIGHT_INSTANCE;
        bitField0_ = (bitField0_ & ~0x00000004);
        star_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        harm_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        param32_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        param64_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        isCombatEnd_ = false;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedFinish_descriptor;
      }

      public game.msg.MsgTurnbasedFight.SCTurnbasedFinish getDefaultInstanceForType() {
        return game.msg.MsgTurnbasedFight.SCTurnbasedFinish.getDefaultInstance();
      }

      public game.msg.MsgTurnbasedFight.SCTurnbasedFinish build() {
        game.msg.MsgTurnbasedFight.SCTurnbasedFinish result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game.msg.MsgTurnbasedFight.SCTurnbasedFinish buildPartial() {
        game.msg.MsgTurnbasedFight.SCTurnbasedFinish result = new game.msg.MsgTurnbasedFight.SCTurnbasedFinish(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.winTeam_ = winTeam_;
        if (objListBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            objList_ = java.util.Collections.unmodifiableList(objList_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.objList_ = objList_;
        } else {
          result.objList_ = objListBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.fightType_ = fightType_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          star_ = java.util.Collections.unmodifiableList(star_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.star_ = star_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          harm_ = java.util.Collections.unmodifiableList(harm_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.harm_ = harm_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          param32_ = java.util.Collections.unmodifiableList(param32_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.param32_ = param32_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          param64_ = java.util.Collections.unmodifiableList(param64_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.param64_ = param64_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000004;
        }
        result.isCombatEnd_ = isCombatEnd_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game.msg.MsgTurnbasedFight.SCTurnbasedFinish) {
          return mergeFrom((game.msg.MsgTurnbasedFight.SCTurnbasedFinish)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game.msg.MsgTurnbasedFight.SCTurnbasedFinish other) {
        if (other == game.msg.MsgTurnbasedFight.SCTurnbasedFinish.getDefaultInstance()) return this;
        if (other.hasWinTeam()) {
          setWinTeam(other.getWinTeam());
        }
        if (objListBuilder_ == null) {
          if (!other.objList_.isEmpty()) {
            if (objList_.isEmpty()) {
              objList_ = other.objList_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureObjListIsMutable();
              objList_.addAll(other.objList_);
            }
            onChanged();
          }
        } else {
          if (!other.objList_.isEmpty()) {
            if (objListBuilder_.isEmpty()) {
              objListBuilder_.dispose();
              objListBuilder_ = null;
              objList_ = other.objList_;
              bitField0_ = (bitField0_ & ~0x00000002);
              objListBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getObjListFieldBuilder() : null;
            } else {
              objListBuilder_.addAllMessages(other.objList_);
            }
          }
        }
        if (other.hasFightType()) {
          setFightType(other.getFightType());
        }
        if (!other.star_.isEmpty()) {
          if (star_.isEmpty()) {
            star_ = other.star_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureStarIsMutable();
            star_.addAll(other.star_);
          }
          onChanged();
        }
        if (!other.harm_.isEmpty()) {
          if (harm_.isEmpty()) {
            harm_ = other.harm_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureHarmIsMutable();
            harm_.addAll(other.harm_);
          }
          onChanged();
        }
        if (!other.param32_.isEmpty()) {
          if (param32_.isEmpty()) {
            param32_ = other.param32_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureParam32IsMutable();
            param32_.addAll(other.param32_);
          }
          onChanged();
        }
        if (!other.param64_.isEmpty()) {
          if (param64_.isEmpty()) {
            param64_ = other.param64_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureParam64IsMutable();
            param64_.addAll(other.param64_);
          }
          onChanged();
        }
        if (other.hasIsCombatEnd()) {
          setIsCombatEnd(other.getIsCombatEnd());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game.msg.MsgTurnbasedFight.SCTurnbasedFinish parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game.msg.MsgTurnbasedFight.SCTurnbasedFinish) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .game.msg.ETeamType winTeam = 1;
      private game.msg.Define.ETeamType winTeam_ = game.msg.Define.ETeamType.Team0;
      /**
       * <code>optional .game.msg.ETeamType winTeam = 1;</code>
       *
       * <pre>
       *胜利战队
       * </pre>
       */
      public boolean hasWinTeam() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .game.msg.ETeamType winTeam = 1;</code>
       *
       * <pre>
       *胜利战队
       * </pre>
       */
      public game.msg.Define.ETeamType getWinTeam() {
        return winTeam_;
      }
      /**
       * <code>optional .game.msg.ETeamType winTeam = 1;</code>
       *
       * <pre>
       *胜利战队
       * </pre>
       */
      public Builder setWinTeam(game.msg.Define.ETeamType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        winTeam_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .game.msg.ETeamType winTeam = 1;</code>
       *
       * <pre>
       *胜利战队
       * </pre>
       */
      public Builder clearWinTeam() {
        bitField0_ = (bitField0_ & ~0x00000001);
        winTeam_ = game.msg.Define.ETeamType.Team0;
        onChanged();
        return this;
      }

      // repeated .game.msg.DTurnbasedFinishObject objList = 2;
      private java.util.List<game.msg.Define.DTurnbasedFinishObject> objList_ =
        java.util.Collections.emptyList();
      private void ensureObjListIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          objList_ = new java.util.ArrayList<game.msg.Define.DTurnbasedFinishObject>(objList_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          game.msg.Define.DTurnbasedFinishObject, game.msg.Define.DTurnbasedFinishObject.Builder, game.msg.Define.DTurnbasedFinishObjectOrBuilder> objListBuilder_;

      /**
       * <code>repeated .game.msg.DTurnbasedFinishObject objList = 2;</code>
       *
       * <pre>
       *结束时的战斗者数据列表
       * </pre>
       */
      public java.util.List<game.msg.Define.DTurnbasedFinishObject> getObjListList() {
        if (objListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(objList_);
        } else {
          return objListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .game.msg.DTurnbasedFinishObject objList = 2;</code>
       *
       * <pre>
       *结束时的战斗者数据列表
       * </pre>
       */
      public int getObjListCount() {
        if (objListBuilder_ == null) {
          return objList_.size();
        } else {
          return objListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .game.msg.DTurnbasedFinishObject objList = 2;</code>
       *
       * <pre>
       *结束时的战斗者数据列表
       * </pre>
       */
      public game.msg.Define.DTurnbasedFinishObject getObjList(int index) {
        if (objListBuilder_ == null) {
          return objList_.get(index);
        } else {
          return objListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .game.msg.DTurnbasedFinishObject objList = 2;</code>
       *
       * <pre>
       *结束时的战斗者数据列表
       * </pre>
       */
      public Builder setObjList(
          int index, game.msg.Define.DTurnbasedFinishObject value) {
        if (objListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureObjListIsMutable();
          objList_.set(index, value);
          onChanged();
        } else {
          objListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DTurnbasedFinishObject objList = 2;</code>
       *
       * <pre>
       *结束时的战斗者数据列表
       * </pre>
       */
      public Builder setObjList(
          int index, game.msg.Define.DTurnbasedFinishObject.Builder builderForValue) {
        if (objListBuilder_ == null) {
          ensureObjListIsMutable();
          objList_.set(index, builderForValue.build());
          onChanged();
        } else {
          objListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DTurnbasedFinishObject objList = 2;</code>
       *
       * <pre>
       *结束时的战斗者数据列表
       * </pre>
       */
      public Builder addObjList(game.msg.Define.DTurnbasedFinishObject value) {
        if (objListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureObjListIsMutable();
          objList_.add(value);
          onChanged();
        } else {
          objListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DTurnbasedFinishObject objList = 2;</code>
       *
       * <pre>
       *结束时的战斗者数据列表
       * </pre>
       */
      public Builder addObjList(
          int index, game.msg.Define.DTurnbasedFinishObject value) {
        if (objListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureObjListIsMutable();
          objList_.add(index, value);
          onChanged();
        } else {
          objListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DTurnbasedFinishObject objList = 2;</code>
       *
       * <pre>
       *结束时的战斗者数据列表
       * </pre>
       */
      public Builder addObjList(
          game.msg.Define.DTurnbasedFinishObject.Builder builderForValue) {
        if (objListBuilder_ == null) {
          ensureObjListIsMutable();
          objList_.add(builderForValue.build());
          onChanged();
        } else {
          objListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DTurnbasedFinishObject objList = 2;</code>
       *
       * <pre>
       *结束时的战斗者数据列表
       * </pre>
       */
      public Builder addObjList(
          int index, game.msg.Define.DTurnbasedFinishObject.Builder builderForValue) {
        if (objListBuilder_ == null) {
          ensureObjListIsMutable();
          objList_.add(index, builderForValue.build());
          onChanged();
        } else {
          objListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DTurnbasedFinishObject objList = 2;</code>
       *
       * <pre>
       *结束时的战斗者数据列表
       * </pre>
       */
      public Builder addAllObjList(
          java.lang.Iterable<? extends game.msg.Define.DTurnbasedFinishObject> values) {
        if (objListBuilder_ == null) {
          ensureObjListIsMutable();
          super.addAll(values, objList_);
          onChanged();
        } else {
          objListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DTurnbasedFinishObject objList = 2;</code>
       *
       * <pre>
       *结束时的战斗者数据列表
       * </pre>
       */
      public Builder clearObjList() {
        if (objListBuilder_ == null) {
          objList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          objListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DTurnbasedFinishObject objList = 2;</code>
       *
       * <pre>
       *结束时的战斗者数据列表
       * </pre>
       */
      public Builder removeObjList(int index) {
        if (objListBuilder_ == null) {
          ensureObjListIsMutable();
          objList_.remove(index);
          onChanged();
        } else {
          objListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .game.msg.DTurnbasedFinishObject objList = 2;</code>
       *
       * <pre>
       *结束时的战斗者数据列表
       * </pre>
       */
      public game.msg.Define.DTurnbasedFinishObject.Builder getObjListBuilder(
          int index) {
        return getObjListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .game.msg.DTurnbasedFinishObject objList = 2;</code>
       *
       * <pre>
       *结束时的战斗者数据列表
       * </pre>
       */
      public game.msg.Define.DTurnbasedFinishObjectOrBuilder getObjListOrBuilder(
          int index) {
        if (objListBuilder_ == null) {
          return objList_.get(index);  } else {
          return objListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .game.msg.DTurnbasedFinishObject objList = 2;</code>
       *
       * <pre>
       *结束时的战斗者数据列表
       * </pre>
       */
      public java.util.List<? extends game.msg.Define.DTurnbasedFinishObjectOrBuilder> 
           getObjListOrBuilderList() {
        if (objListBuilder_ != null) {
          return objListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(objList_);
        }
      }
      /**
       * <code>repeated .game.msg.DTurnbasedFinishObject objList = 2;</code>
       *
       * <pre>
       *结束时的战斗者数据列表
       * </pre>
       */
      public game.msg.Define.DTurnbasedFinishObject.Builder addObjListBuilder() {
        return getObjListFieldBuilder().addBuilder(
            game.msg.Define.DTurnbasedFinishObject.getDefaultInstance());
      }
      /**
       * <code>repeated .game.msg.DTurnbasedFinishObject objList = 2;</code>
       *
       * <pre>
       *结束时的战斗者数据列表
       * </pre>
       */
      public game.msg.Define.DTurnbasedFinishObject.Builder addObjListBuilder(
          int index) {
        return getObjListFieldBuilder().addBuilder(
            index, game.msg.Define.DTurnbasedFinishObject.getDefaultInstance());
      }
      /**
       * <code>repeated .game.msg.DTurnbasedFinishObject objList = 2;</code>
       *
       * <pre>
       *结束时的战斗者数据列表
       * </pre>
       */
      public java.util.List<game.msg.Define.DTurnbasedFinishObject.Builder> 
           getObjListBuilderList() {
        return getObjListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          game.msg.Define.DTurnbasedFinishObject, game.msg.Define.DTurnbasedFinishObject.Builder, game.msg.Define.DTurnbasedFinishObjectOrBuilder> 
          getObjListFieldBuilder() {
        if (objListBuilder_ == null) {
          objListBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              game.msg.Define.DTurnbasedFinishObject, game.msg.Define.DTurnbasedFinishObject.Builder, game.msg.Define.DTurnbasedFinishObjectOrBuilder>(
                  objList_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          objList_ = null;
        }
        return objListBuilder_;
      }

      // optional .game.msg.ECrossFightType fightType = 3;
      private game.msg.Define.ECrossFightType fightType_ = game.msg.Define.ECrossFightType.FIGHT_INSTANCE;
      /**
       * <code>optional .game.msg.ECrossFightType fightType = 3;</code>
       *
       * <pre>
       *战斗类型(不同的战斗类型，以下的数据不一样)
       * </pre>
       */
      public boolean hasFightType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .game.msg.ECrossFightType fightType = 3;</code>
       *
       * <pre>
       *战斗类型(不同的战斗类型，以下的数据不一样)
       * </pre>
       */
      public game.msg.Define.ECrossFightType getFightType() {
        return fightType_;
      }
      /**
       * <code>optional .game.msg.ECrossFightType fightType = 3;</code>
       *
       * <pre>
       *战斗类型(不同的战斗类型，以下的数据不一样)
       * </pre>
       */
      public Builder setFightType(game.msg.Define.ECrossFightType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        fightType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .game.msg.ECrossFightType fightType = 3;</code>
       *
       * <pre>
       *战斗类型(不同的战斗类型，以下的数据不一样)
       * </pre>
       */
      public Builder clearFightType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        fightType_ = game.msg.Define.ECrossFightType.FIGHT_INSTANCE;
        onChanged();
        return this;
      }

      // repeated int32 star = 4;
      private java.util.List<java.lang.Integer> star_ = java.util.Collections.emptyList();
      private void ensureStarIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          star_ = new java.util.ArrayList<java.lang.Integer>(star_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int32 star = 4;</code>
       *
       * <pre>
       *得星数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getStarList() {
        return java.util.Collections.unmodifiableList(star_);
      }
      /**
       * <code>repeated int32 star = 4;</code>
       *
       * <pre>
       *得星数
       * </pre>
       */
      public int getStarCount() {
        return star_.size();
      }
      /**
       * <code>repeated int32 star = 4;</code>
       *
       * <pre>
       *得星数
       * </pre>
       */
      public int getStar(int index) {
        return star_.get(index);
      }
      /**
       * <code>repeated int32 star = 4;</code>
       *
       * <pre>
       *得星数
       * </pre>
       */
      public Builder setStar(
          int index, int value) {
        ensureStarIsMutable();
        star_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 star = 4;</code>
       *
       * <pre>
       *得星数
       * </pre>
       */
      public Builder addStar(int value) {
        ensureStarIsMutable();
        star_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 star = 4;</code>
       *
       * <pre>
       *得星数
       * </pre>
       */
      public Builder addAllStar(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureStarIsMutable();
        super.addAll(values, star_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 star = 4;</code>
       *
       * <pre>
       *得星数
       * </pre>
       */
      public Builder clearStar() {
        star_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // repeated int32 harm = 5;
      private java.util.List<java.lang.Integer> harm_ = java.util.Collections.emptyList();
      private void ensureHarmIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          harm_ = new java.util.ArrayList<java.lang.Integer>(harm_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated int32 harm = 5;</code>
       *
       * <pre>
       *本次战斗对每个位置造成的伤害(如：0,111,0...)
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getHarmList() {
        return java.util.Collections.unmodifiableList(harm_);
      }
      /**
       * <code>repeated int32 harm = 5;</code>
       *
       * <pre>
       *本次战斗对每个位置造成的伤害(如：0,111,0...)
       * </pre>
       */
      public int getHarmCount() {
        return harm_.size();
      }
      /**
       * <code>repeated int32 harm = 5;</code>
       *
       * <pre>
       *本次战斗对每个位置造成的伤害(如：0,111,0...)
       * </pre>
       */
      public int getHarm(int index) {
        return harm_.get(index);
      }
      /**
       * <code>repeated int32 harm = 5;</code>
       *
       * <pre>
       *本次战斗对每个位置造成的伤害(如：0,111,0...)
       * </pre>
       */
      public Builder setHarm(
          int index, int value) {
        ensureHarmIsMutable();
        harm_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 harm = 5;</code>
       *
       * <pre>
       *本次战斗对每个位置造成的伤害(如：0,111,0...)
       * </pre>
       */
      public Builder addHarm(int value) {
        ensureHarmIsMutable();
        harm_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 harm = 5;</code>
       *
       * <pre>
       *本次战斗对每个位置造成的伤害(如：0,111,0...)
       * </pre>
       */
      public Builder addAllHarm(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureHarmIsMutable();
        super.addAll(values, harm_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 harm = 5;</code>
       *
       * <pre>
       *本次战斗对每个位置造成的伤害(如：0,111,0...)
       * </pre>
       */
      public Builder clearHarm() {
        harm_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      // repeated int32 param32 = 6;
      private java.util.List<java.lang.Integer> param32_ = java.util.Collections.emptyList();
      private void ensureParam32IsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          param32_ = new java.util.ArrayList<java.lang.Integer>(param32_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated int32 param32 = 6;</code>
       *
       * <pre>
       *int参数值
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getParam32List() {
        return java.util.Collections.unmodifiableList(param32_);
      }
      /**
       * <code>repeated int32 param32 = 6;</code>
       *
       * <pre>
       *int参数值
       * </pre>
       */
      public int getParam32Count() {
        return param32_.size();
      }
      /**
       * <code>repeated int32 param32 = 6;</code>
       *
       * <pre>
       *int参数值
       * </pre>
       */
      public int getParam32(int index) {
        return param32_.get(index);
      }
      /**
       * <code>repeated int32 param32 = 6;</code>
       *
       * <pre>
       *int参数值
       * </pre>
       */
      public Builder setParam32(
          int index, int value) {
        ensureParam32IsMutable();
        param32_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 param32 = 6;</code>
       *
       * <pre>
       *int参数值
       * </pre>
       */
      public Builder addParam32(int value) {
        ensureParam32IsMutable();
        param32_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 param32 = 6;</code>
       *
       * <pre>
       *int参数值
       * </pre>
       */
      public Builder addAllParam32(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureParam32IsMutable();
        super.addAll(values, param32_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 param32 = 6;</code>
       *
       * <pre>
       *int参数值
       * </pre>
       */
      public Builder clearParam32() {
        param32_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      // repeated int64 param64 = 7;
      private java.util.List<java.lang.Long> param64_ = java.util.Collections.emptyList();
      private void ensureParam64IsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          param64_ = new java.util.ArrayList<java.lang.Long>(param64_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated int64 param64 = 7;</code>
       *
       * <pre>
       *long参数值
       * </pre>
       */
      public java.util.List<java.lang.Long>
          getParam64List() {
        return java.util.Collections.unmodifiableList(param64_);
      }
      /**
       * <code>repeated int64 param64 = 7;</code>
       *
       * <pre>
       *long参数值
       * </pre>
       */
      public int getParam64Count() {
        return param64_.size();
      }
      /**
       * <code>repeated int64 param64 = 7;</code>
       *
       * <pre>
       *long参数值
       * </pre>
       */
      public long getParam64(int index) {
        return param64_.get(index);
      }
      /**
       * <code>repeated int64 param64 = 7;</code>
       *
       * <pre>
       *long参数值
       * </pre>
       */
      public Builder setParam64(
          int index, long value) {
        ensureParam64IsMutable();
        param64_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 param64 = 7;</code>
       *
       * <pre>
       *long参数值
       * </pre>
       */
      public Builder addParam64(long value) {
        ensureParam64IsMutable();
        param64_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 param64 = 7;</code>
       *
       * <pre>
       *long参数值
       * </pre>
       */
      public Builder addAllParam64(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureParam64IsMutable();
        super.addAll(values, param64_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 param64 = 7;</code>
       *
       * <pre>
       *long参数值
       * </pre>
       */
      public Builder clearParam64() {
        param64_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      // optional bool isCombatEnd = 8;
      private boolean isCombatEnd_ ;
      /**
       * <code>optional bool isCombatEnd = 8;</code>
       *
       * <pre>
       *是否完整的战斗结束（false即中途结束）
       * </pre>
       */
      public boolean hasIsCombatEnd() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional bool isCombatEnd = 8;</code>
       *
       * <pre>
       *是否完整的战斗结束（false即中途结束）
       * </pre>
       */
      public boolean getIsCombatEnd() {
        return isCombatEnd_;
      }
      /**
       * <code>optional bool isCombatEnd = 8;</code>
       *
       * <pre>
       *是否完整的战斗结束（false即中途结束）
       * </pre>
       */
      public Builder setIsCombatEnd(boolean value) {
        bitField0_ |= 0x00000080;
        isCombatEnd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isCombatEnd = 8;</code>
       *
       * <pre>
       *是否完整的战斗结束（false即中途结束）
       * </pre>
       */
      public Builder clearIsCombatEnd() {
        bitField0_ = (bitField0_ & ~0x00000080);
        isCombatEnd_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:game.msg.SCTurnbasedFinish)
    }

    static {
      defaultInstance = new SCTurnbasedFinish(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game.msg.SCTurnbasedFinish)
  }

  public interface SCTurnbasedRoundEndOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 round = 1;
    /**
     * <code>optional int32 round = 1;</code>
     *
     * <pre>
     *回合
     * </pre>
     */
    boolean hasRound();
    /**
     * <code>optional int32 round = 1;</code>
     *
     * <pre>
     *回合
     * </pre>
     */
    int getRound();
  }
  /**
   * Protobuf type {@code game.msg.SCTurnbasedRoundEnd}
   *
   * <pre>
   *回合结束
   * </pre>
   */
  public static final class SCTurnbasedRoundEnd extends
      com.google.protobuf.GeneratedMessage
      implements SCTurnbasedRoundEndOrBuilder {
    // Use SCTurnbasedRoundEnd.newBuilder() to construct.
    private SCTurnbasedRoundEnd(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SCTurnbasedRoundEnd(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SCTurnbasedRoundEnd defaultInstance;
    public static SCTurnbasedRoundEnd getDefaultInstance() {
      return defaultInstance;
    }

    public SCTurnbasedRoundEnd getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SCTurnbasedRoundEnd(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              round_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedRoundEnd_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedRoundEnd_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game.msg.MsgTurnbasedFight.SCTurnbasedRoundEnd.class, game.msg.MsgTurnbasedFight.SCTurnbasedRoundEnd.Builder.class);
    }

    public static com.google.protobuf.Parser<SCTurnbasedRoundEnd> PARSER =
        new com.google.protobuf.AbstractParser<SCTurnbasedRoundEnd>() {
      public SCTurnbasedRoundEnd parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SCTurnbasedRoundEnd(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SCTurnbasedRoundEnd> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 round = 1;
    public static final int ROUND_FIELD_NUMBER = 1;
    private int round_;
    /**
     * <code>optional int32 round = 1;</code>
     *
     * <pre>
     *回合
     * </pre>
     */
    public boolean hasRound() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 round = 1;</code>
     *
     * <pre>
     *回合
     * </pre>
     */
    public int getRound() {
      return round_;
    }

    private void initFields() {
      round_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, round_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, round_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game.msg.MsgTurnbasedFight.SCTurnbasedRoundEnd parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedRoundEnd parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedRoundEnd parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedRoundEnd parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedRoundEnd parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedRoundEnd parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedRoundEnd parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedRoundEnd parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedRoundEnd parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedRoundEnd parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game.msg.MsgTurnbasedFight.SCTurnbasedRoundEnd prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game.msg.SCTurnbasedRoundEnd}
     *
     * <pre>
     *回合结束
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game.msg.MsgTurnbasedFight.SCTurnbasedRoundEndOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedRoundEnd_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedRoundEnd_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game.msg.MsgTurnbasedFight.SCTurnbasedRoundEnd.class, game.msg.MsgTurnbasedFight.SCTurnbasedRoundEnd.Builder.class);
      }

      // Construct using game.msg.MsgTurnbasedFight.SCTurnbasedRoundEnd.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        round_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedRoundEnd_descriptor;
      }

      public game.msg.MsgTurnbasedFight.SCTurnbasedRoundEnd getDefaultInstanceForType() {
        return game.msg.MsgTurnbasedFight.SCTurnbasedRoundEnd.getDefaultInstance();
      }

      public game.msg.MsgTurnbasedFight.SCTurnbasedRoundEnd build() {
        game.msg.MsgTurnbasedFight.SCTurnbasedRoundEnd result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game.msg.MsgTurnbasedFight.SCTurnbasedRoundEnd buildPartial() {
        game.msg.MsgTurnbasedFight.SCTurnbasedRoundEnd result = new game.msg.MsgTurnbasedFight.SCTurnbasedRoundEnd(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.round_ = round_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game.msg.MsgTurnbasedFight.SCTurnbasedRoundEnd) {
          return mergeFrom((game.msg.MsgTurnbasedFight.SCTurnbasedRoundEnd)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game.msg.MsgTurnbasedFight.SCTurnbasedRoundEnd other) {
        if (other == game.msg.MsgTurnbasedFight.SCTurnbasedRoundEnd.getDefaultInstance()) return this;
        if (other.hasRound()) {
          setRound(other.getRound());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game.msg.MsgTurnbasedFight.SCTurnbasedRoundEnd parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game.msg.MsgTurnbasedFight.SCTurnbasedRoundEnd) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 round = 1;
      private int round_ ;
      /**
       * <code>optional int32 round = 1;</code>
       *
       * <pre>
       *回合
       * </pre>
       */
      public boolean hasRound() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 round = 1;</code>
       *
       * <pre>
       *回合
       * </pre>
       */
      public int getRound() {
        return round_;
      }
      /**
       * <code>optional int32 round = 1;</code>
       *
       * <pre>
       *回合
       * </pre>
       */
      public Builder setRound(int value) {
        bitField0_ |= 0x00000001;
        round_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 round = 1;</code>
       *
       * <pre>
       *回合
       * </pre>
       */
      public Builder clearRound() {
        bitField0_ = (bitField0_ & ~0x00000001);
        round_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:game.msg.SCTurnbasedRoundEnd)
    }

    static {
      defaultInstance = new SCTurnbasedRoundEnd(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game.msg.SCTurnbasedRoundEnd)
  }

  public interface CSTurnbasedRoundEndOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 round = 1;
    /**
     * <code>optional int32 round = 1;</code>
     *
     * <pre>
     *回合
     * </pre>
     */
    boolean hasRound();
    /**
     * <code>optional int32 round = 1;</code>
     *
     * <pre>
     *回合
     * </pre>
     */
    int getRound();
  }
  /**
   * Protobuf type {@code game.msg.CSTurnbasedRoundEnd}
   *
   * <pre>
   *回合播放结束
   * </pre>
   */
  public static final class CSTurnbasedRoundEnd extends
      com.google.protobuf.GeneratedMessage
      implements CSTurnbasedRoundEndOrBuilder {
    // Use CSTurnbasedRoundEnd.newBuilder() to construct.
    private CSTurnbasedRoundEnd(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CSTurnbasedRoundEnd(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CSTurnbasedRoundEnd defaultInstance;
    public static CSTurnbasedRoundEnd getDefaultInstance() {
      return defaultInstance;
    }

    public CSTurnbasedRoundEnd getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CSTurnbasedRoundEnd(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              round_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game.msg.MsgTurnbasedFight.internal_static_game_msg_CSTurnbasedRoundEnd_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game.msg.MsgTurnbasedFight.internal_static_game_msg_CSTurnbasedRoundEnd_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game.msg.MsgTurnbasedFight.CSTurnbasedRoundEnd.class, game.msg.MsgTurnbasedFight.CSTurnbasedRoundEnd.Builder.class);
    }

    public static com.google.protobuf.Parser<CSTurnbasedRoundEnd> PARSER =
        new com.google.protobuf.AbstractParser<CSTurnbasedRoundEnd>() {
      public CSTurnbasedRoundEnd parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CSTurnbasedRoundEnd(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CSTurnbasedRoundEnd> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 round = 1;
    public static final int ROUND_FIELD_NUMBER = 1;
    private int round_;
    /**
     * <code>optional int32 round = 1;</code>
     *
     * <pre>
     *回合
     * </pre>
     */
    public boolean hasRound() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 round = 1;</code>
     *
     * <pre>
     *回合
     * </pre>
     */
    public int getRound() {
      return round_;
    }

    private void initFields() {
      round_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, round_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, round_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game.msg.MsgTurnbasedFight.CSTurnbasedRoundEnd parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedRoundEnd parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedRoundEnd parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedRoundEnd parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedRoundEnd parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedRoundEnd parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedRoundEnd parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedRoundEnd parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedRoundEnd parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedRoundEnd parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game.msg.MsgTurnbasedFight.CSTurnbasedRoundEnd prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game.msg.CSTurnbasedRoundEnd}
     *
     * <pre>
     *回合播放结束
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game.msg.MsgTurnbasedFight.CSTurnbasedRoundEndOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_CSTurnbasedRoundEnd_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_CSTurnbasedRoundEnd_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game.msg.MsgTurnbasedFight.CSTurnbasedRoundEnd.class, game.msg.MsgTurnbasedFight.CSTurnbasedRoundEnd.Builder.class);
      }

      // Construct using game.msg.MsgTurnbasedFight.CSTurnbasedRoundEnd.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        round_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_CSTurnbasedRoundEnd_descriptor;
      }

      public game.msg.MsgTurnbasedFight.CSTurnbasedRoundEnd getDefaultInstanceForType() {
        return game.msg.MsgTurnbasedFight.CSTurnbasedRoundEnd.getDefaultInstance();
      }

      public game.msg.MsgTurnbasedFight.CSTurnbasedRoundEnd build() {
        game.msg.MsgTurnbasedFight.CSTurnbasedRoundEnd result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game.msg.MsgTurnbasedFight.CSTurnbasedRoundEnd buildPartial() {
        game.msg.MsgTurnbasedFight.CSTurnbasedRoundEnd result = new game.msg.MsgTurnbasedFight.CSTurnbasedRoundEnd(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.round_ = round_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game.msg.MsgTurnbasedFight.CSTurnbasedRoundEnd) {
          return mergeFrom((game.msg.MsgTurnbasedFight.CSTurnbasedRoundEnd)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game.msg.MsgTurnbasedFight.CSTurnbasedRoundEnd other) {
        if (other == game.msg.MsgTurnbasedFight.CSTurnbasedRoundEnd.getDefaultInstance()) return this;
        if (other.hasRound()) {
          setRound(other.getRound());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game.msg.MsgTurnbasedFight.CSTurnbasedRoundEnd parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game.msg.MsgTurnbasedFight.CSTurnbasedRoundEnd) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 round = 1;
      private int round_ ;
      /**
       * <code>optional int32 round = 1;</code>
       *
       * <pre>
       *回合
       * </pre>
       */
      public boolean hasRound() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 round = 1;</code>
       *
       * <pre>
       *回合
       * </pre>
       */
      public int getRound() {
        return round_;
      }
      /**
       * <code>optional int32 round = 1;</code>
       *
       * <pre>
       *回合
       * </pre>
       */
      public Builder setRound(int value) {
        bitField0_ |= 0x00000001;
        round_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 round = 1;</code>
       *
       * <pre>
       *回合
       * </pre>
       */
      public Builder clearRound() {
        bitField0_ = (bitField0_ & ~0x00000001);
        round_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:game.msg.CSTurnbasedRoundEnd)
    }

    static {
      defaultInstance = new CSTurnbasedRoundEnd(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game.msg.CSTurnbasedRoundEnd)
  }

  public interface CSTurnbasedStopFightOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional bool stop = 1;
    /**
     * <code>optional bool stop = 1;</code>
     *
     * <pre>
     *是否暂停
     * </pre>
     */
    boolean hasStop();
    /**
     * <code>optional bool stop = 1;</code>
     *
     * <pre>
     *是否暂停
     * </pre>
     */
    boolean getStop();
  }
  /**
   * Protobuf type {@code game.msg.CSTurnbasedStopFight}
   *
   * <pre>
   *暂停
   * </pre>
   */
  public static final class CSTurnbasedStopFight extends
      com.google.protobuf.GeneratedMessage
      implements CSTurnbasedStopFightOrBuilder {
    // Use CSTurnbasedStopFight.newBuilder() to construct.
    private CSTurnbasedStopFight(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CSTurnbasedStopFight(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CSTurnbasedStopFight defaultInstance;
    public static CSTurnbasedStopFight getDefaultInstance() {
      return defaultInstance;
    }

    public CSTurnbasedStopFight getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CSTurnbasedStopFight(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              stop_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game.msg.MsgTurnbasedFight.internal_static_game_msg_CSTurnbasedStopFight_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game.msg.MsgTurnbasedFight.internal_static_game_msg_CSTurnbasedStopFight_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game.msg.MsgTurnbasedFight.CSTurnbasedStopFight.class, game.msg.MsgTurnbasedFight.CSTurnbasedStopFight.Builder.class);
    }

    public static com.google.protobuf.Parser<CSTurnbasedStopFight> PARSER =
        new com.google.protobuf.AbstractParser<CSTurnbasedStopFight>() {
      public CSTurnbasedStopFight parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CSTurnbasedStopFight(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CSTurnbasedStopFight> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional bool stop = 1;
    public static final int STOP_FIELD_NUMBER = 1;
    private boolean stop_;
    /**
     * <code>optional bool stop = 1;</code>
     *
     * <pre>
     *是否暂停
     * </pre>
     */
    public boolean hasStop() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bool stop = 1;</code>
     *
     * <pre>
     *是否暂停
     * </pre>
     */
    public boolean getStop() {
      return stop_;
    }

    private void initFields() {
      stop_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, stop_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, stop_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game.msg.MsgTurnbasedFight.CSTurnbasedStopFight parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedStopFight parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedStopFight parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedStopFight parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedStopFight parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedStopFight parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedStopFight parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedStopFight parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedStopFight parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedStopFight parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game.msg.MsgTurnbasedFight.CSTurnbasedStopFight prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game.msg.CSTurnbasedStopFight}
     *
     * <pre>
     *暂停
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game.msg.MsgTurnbasedFight.CSTurnbasedStopFightOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_CSTurnbasedStopFight_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_CSTurnbasedStopFight_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game.msg.MsgTurnbasedFight.CSTurnbasedStopFight.class, game.msg.MsgTurnbasedFight.CSTurnbasedStopFight.Builder.class);
      }

      // Construct using game.msg.MsgTurnbasedFight.CSTurnbasedStopFight.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        stop_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_CSTurnbasedStopFight_descriptor;
      }

      public game.msg.MsgTurnbasedFight.CSTurnbasedStopFight getDefaultInstanceForType() {
        return game.msg.MsgTurnbasedFight.CSTurnbasedStopFight.getDefaultInstance();
      }

      public game.msg.MsgTurnbasedFight.CSTurnbasedStopFight build() {
        game.msg.MsgTurnbasedFight.CSTurnbasedStopFight result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game.msg.MsgTurnbasedFight.CSTurnbasedStopFight buildPartial() {
        game.msg.MsgTurnbasedFight.CSTurnbasedStopFight result = new game.msg.MsgTurnbasedFight.CSTurnbasedStopFight(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.stop_ = stop_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game.msg.MsgTurnbasedFight.CSTurnbasedStopFight) {
          return mergeFrom((game.msg.MsgTurnbasedFight.CSTurnbasedStopFight)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game.msg.MsgTurnbasedFight.CSTurnbasedStopFight other) {
        if (other == game.msg.MsgTurnbasedFight.CSTurnbasedStopFight.getDefaultInstance()) return this;
        if (other.hasStop()) {
          setStop(other.getStop());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game.msg.MsgTurnbasedFight.CSTurnbasedStopFight parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game.msg.MsgTurnbasedFight.CSTurnbasedStopFight) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional bool stop = 1;
      private boolean stop_ ;
      /**
       * <code>optional bool stop = 1;</code>
       *
       * <pre>
       *是否暂停
       * </pre>
       */
      public boolean hasStop() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bool stop = 1;</code>
       *
       * <pre>
       *是否暂停
       * </pre>
       */
      public boolean getStop() {
        return stop_;
      }
      /**
       * <code>optional bool stop = 1;</code>
       *
       * <pre>
       *是否暂停
       * </pre>
       */
      public Builder setStop(boolean value) {
        bitField0_ |= 0x00000001;
        stop_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool stop = 1;</code>
       *
       * <pre>
       *是否暂停
       * </pre>
       */
      public Builder clearStop() {
        bitField0_ = (bitField0_ & ~0x00000001);
        stop_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:game.msg.CSTurnbasedStopFight)
    }

    static {
      defaultInstance = new CSTurnbasedStopFight(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game.msg.CSTurnbasedStopFight)
  }

  public interface SCTurnbasedStopFightOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional bool stop = 1;
    /**
     * <code>optional bool stop = 1;</code>
     *
     * <pre>
     *是否暂停
     * </pre>
     */
    boolean hasStop();
    /**
     * <code>optional bool stop = 1;</code>
     *
     * <pre>
     *是否暂停
     * </pre>
     */
    boolean getStop();
  }
  /**
   * Protobuf type {@code game.msg.SCTurnbasedStopFight}
   *
   * <pre>
   *暂停
   * </pre>
   */
  public static final class SCTurnbasedStopFight extends
      com.google.protobuf.GeneratedMessage
      implements SCTurnbasedStopFightOrBuilder {
    // Use SCTurnbasedStopFight.newBuilder() to construct.
    private SCTurnbasedStopFight(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SCTurnbasedStopFight(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SCTurnbasedStopFight defaultInstance;
    public static SCTurnbasedStopFight getDefaultInstance() {
      return defaultInstance;
    }

    public SCTurnbasedStopFight getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SCTurnbasedStopFight(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              stop_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedStopFight_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedStopFight_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game.msg.MsgTurnbasedFight.SCTurnbasedStopFight.class, game.msg.MsgTurnbasedFight.SCTurnbasedStopFight.Builder.class);
    }

    public static com.google.protobuf.Parser<SCTurnbasedStopFight> PARSER =
        new com.google.protobuf.AbstractParser<SCTurnbasedStopFight>() {
      public SCTurnbasedStopFight parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SCTurnbasedStopFight(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SCTurnbasedStopFight> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional bool stop = 1;
    public static final int STOP_FIELD_NUMBER = 1;
    private boolean stop_;
    /**
     * <code>optional bool stop = 1;</code>
     *
     * <pre>
     *是否暂停
     * </pre>
     */
    public boolean hasStop() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bool stop = 1;</code>
     *
     * <pre>
     *是否暂停
     * </pre>
     */
    public boolean getStop() {
      return stop_;
    }

    private void initFields() {
      stop_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, stop_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, stop_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game.msg.MsgTurnbasedFight.SCTurnbasedStopFight parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedStopFight parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedStopFight parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedStopFight parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedStopFight parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedStopFight parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedStopFight parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedStopFight parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedStopFight parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedStopFight parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game.msg.MsgTurnbasedFight.SCTurnbasedStopFight prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game.msg.SCTurnbasedStopFight}
     *
     * <pre>
     *暂停
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game.msg.MsgTurnbasedFight.SCTurnbasedStopFightOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedStopFight_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedStopFight_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game.msg.MsgTurnbasedFight.SCTurnbasedStopFight.class, game.msg.MsgTurnbasedFight.SCTurnbasedStopFight.Builder.class);
      }

      // Construct using game.msg.MsgTurnbasedFight.SCTurnbasedStopFight.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        stop_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedStopFight_descriptor;
      }

      public game.msg.MsgTurnbasedFight.SCTurnbasedStopFight getDefaultInstanceForType() {
        return game.msg.MsgTurnbasedFight.SCTurnbasedStopFight.getDefaultInstance();
      }

      public game.msg.MsgTurnbasedFight.SCTurnbasedStopFight build() {
        game.msg.MsgTurnbasedFight.SCTurnbasedStopFight result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game.msg.MsgTurnbasedFight.SCTurnbasedStopFight buildPartial() {
        game.msg.MsgTurnbasedFight.SCTurnbasedStopFight result = new game.msg.MsgTurnbasedFight.SCTurnbasedStopFight(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.stop_ = stop_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game.msg.MsgTurnbasedFight.SCTurnbasedStopFight) {
          return mergeFrom((game.msg.MsgTurnbasedFight.SCTurnbasedStopFight)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game.msg.MsgTurnbasedFight.SCTurnbasedStopFight other) {
        if (other == game.msg.MsgTurnbasedFight.SCTurnbasedStopFight.getDefaultInstance()) return this;
        if (other.hasStop()) {
          setStop(other.getStop());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game.msg.MsgTurnbasedFight.SCTurnbasedStopFight parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game.msg.MsgTurnbasedFight.SCTurnbasedStopFight) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional bool stop = 1;
      private boolean stop_ ;
      /**
       * <code>optional bool stop = 1;</code>
       *
       * <pre>
       *是否暂停
       * </pre>
       */
      public boolean hasStop() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bool stop = 1;</code>
       *
       * <pre>
       *是否暂停
       * </pre>
       */
      public boolean getStop() {
        return stop_;
      }
      /**
       * <code>optional bool stop = 1;</code>
       *
       * <pre>
       *是否暂停
       * </pre>
       */
      public Builder setStop(boolean value) {
        bitField0_ |= 0x00000001;
        stop_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool stop = 1;</code>
       *
       * <pre>
       *是否暂停
       * </pre>
       */
      public Builder clearStop() {
        bitField0_ = (bitField0_ & ~0x00000001);
        stop_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:game.msg.SCTurnbasedStopFight)
    }

    static {
      defaultInstance = new SCTurnbasedStopFight(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game.msg.SCTurnbasedStopFight)
  }

  public interface CSTurnbasedActionEndOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 select = 1;
    /**
     * <code>optional int32 select = 1;</code>
     *
     * <pre>
     *选项
     * </pre>
     */
    boolean hasSelect();
    /**
     * <code>optional int32 select = 1;</code>
     *
     * <pre>
     *选项
     * </pre>
     */
    int getSelect();
  }
  /**
   * Protobuf type {@code game.msg.CSTurnbasedActionEnd}
   *
   * <pre>
   *剧情结束
   * </pre>
   */
  public static final class CSTurnbasedActionEnd extends
      com.google.protobuf.GeneratedMessage
      implements CSTurnbasedActionEndOrBuilder {
    // Use CSTurnbasedActionEnd.newBuilder() to construct.
    private CSTurnbasedActionEnd(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CSTurnbasedActionEnd(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CSTurnbasedActionEnd defaultInstance;
    public static CSTurnbasedActionEnd getDefaultInstance() {
      return defaultInstance;
    }

    public CSTurnbasedActionEnd getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CSTurnbasedActionEnd(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              select_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game.msg.MsgTurnbasedFight.internal_static_game_msg_CSTurnbasedActionEnd_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game.msg.MsgTurnbasedFight.internal_static_game_msg_CSTurnbasedActionEnd_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game.msg.MsgTurnbasedFight.CSTurnbasedActionEnd.class, game.msg.MsgTurnbasedFight.CSTurnbasedActionEnd.Builder.class);
    }

    public static com.google.protobuf.Parser<CSTurnbasedActionEnd> PARSER =
        new com.google.protobuf.AbstractParser<CSTurnbasedActionEnd>() {
      public CSTurnbasedActionEnd parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CSTurnbasedActionEnd(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CSTurnbasedActionEnd> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 select = 1;
    public static final int SELECT_FIELD_NUMBER = 1;
    private int select_;
    /**
     * <code>optional int32 select = 1;</code>
     *
     * <pre>
     *选项
     * </pre>
     */
    public boolean hasSelect() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 select = 1;</code>
     *
     * <pre>
     *选项
     * </pre>
     */
    public int getSelect() {
      return select_;
    }

    private void initFields() {
      select_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, select_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, select_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game.msg.MsgTurnbasedFight.CSTurnbasedActionEnd parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedActionEnd parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedActionEnd parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedActionEnd parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedActionEnd parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedActionEnd parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedActionEnd parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedActionEnd parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedActionEnd parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedActionEnd parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game.msg.MsgTurnbasedFight.CSTurnbasedActionEnd prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game.msg.CSTurnbasedActionEnd}
     *
     * <pre>
     *剧情结束
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game.msg.MsgTurnbasedFight.CSTurnbasedActionEndOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_CSTurnbasedActionEnd_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_CSTurnbasedActionEnd_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game.msg.MsgTurnbasedFight.CSTurnbasedActionEnd.class, game.msg.MsgTurnbasedFight.CSTurnbasedActionEnd.Builder.class);
      }

      // Construct using game.msg.MsgTurnbasedFight.CSTurnbasedActionEnd.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        select_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_CSTurnbasedActionEnd_descriptor;
      }

      public game.msg.MsgTurnbasedFight.CSTurnbasedActionEnd getDefaultInstanceForType() {
        return game.msg.MsgTurnbasedFight.CSTurnbasedActionEnd.getDefaultInstance();
      }

      public game.msg.MsgTurnbasedFight.CSTurnbasedActionEnd build() {
        game.msg.MsgTurnbasedFight.CSTurnbasedActionEnd result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game.msg.MsgTurnbasedFight.CSTurnbasedActionEnd buildPartial() {
        game.msg.MsgTurnbasedFight.CSTurnbasedActionEnd result = new game.msg.MsgTurnbasedFight.CSTurnbasedActionEnd(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.select_ = select_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game.msg.MsgTurnbasedFight.CSTurnbasedActionEnd) {
          return mergeFrom((game.msg.MsgTurnbasedFight.CSTurnbasedActionEnd)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game.msg.MsgTurnbasedFight.CSTurnbasedActionEnd other) {
        if (other == game.msg.MsgTurnbasedFight.CSTurnbasedActionEnd.getDefaultInstance()) return this;
        if (other.hasSelect()) {
          setSelect(other.getSelect());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game.msg.MsgTurnbasedFight.CSTurnbasedActionEnd parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game.msg.MsgTurnbasedFight.CSTurnbasedActionEnd) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 select = 1;
      private int select_ ;
      /**
       * <code>optional int32 select = 1;</code>
       *
       * <pre>
       *选项
       * </pre>
       */
      public boolean hasSelect() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 select = 1;</code>
       *
       * <pre>
       *选项
       * </pre>
       */
      public int getSelect() {
        return select_;
      }
      /**
       * <code>optional int32 select = 1;</code>
       *
       * <pre>
       *选项
       * </pre>
       */
      public Builder setSelect(int value) {
        bitField0_ |= 0x00000001;
        select_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 select = 1;</code>
       *
       * <pre>
       *选项
       * </pre>
       */
      public Builder clearSelect() {
        bitField0_ = (bitField0_ & ~0x00000001);
        select_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:game.msg.CSTurnbasedActionEnd)
    }

    static {
      defaultInstance = new CSTurnbasedActionEnd(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game.msg.CSTurnbasedActionEnd)
  }

  public interface SCTurnbasedActionStartOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 actionId = 1;
    /**
     * <code>optional int32 actionId = 1;</code>
     *
     * <pre>
     *剧情编号
     * </pre>
     */
    boolean hasActionId();
    /**
     * <code>optional int32 actionId = 1;</code>
     *
     * <pre>
     *剧情编号
     * </pre>
     */
    int getActionId();
  }
  /**
   * Protobuf type {@code game.msg.SCTurnbasedActionStart}
   *
   * <pre>
   *剧情开始
   * </pre>
   */
  public static final class SCTurnbasedActionStart extends
      com.google.protobuf.GeneratedMessage
      implements SCTurnbasedActionStartOrBuilder {
    // Use SCTurnbasedActionStart.newBuilder() to construct.
    private SCTurnbasedActionStart(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SCTurnbasedActionStart(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SCTurnbasedActionStart defaultInstance;
    public static SCTurnbasedActionStart getDefaultInstance() {
      return defaultInstance;
    }

    public SCTurnbasedActionStart getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SCTurnbasedActionStart(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              actionId_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedActionStart_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedActionStart_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game.msg.MsgTurnbasedFight.SCTurnbasedActionStart.class, game.msg.MsgTurnbasedFight.SCTurnbasedActionStart.Builder.class);
    }

    public static com.google.protobuf.Parser<SCTurnbasedActionStart> PARSER =
        new com.google.protobuf.AbstractParser<SCTurnbasedActionStart>() {
      public SCTurnbasedActionStart parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SCTurnbasedActionStart(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SCTurnbasedActionStart> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 actionId = 1;
    public static final int ACTIONID_FIELD_NUMBER = 1;
    private int actionId_;
    /**
     * <code>optional int32 actionId = 1;</code>
     *
     * <pre>
     *剧情编号
     * </pre>
     */
    public boolean hasActionId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 actionId = 1;</code>
     *
     * <pre>
     *剧情编号
     * </pre>
     */
    public int getActionId() {
      return actionId_;
    }

    private void initFields() {
      actionId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, actionId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, actionId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game.msg.MsgTurnbasedFight.SCTurnbasedActionStart parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedActionStart parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedActionStart parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedActionStart parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedActionStart parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedActionStart parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedActionStart parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedActionStart parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedActionStart parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedActionStart parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game.msg.MsgTurnbasedFight.SCTurnbasedActionStart prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game.msg.SCTurnbasedActionStart}
     *
     * <pre>
     *剧情开始
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game.msg.MsgTurnbasedFight.SCTurnbasedActionStartOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedActionStart_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedActionStart_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game.msg.MsgTurnbasedFight.SCTurnbasedActionStart.class, game.msg.MsgTurnbasedFight.SCTurnbasedActionStart.Builder.class);
      }

      // Construct using game.msg.MsgTurnbasedFight.SCTurnbasedActionStart.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        actionId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedActionStart_descriptor;
      }

      public game.msg.MsgTurnbasedFight.SCTurnbasedActionStart getDefaultInstanceForType() {
        return game.msg.MsgTurnbasedFight.SCTurnbasedActionStart.getDefaultInstance();
      }

      public game.msg.MsgTurnbasedFight.SCTurnbasedActionStart build() {
        game.msg.MsgTurnbasedFight.SCTurnbasedActionStart result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game.msg.MsgTurnbasedFight.SCTurnbasedActionStart buildPartial() {
        game.msg.MsgTurnbasedFight.SCTurnbasedActionStart result = new game.msg.MsgTurnbasedFight.SCTurnbasedActionStart(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.actionId_ = actionId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game.msg.MsgTurnbasedFight.SCTurnbasedActionStart) {
          return mergeFrom((game.msg.MsgTurnbasedFight.SCTurnbasedActionStart)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game.msg.MsgTurnbasedFight.SCTurnbasedActionStart other) {
        if (other == game.msg.MsgTurnbasedFight.SCTurnbasedActionStart.getDefaultInstance()) return this;
        if (other.hasActionId()) {
          setActionId(other.getActionId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game.msg.MsgTurnbasedFight.SCTurnbasedActionStart parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game.msg.MsgTurnbasedFight.SCTurnbasedActionStart) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 actionId = 1;
      private int actionId_ ;
      /**
       * <code>optional int32 actionId = 1;</code>
       *
       * <pre>
       *剧情编号
       * </pre>
       */
      public boolean hasActionId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 actionId = 1;</code>
       *
       * <pre>
       *剧情编号
       * </pre>
       */
      public int getActionId() {
        return actionId_;
      }
      /**
       * <code>optional int32 actionId = 1;</code>
       *
       * <pre>
       *剧情编号
       * </pre>
       */
      public Builder setActionId(int value) {
        bitField0_ |= 0x00000001;
        actionId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 actionId = 1;</code>
       *
       * <pre>
       *剧情编号
       * </pre>
       */
      public Builder clearActionId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        actionId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:game.msg.SCTurnbasedActionStart)
    }

    static {
      defaultInstance = new SCTurnbasedActionStart(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game.msg.SCTurnbasedActionStart)
  }

  public interface CSTurnbasedLeaveFightOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code game.msg.CSTurnbasedLeaveFight}
   *
   * <pre>
   *退出战斗
   * </pre>
   */
  public static final class CSTurnbasedLeaveFight extends
      com.google.protobuf.GeneratedMessage
      implements CSTurnbasedLeaveFightOrBuilder {
    // Use CSTurnbasedLeaveFight.newBuilder() to construct.
    private CSTurnbasedLeaveFight(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CSTurnbasedLeaveFight(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CSTurnbasedLeaveFight defaultInstance;
    public static CSTurnbasedLeaveFight getDefaultInstance() {
      return defaultInstance;
    }

    public CSTurnbasedLeaveFight getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CSTurnbasedLeaveFight(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game.msg.MsgTurnbasedFight.internal_static_game_msg_CSTurnbasedLeaveFight_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game.msg.MsgTurnbasedFight.internal_static_game_msg_CSTurnbasedLeaveFight_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game.msg.MsgTurnbasedFight.CSTurnbasedLeaveFight.class, game.msg.MsgTurnbasedFight.CSTurnbasedLeaveFight.Builder.class);
    }

    public static com.google.protobuf.Parser<CSTurnbasedLeaveFight> PARSER =
        new com.google.protobuf.AbstractParser<CSTurnbasedLeaveFight>() {
      public CSTurnbasedLeaveFight parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CSTurnbasedLeaveFight(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CSTurnbasedLeaveFight> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game.msg.MsgTurnbasedFight.CSTurnbasedLeaveFight parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedLeaveFight parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedLeaveFight parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedLeaveFight parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedLeaveFight parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedLeaveFight parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedLeaveFight parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedLeaveFight parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedLeaveFight parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedLeaveFight parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game.msg.MsgTurnbasedFight.CSTurnbasedLeaveFight prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game.msg.CSTurnbasedLeaveFight}
     *
     * <pre>
     *退出战斗
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game.msg.MsgTurnbasedFight.CSTurnbasedLeaveFightOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_CSTurnbasedLeaveFight_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_CSTurnbasedLeaveFight_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game.msg.MsgTurnbasedFight.CSTurnbasedLeaveFight.class, game.msg.MsgTurnbasedFight.CSTurnbasedLeaveFight.Builder.class);
      }

      // Construct using game.msg.MsgTurnbasedFight.CSTurnbasedLeaveFight.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_CSTurnbasedLeaveFight_descriptor;
      }

      public game.msg.MsgTurnbasedFight.CSTurnbasedLeaveFight getDefaultInstanceForType() {
        return game.msg.MsgTurnbasedFight.CSTurnbasedLeaveFight.getDefaultInstance();
      }

      public game.msg.MsgTurnbasedFight.CSTurnbasedLeaveFight build() {
        game.msg.MsgTurnbasedFight.CSTurnbasedLeaveFight result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game.msg.MsgTurnbasedFight.CSTurnbasedLeaveFight buildPartial() {
        game.msg.MsgTurnbasedFight.CSTurnbasedLeaveFight result = new game.msg.MsgTurnbasedFight.CSTurnbasedLeaveFight(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game.msg.MsgTurnbasedFight.CSTurnbasedLeaveFight) {
          return mergeFrom((game.msg.MsgTurnbasedFight.CSTurnbasedLeaveFight)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game.msg.MsgTurnbasedFight.CSTurnbasedLeaveFight other) {
        if (other == game.msg.MsgTurnbasedFight.CSTurnbasedLeaveFight.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game.msg.MsgTurnbasedFight.CSTurnbasedLeaveFight parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game.msg.MsgTurnbasedFight.CSTurnbasedLeaveFight) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:game.msg.CSTurnbasedLeaveFight)
    }

    static {
      defaultInstance = new CSTurnbasedLeaveFight(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game.msg.CSTurnbasedLeaveFight)
  }

  public interface SCTurnbasedRageSkillWaitListOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated int32 fighterId = 1;
    /**
     * <code>repeated int32 fighterId = 1;</code>
     *
     * <pre>
     *战斗者ID列表
     * </pre>
     */
    java.util.List<java.lang.Integer> getFighterIdList();
    /**
     * <code>repeated int32 fighterId = 1;</code>
     *
     * <pre>
     *战斗者ID列表
     * </pre>
     */
    int getFighterIdCount();
    /**
     * <code>repeated int32 fighterId = 1;</code>
     *
     * <pre>
     *战斗者ID列表
     * </pre>
     */
    int getFighterId(int index);

    // repeated int32 removeId = 2;
    /**
     * <code>repeated int32 removeId = 2;</code>
     *
     * <pre>
     *移除列表
     * </pre>
     */
    java.util.List<java.lang.Integer> getRemoveIdList();
    /**
     * <code>repeated int32 removeId = 2;</code>
     *
     * <pre>
     *移除列表
     * </pre>
     */
    int getRemoveIdCount();
    /**
     * <code>repeated int32 removeId = 2;</code>
     *
     * <pre>
     *移除列表
     * </pre>
     */
    int getRemoveId(int index);
  }
  /**
   * Protobuf type {@code game.msg.SCTurnbasedRageSkillWaitList}
   *
   * <pre>
   *怒气技能等待列表变更
   * </pre>
   */
  public static final class SCTurnbasedRageSkillWaitList extends
      com.google.protobuf.GeneratedMessage
      implements SCTurnbasedRageSkillWaitListOrBuilder {
    // Use SCTurnbasedRageSkillWaitList.newBuilder() to construct.
    private SCTurnbasedRageSkillWaitList(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SCTurnbasedRageSkillWaitList(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SCTurnbasedRageSkillWaitList defaultInstance;
    public static SCTurnbasedRageSkillWaitList getDefaultInstance() {
      return defaultInstance;
    }

    public SCTurnbasedRageSkillWaitList getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SCTurnbasedRageSkillWaitList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                fighterId_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              fighterId_.add(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                fighterId_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                fighterId_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                removeId_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              removeId_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                removeId_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                removeId_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          fighterId_ = java.util.Collections.unmodifiableList(fighterId_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          removeId_ = java.util.Collections.unmodifiableList(removeId_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedRageSkillWaitList_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedRageSkillWaitList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game.msg.MsgTurnbasedFight.SCTurnbasedRageSkillWaitList.class, game.msg.MsgTurnbasedFight.SCTurnbasedRageSkillWaitList.Builder.class);
    }

    public static com.google.protobuf.Parser<SCTurnbasedRageSkillWaitList> PARSER =
        new com.google.protobuf.AbstractParser<SCTurnbasedRageSkillWaitList>() {
      public SCTurnbasedRageSkillWaitList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SCTurnbasedRageSkillWaitList(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SCTurnbasedRageSkillWaitList> getParserForType() {
      return PARSER;
    }

    // repeated int32 fighterId = 1;
    public static final int FIGHTERID_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> fighterId_;
    /**
     * <code>repeated int32 fighterId = 1;</code>
     *
     * <pre>
     *战斗者ID列表
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getFighterIdList() {
      return fighterId_;
    }
    /**
     * <code>repeated int32 fighterId = 1;</code>
     *
     * <pre>
     *战斗者ID列表
     * </pre>
     */
    public int getFighterIdCount() {
      return fighterId_.size();
    }
    /**
     * <code>repeated int32 fighterId = 1;</code>
     *
     * <pre>
     *战斗者ID列表
     * </pre>
     */
    public int getFighterId(int index) {
      return fighterId_.get(index);
    }

    // repeated int32 removeId = 2;
    public static final int REMOVEID_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> removeId_;
    /**
     * <code>repeated int32 removeId = 2;</code>
     *
     * <pre>
     *移除列表
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getRemoveIdList() {
      return removeId_;
    }
    /**
     * <code>repeated int32 removeId = 2;</code>
     *
     * <pre>
     *移除列表
     * </pre>
     */
    public int getRemoveIdCount() {
      return removeId_.size();
    }
    /**
     * <code>repeated int32 removeId = 2;</code>
     *
     * <pre>
     *移除列表
     * </pre>
     */
    public int getRemoveId(int index) {
      return removeId_.get(index);
    }

    private void initFields() {
      fighterId_ = java.util.Collections.emptyList();
      removeId_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < fighterId_.size(); i++) {
        output.writeInt32(1, fighterId_.get(i));
      }
      for (int i = 0; i < removeId_.size(); i++) {
        output.writeInt32(2, removeId_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < fighterId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(fighterId_.get(i));
        }
        size += dataSize;
        size += 1 * getFighterIdList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < removeId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(removeId_.get(i));
        }
        size += dataSize;
        size += 1 * getRemoveIdList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game.msg.MsgTurnbasedFight.SCTurnbasedRageSkillWaitList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedRageSkillWaitList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedRageSkillWaitList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedRageSkillWaitList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedRageSkillWaitList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedRageSkillWaitList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedRageSkillWaitList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedRageSkillWaitList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedRageSkillWaitList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedRageSkillWaitList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game.msg.MsgTurnbasedFight.SCTurnbasedRageSkillWaitList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game.msg.SCTurnbasedRageSkillWaitList}
     *
     * <pre>
     *怒气技能等待列表变更
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game.msg.MsgTurnbasedFight.SCTurnbasedRageSkillWaitListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedRageSkillWaitList_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedRageSkillWaitList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game.msg.MsgTurnbasedFight.SCTurnbasedRageSkillWaitList.class, game.msg.MsgTurnbasedFight.SCTurnbasedRageSkillWaitList.Builder.class);
      }

      // Construct using game.msg.MsgTurnbasedFight.SCTurnbasedRageSkillWaitList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        fighterId_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        removeId_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedRageSkillWaitList_descriptor;
      }

      public game.msg.MsgTurnbasedFight.SCTurnbasedRageSkillWaitList getDefaultInstanceForType() {
        return game.msg.MsgTurnbasedFight.SCTurnbasedRageSkillWaitList.getDefaultInstance();
      }

      public game.msg.MsgTurnbasedFight.SCTurnbasedRageSkillWaitList build() {
        game.msg.MsgTurnbasedFight.SCTurnbasedRageSkillWaitList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game.msg.MsgTurnbasedFight.SCTurnbasedRageSkillWaitList buildPartial() {
        game.msg.MsgTurnbasedFight.SCTurnbasedRageSkillWaitList result = new game.msg.MsgTurnbasedFight.SCTurnbasedRageSkillWaitList(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          fighterId_ = java.util.Collections.unmodifiableList(fighterId_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.fighterId_ = fighterId_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          removeId_ = java.util.Collections.unmodifiableList(removeId_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.removeId_ = removeId_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game.msg.MsgTurnbasedFight.SCTurnbasedRageSkillWaitList) {
          return mergeFrom((game.msg.MsgTurnbasedFight.SCTurnbasedRageSkillWaitList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game.msg.MsgTurnbasedFight.SCTurnbasedRageSkillWaitList other) {
        if (other == game.msg.MsgTurnbasedFight.SCTurnbasedRageSkillWaitList.getDefaultInstance()) return this;
        if (!other.fighterId_.isEmpty()) {
          if (fighterId_.isEmpty()) {
            fighterId_ = other.fighterId_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureFighterIdIsMutable();
            fighterId_.addAll(other.fighterId_);
          }
          onChanged();
        }
        if (!other.removeId_.isEmpty()) {
          if (removeId_.isEmpty()) {
            removeId_ = other.removeId_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureRemoveIdIsMutable();
            removeId_.addAll(other.removeId_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game.msg.MsgTurnbasedFight.SCTurnbasedRageSkillWaitList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game.msg.MsgTurnbasedFight.SCTurnbasedRageSkillWaitList) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated int32 fighterId = 1;
      private java.util.List<java.lang.Integer> fighterId_ = java.util.Collections.emptyList();
      private void ensureFighterIdIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          fighterId_ = new java.util.ArrayList<java.lang.Integer>(fighterId_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 fighterId = 1;</code>
       *
       * <pre>
       *战斗者ID列表
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getFighterIdList() {
        return java.util.Collections.unmodifiableList(fighterId_);
      }
      /**
       * <code>repeated int32 fighterId = 1;</code>
       *
       * <pre>
       *战斗者ID列表
       * </pre>
       */
      public int getFighterIdCount() {
        return fighterId_.size();
      }
      /**
       * <code>repeated int32 fighterId = 1;</code>
       *
       * <pre>
       *战斗者ID列表
       * </pre>
       */
      public int getFighterId(int index) {
        return fighterId_.get(index);
      }
      /**
       * <code>repeated int32 fighterId = 1;</code>
       *
       * <pre>
       *战斗者ID列表
       * </pre>
       */
      public Builder setFighterId(
          int index, int value) {
        ensureFighterIdIsMutable();
        fighterId_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 fighterId = 1;</code>
       *
       * <pre>
       *战斗者ID列表
       * </pre>
       */
      public Builder addFighterId(int value) {
        ensureFighterIdIsMutable();
        fighterId_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 fighterId = 1;</code>
       *
       * <pre>
       *战斗者ID列表
       * </pre>
       */
      public Builder addAllFighterId(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureFighterIdIsMutable();
        super.addAll(values, fighterId_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 fighterId = 1;</code>
       *
       * <pre>
       *战斗者ID列表
       * </pre>
       */
      public Builder clearFighterId() {
        fighterId_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // repeated int32 removeId = 2;
      private java.util.List<java.lang.Integer> removeId_ = java.util.Collections.emptyList();
      private void ensureRemoveIdIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          removeId_ = new java.util.ArrayList<java.lang.Integer>(removeId_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 removeId = 2;</code>
       *
       * <pre>
       *移除列表
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getRemoveIdList() {
        return java.util.Collections.unmodifiableList(removeId_);
      }
      /**
       * <code>repeated int32 removeId = 2;</code>
       *
       * <pre>
       *移除列表
       * </pre>
       */
      public int getRemoveIdCount() {
        return removeId_.size();
      }
      /**
       * <code>repeated int32 removeId = 2;</code>
       *
       * <pre>
       *移除列表
       * </pre>
       */
      public int getRemoveId(int index) {
        return removeId_.get(index);
      }
      /**
       * <code>repeated int32 removeId = 2;</code>
       *
       * <pre>
       *移除列表
       * </pre>
       */
      public Builder setRemoveId(
          int index, int value) {
        ensureRemoveIdIsMutable();
        removeId_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 removeId = 2;</code>
       *
       * <pre>
       *移除列表
       * </pre>
       */
      public Builder addRemoveId(int value) {
        ensureRemoveIdIsMutable();
        removeId_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 removeId = 2;</code>
       *
       * <pre>
       *移除列表
       * </pre>
       */
      public Builder addAllRemoveId(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRemoveIdIsMutable();
        super.addAll(values, removeId_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 removeId = 2;</code>
       *
       * <pre>
       *移除列表
       * </pre>
       */
      public Builder clearRemoveId() {
        removeId_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:game.msg.SCTurnbasedRageSkillWaitList)
    }

    static {
      defaultInstance = new SCTurnbasedRageSkillWaitList(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game.msg.SCTurnbasedRageSkillWaitList)
  }

  public interface CSTurnbasedMonsterChangeEndOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code game.msg.CSTurnbasedMonsterChangeEnd}
   *
   * <pre>
   *战斗者出入场表现结束
   * </pre>
   */
  public static final class CSTurnbasedMonsterChangeEnd extends
      com.google.protobuf.GeneratedMessage
      implements CSTurnbasedMonsterChangeEndOrBuilder {
    // Use CSTurnbasedMonsterChangeEnd.newBuilder() to construct.
    private CSTurnbasedMonsterChangeEnd(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CSTurnbasedMonsterChangeEnd(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CSTurnbasedMonsterChangeEnd defaultInstance;
    public static CSTurnbasedMonsterChangeEnd getDefaultInstance() {
      return defaultInstance;
    }

    public CSTurnbasedMonsterChangeEnd getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CSTurnbasedMonsterChangeEnd(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game.msg.MsgTurnbasedFight.internal_static_game_msg_CSTurnbasedMonsterChangeEnd_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game.msg.MsgTurnbasedFight.internal_static_game_msg_CSTurnbasedMonsterChangeEnd_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game.msg.MsgTurnbasedFight.CSTurnbasedMonsterChangeEnd.class, game.msg.MsgTurnbasedFight.CSTurnbasedMonsterChangeEnd.Builder.class);
    }

    public static com.google.protobuf.Parser<CSTurnbasedMonsterChangeEnd> PARSER =
        new com.google.protobuf.AbstractParser<CSTurnbasedMonsterChangeEnd>() {
      public CSTurnbasedMonsterChangeEnd parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CSTurnbasedMonsterChangeEnd(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CSTurnbasedMonsterChangeEnd> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game.msg.MsgTurnbasedFight.CSTurnbasedMonsterChangeEnd parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedMonsterChangeEnd parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedMonsterChangeEnd parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedMonsterChangeEnd parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedMonsterChangeEnd parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedMonsterChangeEnd parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedMonsterChangeEnd parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedMonsterChangeEnd parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedMonsterChangeEnd parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.CSTurnbasedMonsterChangeEnd parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game.msg.MsgTurnbasedFight.CSTurnbasedMonsterChangeEnd prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game.msg.CSTurnbasedMonsterChangeEnd}
     *
     * <pre>
     *战斗者出入场表现结束
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game.msg.MsgTurnbasedFight.CSTurnbasedMonsterChangeEndOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_CSTurnbasedMonsterChangeEnd_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_CSTurnbasedMonsterChangeEnd_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game.msg.MsgTurnbasedFight.CSTurnbasedMonsterChangeEnd.class, game.msg.MsgTurnbasedFight.CSTurnbasedMonsterChangeEnd.Builder.class);
      }

      // Construct using game.msg.MsgTurnbasedFight.CSTurnbasedMonsterChangeEnd.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_CSTurnbasedMonsterChangeEnd_descriptor;
      }

      public game.msg.MsgTurnbasedFight.CSTurnbasedMonsterChangeEnd getDefaultInstanceForType() {
        return game.msg.MsgTurnbasedFight.CSTurnbasedMonsterChangeEnd.getDefaultInstance();
      }

      public game.msg.MsgTurnbasedFight.CSTurnbasedMonsterChangeEnd build() {
        game.msg.MsgTurnbasedFight.CSTurnbasedMonsterChangeEnd result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game.msg.MsgTurnbasedFight.CSTurnbasedMonsterChangeEnd buildPartial() {
        game.msg.MsgTurnbasedFight.CSTurnbasedMonsterChangeEnd result = new game.msg.MsgTurnbasedFight.CSTurnbasedMonsterChangeEnd(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game.msg.MsgTurnbasedFight.CSTurnbasedMonsterChangeEnd) {
          return mergeFrom((game.msg.MsgTurnbasedFight.CSTurnbasedMonsterChangeEnd)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game.msg.MsgTurnbasedFight.CSTurnbasedMonsterChangeEnd other) {
        if (other == game.msg.MsgTurnbasedFight.CSTurnbasedMonsterChangeEnd.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game.msg.MsgTurnbasedFight.CSTurnbasedMonsterChangeEnd parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game.msg.MsgTurnbasedFight.CSTurnbasedMonsterChangeEnd) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:game.msg.CSTurnbasedMonsterChangeEnd)
    }

    static {
      defaultInstance = new CSTurnbasedMonsterChangeEnd(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game.msg.CSTurnbasedMonsterChangeEnd)
  }

  public interface SCTurnbasedHumanSelSkillOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 fighterId = 1;
    /**
     * <code>required int32 fighterId = 1;</code>
     *
     * <pre>
     *战斗者ID
     * </pre>
     */
    boolean hasFighterId();
    /**
     * <code>required int32 fighterId = 1;</code>
     *
     * <pre>
     *战斗者ID
     * </pre>
     */
    int getFighterId();

    // optional int64 timeout = 2;
    /**
     * <code>optional int64 timeout = 2;</code>
     *
     * <pre>
     *选择时间到的时间戳
     * </pre>
     */
    boolean hasTimeout();
    /**
     * <code>optional int64 timeout = 2;</code>
     *
     * <pre>
     *选择时间到的时间戳
     * </pre>
     */
    long getTimeout();
  }
  /**
   * Protobuf type {@code game.msg.SCTurnbasedHumanSelSkill}
   *
   * <pre>
   *通知客户端轮到主角选择技能
   * </pre>
   */
  public static final class SCTurnbasedHumanSelSkill extends
      com.google.protobuf.GeneratedMessage
      implements SCTurnbasedHumanSelSkillOrBuilder {
    // Use SCTurnbasedHumanSelSkill.newBuilder() to construct.
    private SCTurnbasedHumanSelSkill(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SCTurnbasedHumanSelSkill(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SCTurnbasedHumanSelSkill defaultInstance;
    public static SCTurnbasedHumanSelSkill getDefaultInstance() {
      return defaultInstance;
    }

    public SCTurnbasedHumanSelSkill getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SCTurnbasedHumanSelSkill(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fighterId_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              timeout_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedHumanSelSkill_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedHumanSelSkill_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game.msg.MsgTurnbasedFight.SCTurnbasedHumanSelSkill.class, game.msg.MsgTurnbasedFight.SCTurnbasedHumanSelSkill.Builder.class);
    }

    public static com.google.protobuf.Parser<SCTurnbasedHumanSelSkill> PARSER =
        new com.google.protobuf.AbstractParser<SCTurnbasedHumanSelSkill>() {
      public SCTurnbasedHumanSelSkill parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SCTurnbasedHumanSelSkill(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SCTurnbasedHumanSelSkill> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 fighterId = 1;
    public static final int FIGHTERID_FIELD_NUMBER = 1;
    private int fighterId_;
    /**
     * <code>required int32 fighterId = 1;</code>
     *
     * <pre>
     *战斗者ID
     * </pre>
     */
    public boolean hasFighterId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 fighterId = 1;</code>
     *
     * <pre>
     *战斗者ID
     * </pre>
     */
    public int getFighterId() {
      return fighterId_;
    }

    // optional int64 timeout = 2;
    public static final int TIMEOUT_FIELD_NUMBER = 2;
    private long timeout_;
    /**
     * <code>optional int64 timeout = 2;</code>
     *
     * <pre>
     *选择时间到的时间戳
     * </pre>
     */
    public boolean hasTimeout() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 timeout = 2;</code>
     *
     * <pre>
     *选择时间到的时间戳
     * </pre>
     */
    public long getTimeout() {
      return timeout_;
    }

    private void initFields() {
      fighterId_ = 0;
      timeout_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasFighterId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, fighterId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, timeout_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, fighterId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, timeout_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game.msg.MsgTurnbasedFight.SCTurnbasedHumanSelSkill parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedHumanSelSkill parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedHumanSelSkill parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedHumanSelSkill parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedHumanSelSkill parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedHumanSelSkill parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedHumanSelSkill parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedHumanSelSkill parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedHumanSelSkill parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game.msg.MsgTurnbasedFight.SCTurnbasedHumanSelSkill parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game.msg.MsgTurnbasedFight.SCTurnbasedHumanSelSkill prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game.msg.SCTurnbasedHumanSelSkill}
     *
     * <pre>
     *通知客户端轮到主角选择技能
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game.msg.MsgTurnbasedFight.SCTurnbasedHumanSelSkillOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedHumanSelSkill_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedHumanSelSkill_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game.msg.MsgTurnbasedFight.SCTurnbasedHumanSelSkill.class, game.msg.MsgTurnbasedFight.SCTurnbasedHumanSelSkill.Builder.class);
      }

      // Construct using game.msg.MsgTurnbasedFight.SCTurnbasedHumanSelSkill.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        fighterId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        timeout_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game.msg.MsgTurnbasedFight.internal_static_game_msg_SCTurnbasedHumanSelSkill_descriptor;
      }

      public game.msg.MsgTurnbasedFight.SCTurnbasedHumanSelSkill getDefaultInstanceForType() {
        return game.msg.MsgTurnbasedFight.SCTurnbasedHumanSelSkill.getDefaultInstance();
      }

      public game.msg.MsgTurnbasedFight.SCTurnbasedHumanSelSkill build() {
        game.msg.MsgTurnbasedFight.SCTurnbasedHumanSelSkill result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game.msg.MsgTurnbasedFight.SCTurnbasedHumanSelSkill buildPartial() {
        game.msg.MsgTurnbasedFight.SCTurnbasedHumanSelSkill result = new game.msg.MsgTurnbasedFight.SCTurnbasedHumanSelSkill(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fighterId_ = fighterId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.timeout_ = timeout_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game.msg.MsgTurnbasedFight.SCTurnbasedHumanSelSkill) {
          return mergeFrom((game.msg.MsgTurnbasedFight.SCTurnbasedHumanSelSkill)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game.msg.MsgTurnbasedFight.SCTurnbasedHumanSelSkill other) {
        if (other == game.msg.MsgTurnbasedFight.SCTurnbasedHumanSelSkill.getDefaultInstance()) return this;
        if (other.hasFighterId()) {
          setFighterId(other.getFighterId());
        }
        if (other.hasTimeout()) {
          setTimeout(other.getTimeout());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasFighterId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game.msg.MsgTurnbasedFight.SCTurnbasedHumanSelSkill parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game.msg.MsgTurnbasedFight.SCTurnbasedHumanSelSkill) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 fighterId = 1;
      private int fighterId_ ;
      /**
       * <code>required int32 fighterId = 1;</code>
       *
       * <pre>
       *战斗者ID
       * </pre>
       */
      public boolean hasFighterId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 fighterId = 1;</code>
       *
       * <pre>
       *战斗者ID
       * </pre>
       */
      public int getFighterId() {
        return fighterId_;
      }
      /**
       * <code>required int32 fighterId = 1;</code>
       *
       * <pre>
       *战斗者ID
       * </pre>
       */
      public Builder setFighterId(int value) {
        bitField0_ |= 0x00000001;
        fighterId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 fighterId = 1;</code>
       *
       * <pre>
       *战斗者ID
       * </pre>
       */
      public Builder clearFighterId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fighterId_ = 0;
        onChanged();
        return this;
      }

      // optional int64 timeout = 2;
      private long timeout_ ;
      /**
       * <code>optional int64 timeout = 2;</code>
       *
       * <pre>
       *选择时间到的时间戳
       * </pre>
       */
      public boolean hasTimeout() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 timeout = 2;</code>
       *
       * <pre>
       *选择时间到的时间戳
       * </pre>
       */
      public long getTimeout() {
        return timeout_;
      }
      /**
       * <code>optional int64 timeout = 2;</code>
       *
       * <pre>
       *选择时间到的时间戳
       * </pre>
       */
      public Builder setTimeout(long value) {
        bitField0_ |= 0x00000002;
        timeout_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 timeout = 2;</code>
       *
       * <pre>
       *选择时间到的时间戳
       * </pre>
       */
      public Builder clearTimeout() {
        bitField0_ = (bitField0_ & ~0x00000002);
        timeout_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:game.msg.SCTurnbasedHumanSelSkill)
    }

    static {
      defaultInstance = new SCTurnbasedHumanSelSkill(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game.msg.SCTurnbasedHumanSelSkill)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_msg_SCTurnbasedStageStep_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_msg_SCTurnbasedStageStep_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_msg_SCTurnbasedObjectEnter_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_msg_SCTurnbasedObjectEnter_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_msg_SCTurnbasedObjectLeave_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_msg_SCTurnbasedObjectLeave_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_msg_SCTurnbasedRoundChange_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_msg_SCTurnbasedRoundChange_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_msg_SCTurnbasedCastSkill_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_msg_SCTurnbasedCastSkill_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_msg_SCTurnbasedRoundOrderEnd_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_msg_SCTurnbasedRoundOrderEnd_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_msg_SCTurnbasedBuff_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_msg_SCTurnbasedBuff_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_msg_CSTurnbasedCastSkill_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_msg_CSTurnbasedCastSkill_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_msg_CSTurnbasedSpeed_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_msg_CSTurnbasedSpeed_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_msg_SCTurnbasedSpeed_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_msg_SCTurnbasedSpeed_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_msg_CSTurnbasedAutoFight_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_msg_CSTurnbasedAutoFight_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_msg_SCTurnbasedAutoFight_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_msg_SCTurnbasedAutoFight_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_msg_CSTurnbasedStartFight_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_msg_CSTurnbasedStartFight_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_msg_CSTurnbasedQuickFight_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_msg_CSTurnbasedQuickFight_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_msg_SCTurnbasedFinish_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_msg_SCTurnbasedFinish_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_msg_SCTurnbasedRoundEnd_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_msg_SCTurnbasedRoundEnd_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_msg_CSTurnbasedRoundEnd_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_msg_CSTurnbasedRoundEnd_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_msg_CSTurnbasedStopFight_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_msg_CSTurnbasedStopFight_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_msg_SCTurnbasedStopFight_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_msg_SCTurnbasedStopFight_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_msg_CSTurnbasedActionEnd_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_msg_CSTurnbasedActionEnd_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_msg_SCTurnbasedActionStart_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_msg_SCTurnbasedActionStart_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_msg_CSTurnbasedLeaveFight_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_msg_CSTurnbasedLeaveFight_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_msg_SCTurnbasedRageSkillWaitList_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_msg_SCTurnbasedRageSkillWaitList_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_msg_CSTurnbasedMonsterChangeEnd_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_msg_CSTurnbasedMonsterChangeEnd_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_msg_SCTurnbasedHumanSelSkill_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_msg_SCTurnbasedHumanSelSkill_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\030msg.turnbasedFight.proto\022\010game.msg\032\rop" +
      "tions.proto\032\014define.proto\"\236\002\n\024SCTurnbase" +
      "dStageStep\022\014\n\004step\030\001 \001(\005\022\017\n\007stepAll\030\002 \001(" +
      "\005\022+\n\005team1\030\003 \001(\0132\034.game.msg.DTurnbasedTe" +
      "amObjs\022+\n\005team2\030\004 \001(\0132\034.game.msg.DTurnba" +
      "sedTeamObjs\022%\n\010selfTeam\030\005 \001(\0162\023.game.msg" +
      ".ETeamType\022&\n\tpriorTeam\030\006 \001(\0162\023.game.msg" +
      ".ETeamType\022\016\n\006bossId\030\007 \001(\005\022\025\n\rcanQuickFi" +
      "ght\030\010 \001(\010\022\020\n\010multiple\030\t \001(\005:\005\210\303\032\331O\"Q\n\026SC" +
      "TurnbasedObjectEnter\0220\n\014fightObjList\030\001 \003",
      "(\0132\032.game.msg.DTurnbasedObject:\005\210\303\032\332O\"Q\n" +
      "\026SCTurnbasedObjectLeave\0220\n\014fightObjList\030" +
      "\001 \003(\0132\032.game.msg.DTurnbasedObject:\005\210\303\032\333O" +
      "\"h\n\026SCTurnbasedRoundChange\022\r\n\005round\030\001 \001(" +
      "\005\022\020\n\010maxRound\030\002 \001(\005\022&\n\004buff\030\003 \003(\0132\030.game" +
      ".msg.DTurnbasedBuff:\005\210\303\032\334O\"\241\001\n\024SCTurnbas" +
      "edCastSkill\022\020\n\010casterId\030\001 \001(\005\022\n\n\002sn\030\002 \001(" +
      "\005\0223\n\ntargetList\030\003 \003(\0132\037.game.msg.DTurnba" +
      "sedSkillTarget\022/\n\006caster\030\004 \001(\0132\037.game.ms" +
      "g.DTurnbasedSkillTarget:\005\210\303\032\335O\"I\n\030SCTurn",
      "basedRoundOrderEnd\022&\n\004buff\030\001 \003(\0132\030.game." +
      "msg.DTurnbasedBuff:\005\210\303\032\336O\"\202\001\n\017SCTurnbase" +
      "dBuff\022\020\n\010casterId\030\001 \001(\005\022&\n\004buff\030\002 \001(\0132\030." +
      "game.msg.DTurnbasedBuff\022\020\n\010isRemove\030\003 \001(" +
      "\010\022\016\n\006damage\030\004 \001(\005\022\014\n\004rage\030\005 \001(\005:\005\210\303\032\337O\";" +
      "\n\024CSTurnbasedCastSkill\022\n\n\002sn\030\001 \002(\005\022\020\n\010ca" +
      "sterId\030\002 \002(\005:\005\210\303\032\340O\"(\n\020CSTurnbasedSpeed\022" +
      "\r\n\005speed\030\001 \001(\002:\005\210\303\032\355O\"(\n\020SCTurnbasedSpee" +
      "d\022\r\n\005speed\030\001 \001(\002:\005\210\303\032\356O\"+\n\024CSTurnbasedAu" +
      "toFight\022\014\n\004auto\030\001 \001(\010:\005\210\303\032\357O\"+\n\024SCTurnba",
      "sedAutoFight\022\014\n\004auto\030\001 \001(\010:\005\210\303\032\360O\"\036\n\025CST" +
      "urnbasedStartFight:\005\210\303\032\361O\"\036\n\025CSTurnbased" +
      "QuickFight:\005\210\303\032\362O\"\364\001\n\021SCTurnbasedFinish\022" +
      "$\n\007winTeam\030\001 \001(\0162\023.game.msg.ETeamType\0221\n" +
      "\007objList\030\002 \003(\0132 .game.msg.DTurnbasedFini" +
      "shObject\022,\n\tfightType\030\003 \001(\0162\031.game.msg.E" +
      "CrossFightType\022\014\n\004star\030\004 \003(\005\022\014\n\004harm\030\005 \003" +
      "(\005\022\017\n\007param32\030\006 \003(\005\022\017\n\007param64\030\007 \003(\003\022\023\n\013" +
      "isCombatEnd\030\010 \001(\010:\005\210\303\032\363O\"+\n\023SCTurnbasedR" +
      "oundEnd\022\r\n\005round\030\001 \001(\005:\005\210\303\032\364O\"+\n\023CSTurnb",
      "asedRoundEnd\022\r\n\005round\030\001 \001(\005:\005\210\303\032\365O\"+\n\024CS" +
      "TurnbasedStopFight\022\014\n\004stop\030\001 \001(\010:\005\210\303\032\366O\"" +
      "+\n\024SCTurnbasedStopFight\022\014\n\004stop\030\001 \001(\010:\005\210" +
      "\303\032\367O\"-\n\024CSTurnbasedActionEnd\022\016\n\006select\030\001" +
      " \001(\005:\005\210\303\032\370O\"1\n\026SCTurnbasedActionStart\022\020\n" +
      "\010actionId\030\001 \001(\005:\005\210\303\032\371O\"\036\n\025CSTurnbasedLea" +
      "veFight:\005\210\303\032\372O\"J\n\034SCTurnbasedRageSkillWa" +
      "itList\022\021\n\tfighterId\030\001 \003(\005\022\020\n\010removeId\030\002 " +
      "\003(\005:\005\210\303\032\373O\"$\n\033CSTurnbasedMonsterChangeEn" +
      "d:\005\210\303\032\374O\"E\n\030SCTurnbasedHumanSelSkill\022\021\n\t",
      "fighterId\030\001 \002(\005\022\017\n\007timeout\030\002 \001(\003:\005\210\303\032\205R"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_game_msg_SCTurnbasedStageStep_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_game_msg_SCTurnbasedStageStep_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_msg_SCTurnbasedStageStep_descriptor,
              new java.lang.String[] { "Step", "StepAll", "Team1", "Team2", "SelfTeam", "PriorTeam", "BossId", "CanQuickFight", "Multiple", });
          internal_static_game_msg_SCTurnbasedObjectEnter_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_game_msg_SCTurnbasedObjectEnter_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_msg_SCTurnbasedObjectEnter_descriptor,
              new java.lang.String[] { "FightObjList", });
          internal_static_game_msg_SCTurnbasedObjectLeave_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_game_msg_SCTurnbasedObjectLeave_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_msg_SCTurnbasedObjectLeave_descriptor,
              new java.lang.String[] { "FightObjList", });
          internal_static_game_msg_SCTurnbasedRoundChange_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_game_msg_SCTurnbasedRoundChange_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_msg_SCTurnbasedRoundChange_descriptor,
              new java.lang.String[] { "Round", "MaxRound", "Buff", });
          internal_static_game_msg_SCTurnbasedCastSkill_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_game_msg_SCTurnbasedCastSkill_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_msg_SCTurnbasedCastSkill_descriptor,
              new java.lang.String[] { "CasterId", "Sn", "TargetList", "Caster", });
          internal_static_game_msg_SCTurnbasedRoundOrderEnd_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_game_msg_SCTurnbasedRoundOrderEnd_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_msg_SCTurnbasedRoundOrderEnd_descriptor,
              new java.lang.String[] { "Buff", });
          internal_static_game_msg_SCTurnbasedBuff_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_game_msg_SCTurnbasedBuff_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_msg_SCTurnbasedBuff_descriptor,
              new java.lang.String[] { "CasterId", "Buff", "IsRemove", "Damage", "Rage", });
          internal_static_game_msg_CSTurnbasedCastSkill_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_game_msg_CSTurnbasedCastSkill_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_msg_CSTurnbasedCastSkill_descriptor,
              new java.lang.String[] { "Sn", "CasterId", });
          internal_static_game_msg_CSTurnbasedSpeed_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_game_msg_CSTurnbasedSpeed_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_msg_CSTurnbasedSpeed_descriptor,
              new java.lang.String[] { "Speed", });
          internal_static_game_msg_SCTurnbasedSpeed_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_game_msg_SCTurnbasedSpeed_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_msg_SCTurnbasedSpeed_descriptor,
              new java.lang.String[] { "Speed", });
          internal_static_game_msg_CSTurnbasedAutoFight_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_game_msg_CSTurnbasedAutoFight_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_msg_CSTurnbasedAutoFight_descriptor,
              new java.lang.String[] { "Auto", });
          internal_static_game_msg_SCTurnbasedAutoFight_descriptor =
            getDescriptor().getMessageTypes().get(11);
          internal_static_game_msg_SCTurnbasedAutoFight_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_msg_SCTurnbasedAutoFight_descriptor,
              new java.lang.String[] { "Auto", });
          internal_static_game_msg_CSTurnbasedStartFight_descriptor =
            getDescriptor().getMessageTypes().get(12);
          internal_static_game_msg_CSTurnbasedStartFight_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_msg_CSTurnbasedStartFight_descriptor,
              new java.lang.String[] { });
          internal_static_game_msg_CSTurnbasedQuickFight_descriptor =
            getDescriptor().getMessageTypes().get(13);
          internal_static_game_msg_CSTurnbasedQuickFight_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_msg_CSTurnbasedQuickFight_descriptor,
              new java.lang.String[] { });
          internal_static_game_msg_SCTurnbasedFinish_descriptor =
            getDescriptor().getMessageTypes().get(14);
          internal_static_game_msg_SCTurnbasedFinish_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_msg_SCTurnbasedFinish_descriptor,
              new java.lang.String[] { "WinTeam", "ObjList", "FightType", "Star", "Harm", "Param32", "Param64", "IsCombatEnd", });
          internal_static_game_msg_SCTurnbasedRoundEnd_descriptor =
            getDescriptor().getMessageTypes().get(15);
          internal_static_game_msg_SCTurnbasedRoundEnd_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_msg_SCTurnbasedRoundEnd_descriptor,
              new java.lang.String[] { "Round", });
          internal_static_game_msg_CSTurnbasedRoundEnd_descriptor =
            getDescriptor().getMessageTypes().get(16);
          internal_static_game_msg_CSTurnbasedRoundEnd_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_msg_CSTurnbasedRoundEnd_descriptor,
              new java.lang.String[] { "Round", });
          internal_static_game_msg_CSTurnbasedStopFight_descriptor =
            getDescriptor().getMessageTypes().get(17);
          internal_static_game_msg_CSTurnbasedStopFight_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_msg_CSTurnbasedStopFight_descriptor,
              new java.lang.String[] { "Stop", });
          internal_static_game_msg_SCTurnbasedStopFight_descriptor =
            getDescriptor().getMessageTypes().get(18);
          internal_static_game_msg_SCTurnbasedStopFight_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_msg_SCTurnbasedStopFight_descriptor,
              new java.lang.String[] { "Stop", });
          internal_static_game_msg_CSTurnbasedActionEnd_descriptor =
            getDescriptor().getMessageTypes().get(19);
          internal_static_game_msg_CSTurnbasedActionEnd_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_msg_CSTurnbasedActionEnd_descriptor,
              new java.lang.String[] { "Select", });
          internal_static_game_msg_SCTurnbasedActionStart_descriptor =
            getDescriptor().getMessageTypes().get(20);
          internal_static_game_msg_SCTurnbasedActionStart_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_msg_SCTurnbasedActionStart_descriptor,
              new java.lang.String[] { "ActionId", });
          internal_static_game_msg_CSTurnbasedLeaveFight_descriptor =
            getDescriptor().getMessageTypes().get(21);
          internal_static_game_msg_CSTurnbasedLeaveFight_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_msg_CSTurnbasedLeaveFight_descriptor,
              new java.lang.String[] { });
          internal_static_game_msg_SCTurnbasedRageSkillWaitList_descriptor =
            getDescriptor().getMessageTypes().get(22);
          internal_static_game_msg_SCTurnbasedRageSkillWaitList_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_msg_SCTurnbasedRageSkillWaitList_descriptor,
              new java.lang.String[] { "FighterId", "RemoveId", });
          internal_static_game_msg_CSTurnbasedMonsterChangeEnd_descriptor =
            getDescriptor().getMessageTypes().get(23);
          internal_static_game_msg_CSTurnbasedMonsterChangeEnd_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_msg_CSTurnbasedMonsterChangeEnd_descriptor,
              new java.lang.String[] { });
          internal_static_game_msg_SCTurnbasedHumanSelSkill_descriptor =
            getDescriptor().getMessageTypes().get(24);
          internal_static_game_msg_SCTurnbasedHumanSelSkill_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_msg_SCTurnbasedHumanSelSkill_descriptor,
              new java.lang.String[] { "FighterId", "Timeout", });
          com.google.protobuf.ExtensionRegistry registry =
            com.google.protobuf.ExtensionRegistry.newInstance();
          registry.add(game.msg.Options.msgid);
          registry.add(game.msg.Options.msgid);
          registry.add(game.msg.Options.msgid);
          registry.add(game.msg.Options.msgid);
          registry.add(game.msg.Options.msgid);
          registry.add(game.msg.Options.msgid);
          registry.add(game.msg.Options.msgid);
          registry.add(game.msg.Options.msgid);
          registry.add(game.msg.Options.msgid);
          registry.add(game.msg.Options.msgid);
          registry.add(game.msg.Options.msgid);
          registry.add(game.msg.Options.msgid);
          registry.add(game.msg.Options.msgid);
          registry.add(game.msg.Options.msgid);
          registry.add(game.msg.Options.msgid);
          registry.add(game.msg.Options.msgid);
          registry.add(game.msg.Options.msgid);
          registry.add(game.msg.Options.msgid);
          registry.add(game.msg.Options.msgid);
          registry.add(game.msg.Options.msgid);
          registry.add(game.msg.Options.msgid);
          registry.add(game.msg.Options.msgid);
          registry.add(game.msg.Options.msgid);
          registry.add(game.msg.Options.msgid);
          registry.add(game.msg.Options.msgid);
          return registry;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          game.msg.Options.getDescriptor(),
          game.msg.Define.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
